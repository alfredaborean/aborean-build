{"version":3,"file":"static/js/8149.02ecd6a3.chunk.js","mappings":"uJACA,SAAiB,C,qSCDJ,MAAAA,EAAA,iLAYPC,EAAQC,EAAAA,GAAOC,GAAG;;;;EAKlBC,EAAYF,EAAAA,GAAOG,GAAG;;;;EAKtBC,GAASJ,EAAAA,EAAAA,IAAOE,EAAU;;EAG1BG,GAAcL,EAAAA,EAAAA,IAAOE,EAAU;;;;;kCAKH,EAAGI,WAAYA,EAAMC,WAAWC;;;;EAKnD,SAASC,GAAS,MAAEC,EAAK,SAAEC,EAAQ,aAAEC,IAClD,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAWK,EAAAA,EAAWC,YAAcD,EAAAA,EAAWE,KACvDC,EAAYR,EAAWK,EAAAA,EAAWI,eAAiBJ,EAAAA,EAAWK,cACpE,OAAO,SAACpB,EAAAA,C,UACJ,UAACqB,EAAAA,QAAKA,CAACC,eAAa,EAACC,KAAMC,EAAAA,GAAkBC,U,WAC3C,UAAC1B,EAAAA,C,WACC,UAACF,EAAAA,C,UACEQ,IAAS,SAACS,EAAAA,C,SAAM,QAChBR,IAAY,SAACY,EAAAA,CAAUQ,MAAM,W,UAC1B,SAACC,EAAAA,MAAKA,CAACC,QAAQ,8BAGrB,SAAClC,EAAAA,CAAMmC,IAAKrB,EAAasB,EAAYC,EAAYC,IAAI,cAEtDzB,IAAgB,SAACT,MAAAA,CAAImC,UAAAxC,E,UAClB,SAACyC,EAAAA,EAAMA,CAACC,QAAS,IAAMvB,EAAS,KAAMwB,QAAQ,U,UAC5C,SAACT,EAAAA,MAAKA,CAACC,QAAQ,0BAK7B,C","sources":["webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?8b6d","pages/NotFound/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport { Button, Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const navigate = useNavigate();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper>\r\n      <Trace logImpression page={InterfacePageName.NOT_FOUND}>\r\n        <Header>\r\n          <Container>\r\n            {title ?? <Title>404</Title>}\r\n            {subtitle ?? <Paragraph color=\"neutral2\">\r\n                <Trans i18nKey=\"common.pageNotFound\" />\r\n              </Paragraph>}\r\n          </Container>\r\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\r\n        </Header>\r\n        {actionButton ?? <Flex row alignSelf=\"stretch\">\r\n            <Button onPress={() => navigate(\"/\")} variant=\"branded\">\r\n              <Trans i18nKey=\"notFound.oops\" />\r\n            </Button>\r\n          </Flex>}\r\n      </Trace>\r\n    </PageWrapper>;\n}\n"],"names":["_cn","Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","lg","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","navigate","useNavigate","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","color","Trans","i18nKey","src","darkImage","lightImage","alt","className","Button","onPress","variant"],"sourceRoot":""}