{"version":3,"file":"static/js/3898.5d9acbb9.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Liquidity/components/table/Table.tsx?b811","webpack://@uniswap/interface/./src/pages/Liquidity/components/LiquidityProvider.tsx?ec89","webpack://@uniswap/interface/./src/pages/Liquidity/components/table/PoolsTable.tsx?d523","webpack://@uniswap/interface/./src/pages/Liquidity/components/LiquidityPool.tsx?ef2b","webpack://@uniswap/interface/./src/pages/Liquidity/index.tsx?b228","webpack://@uniswap/interface/./src/pages/Liquidity/components/FilterPools.tsx?2895","components/Table/icons.tsx","pages/Liquidity/components/FilterPools.tsx","pages/Liquidity/components/SearchBar.tsx","pages/Liquidity/components/LiquidityPool.tsx","pages/Liquidity/components/LiquidityProvider.tsx","pages/Liquidity/components/table/Table.tsx","pages/Liquidity/components/table/PoolsTable.tsx","pages/Liquidity/index.tsx","state/explore/topTokens.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nexport const DropdownIcon = (props) => <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n    <path\n  d=\"M7.99954 13.1667C7.82887 13.1667 7.65818 13.1014 7.52818 12.9714L4.86152 10.3047C4.60085 10.044 4.60085 9.62267 4.86152 9.362C5.12218 9.10134 5.54356 9.10134 5.80422 9.362L7.99954 11.5573L10.1948 9.362C10.4555 9.10134 10.8769 9.10134 11.1376 9.362C11.3982 9.62267 11.3982 10.044 11.1376 10.3047L8.47089 12.9714C8.34089 13.1014 8.1702 13.1667 7.99954 13.1667Z\"\n  fill=\"#9B9B9B\"\n/>\r\n    <path\n  d=\"M10.6662 7.83336C10.4955 7.83336 10.3248 7.76805 10.1948 7.63805L7.99954 5.44274L5.80422 7.63805C5.54356 7.89872 5.12218 7.89872 4.86152 7.63805C4.60085 7.37738 4.60085 6.95601 4.86152 6.69534L7.52818 4.02868C7.78885 3.76801 8.21022 3.76801 8.47089 4.02868L11.1376 6.69534C11.3982 6.95601 11.3982 7.37738 11.1376 7.63805C11.0076 7.76805 10.8369 7.83336 10.6662 7.83336Z\"\n  fill=\"#9B9B9B\"\n/>\r\n  </svg>;\nexport const MissingDataBars = ({ color }) => <svg fill=\"none\" height=\"18\" viewBox=\"10 10 20 20\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\n  clipRule=\"evenodd\"\n  d=\"m19.5833 27.5h.8334c.8333 0 1.25-.4167 1.25-1.25v-2.2203l-3.3326 2.2802c.0197.7934.4361 1.1901 1.2492 1.1901zm-1.25-8.4596v-5.2904c0-.8333.4167-1.25 1.25-1.25h.8334c.8333 0 1.25.4167 1.25 1.25v3.0097zm5.8334 3.2788 3.3333-2.2807v6.2115c0 .8333-.4167 1.25-1.25 1.25h-.8333c-.8334 0-1.25-.4167-1.25-1.25zm-8.3866-1.5318-3.2801 2.2443v-1.7817c0-.8333.4167-1.25 1.25-1.25h.8333c.6614 0 1.0603.2625 1.1968.7874zm-2.862 6.4904-.3496-.511c.0672.2197.1837.39.3496.511z\"\n  fill={color}\n  fillRule=\"evenodd\"\n/>\r\n    <path d=\"m12.5 26.6667 15.8333-10.8333\" stroke={color} strokeLinecap=\"round\" strokeWidth=\"2\" />\r\n  </svg>;\nexport const MissingDataIcon = (props) => <svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n    <rect fill=\"#fff\" fillOpacity=\".12\" height=\"40\" rx=\"12\" width=\"40\" />\r\n    <path\n  clipRule=\"evenodd\"\n  d=\"m19.5833 27.5h.8334c.8333 0 1.25-.4167 1.25-1.25v-2.2203l-3.3326 2.2802c.0197.7934.4361 1.1901 1.2492 1.1901zm-1.25-8.4596v-5.2904c0-.8333.4167-1.25 1.25-1.25h.8334c.8333 0 1.25.4167 1.25 1.25v3.0097zm5.8334 3.2788 3.3333-2.2807v6.2115c0 .8333-.4167 1.25-1.25 1.25h-.8333c-.8334 0-1.25-.4167-1.25-1.25zm-8.3866-1.5318-3.2801 2.2443v-1.7817c0-.8333.4167-1.25 1.25-1.25h.8333c.6614 0 1.0603.2625 1.1968.7874zm-2.862 6.4904-.3496-.511c.0672.2197.1837.39.3496.511z\"\n  fill=\"#9b9b9b\"\n  fillRule=\"evenodd\"\n/>\r\n    <path d=\"m12.5 26.6667 15.8333-10.8333\" stroke=\"#9b9b9b\" strokeLinecap=\"round\" strokeWidth=\"2\" />\r\n  </svg>;\n","\"use strict\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Separator, Text, styled as UiStyled } from \"ui/src\";\nimport { Check, Plus } from \"ui/src/components/icons\";\nconst Button = styled.button`\n  padding: 8px 12px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  hover {\n    color: red;\n  }\n`;\nconst TextCotainer = UiStyled(Text, {\n  variant: \"body3\",\n  color: \"$neutral1\",\n  cursor: \"pointer\",\n  hoverStyle: {\n    color: \"$accent1\"\n  }\n});\nconst FIlterContainer = UiStyled(Flex, {\n  row: true,\n  alignItems: \"center\",\n  gap: \"$spacing12\",\n  borderStyle: \"solid\",\n  borderWidth: 1,\n  borderColor: \"$surface2\",\n  borderRadius: \"$rounded12\"\n});\nexport default function FilterPools() {\n  const [activeFilter, setActiveFilter] = useState({\n    Basic: false,\n    Consetrated: false,\n    Stable: false,\n    Volatile: false,\n    Incetivized: false,\n    \"Low TVL\": false,\n    ALM: false\n  });\n  const GenerateFilterButton = function({ type, divider }) {\n    const handleFilter = function(value) {\n      switch (type) {\n        case \"Basic\":\n          setActiveFilter({\n            ...activeFilter,\n            Consetrated: !value\n          });\n          return;\n        case \"Consetrated\":\n          setActiveFilter({\n            ...activeFilter,\n            Basic: !value\n          });\n          return;\n        case \"Stable\":\n          setActiveFilter({\n            ...activeFilter,\n            Volatile: !value\n          });\n          return;\n        case \"Volatile\":\n          setActiveFilter({\n            ...activeFilter,\n            Stable: !value\n          });\n          return;\n        default:\n          setActiveFilter({\n            ...activeFilter,\n            [type]: value\n          });\n      }\n    };\n    return <>\n        {divider && <Separator vertical height={\"100%\"} />}\n        <Button onClick={() => handleFilter(!activeFilter[type])}>\n          <TextCotainer>{type}</TextCotainer> {activeFilter[type] ? <Checkmark /> : <PlusSign />}\n        </Button>\n      </>;\n  };\n  return <Flex row gap={\"$spacing12\"}>\n      <FIlterContainer>\n        <GenerateFilterButton type={\"Basic\"} />\n        <GenerateFilterButton type={\"Consetrated\"} divider />\n      </FIlterContainer>\n\n      <FIlterContainer>\n        <GenerateFilterButton type={\"Stable\"} />\n        <GenerateFilterButton type={\"Volatile\"} divider />\n      </FIlterContainer>\n\n      <FIlterContainer>\n        <GenerateFilterButton type={\"Incetivized\"} />\n      </FIlterContainer>\n\n      <FIlterContainer>\n        <GenerateFilterButton type={\"Low TVL\"} />\n      </FIlterContainer>\n\n      <FIlterContainer>\n        <GenerateFilterButton type={\"ALM\"} />\n      </FIlterContainer>\n    </Flex>;\n}\nconst Checkmark = function() {\n  return <Check color={\"$greenVibrant\"} size={\"$icon.12\"} />;\n};\nconst PlusSign = function() {\n  return <Plus color={\"$accent1\"} size={\"$icon.12\"} />;\n};\n","\"use strict\";\nimport { InterfaceElementName, InterfaceEventName } from \"@uniswap/analytics-events\";\nimport { ReactComponent as SearchIcon } from \"assets/svg/search.svg\";\nimport { exploreSearchStringAtom } from \"components/Tokens/state\";\nimport useDebounce from \"hooks/useDebounce\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\nimport { useEffect, useState } from \"react\";\nimport { transitions } from \"theme/styles\";\nimport { Flex, IconButton, Input, useSporeColors } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { zIndexes } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nexport default function SearchBar({ tab }) {\n  const currentString = useAtomValue(exploreSearchStringAtom);\n  const [localFilterString, setLocalFilterString] = useState(currentString);\n  const setFilterString = useUpdateAtom(exploreSearchStringAtom);\n  const debouncedLocalFilterString = useDebounce(localFilterString, 300);\n  const [isOpen, setIsOpen] = useState(false);\n  const colors = useSporeColors();\n  useEffect(() => {\n    setLocalFilterString(currentString);\n    if (currentString) {\n      setIsOpen(true);\n    }\n  }, [currentString]);\n  useEffect(() => {\n    setFilterString(debouncedLocalFilterString);\n  }, [debouncedLocalFilterString, setFilterString]);\n  const handleFocus = () => setIsOpen(true);\n  const handleBlur = () => {\n    if (localFilterString === \"\") {\n      setIsOpen(false);\n    }\n  };\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  return <Trace\n    logFocus\n    eventOnTrigger={InterfaceEventName.EXPLORE_SEARCH_SELECTED}\n    element={InterfaceElementName.EXPLORE_SEARCH_INPUT}\n  >\r\n      <Flex\n    $md={{\n      position: isOpen ? \"absolute\" : \"relative\",\n      width: isOpen ? \"100%\" : \"auto\",\n      left: 0,\n      right: 0,\n      zIndex: zIndexes.mask,\n      height: 40\n    }}\n    height={40}\n    centered\n  >\r\n        <SearchIcon\n    fill={colors.neutral1.val}\n    style={{ position: \"absolute\", left: \"12px\" }}\n    width={20}\n    height={20}\n    pointerEvents=\"none\"\n  />\r\n        <Input\n    data-testid=\"explore-tokens-search-input\"\n    placeholder=\"Symbol or address...\"\n    placeholderTextColor=\"$neutral3\"\n    id=\"searchBar\"\n    autoComplete=\"off\"\n    value={localFilterString}\n    onChangeText={(value) => setLocalFilterString(value)}\n    backgroundColor=\"$surface1\"\n    borderRadius={12}\n    borderWidth={1}\n    borderColor={isOpen ? \"$accent1\" : \"$surface3\"}\n    height=\"100%\"\n    width={isOpen ? 230 : 0}\n    pl={34}\n    color=\"$neutral2\"\n    textOverflow=\"ellipsis\"\n    onFocus={handleFocus}\n    onBlur={handleBlur}\n    $platform-web={{\n      transitionDuration: transitions.duration.fast\n    }}\n    focusStyle={{\n      backgroundColor: \"$surface1\",\n      borderColor: \"$accent1\",\n      color: \"$neutral1\"\n    }}\n    hoverStyle={{\n      backgroundColor: \"$surface1\"\n    }}\n    $md={{\n      \"$platform-web\": {\n        transitionDuration: \"initial\"\n      },\n      width: isOpen ? \"100%\" : 0\n    }}\n  />\r\n        {isOpen && <Flex row centered position=\"absolute\" right={6} zIndex={zIndexes.mask}>\r\n            <IconButton size=\"xxsmall\" emphasis=\"secondary\" onPress={handleClose} icon={<X />} p={3} scale={0.8} />\r\n          </Flex>}\r\n      </Flex>\r\n    </Trace>;\n}\n","\"use strict\";\nimport { Flex, Text } from \"ui/src\";\nimport FilterPools from \"./FilterPools\";\nimport SearchBar from \"./SearchBar\";\nexport default function LiquidityPoolVoting() {\n  return <Flex>\n      <Text variant=\"heading3\">Liquidity Pools</Text>\n      <Flex mt=\"$spacing24\" row={true} gap=\"$gap16\" justifyContent=\"space-between\">\n        <FilterPools />\n        <SearchBar />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport styled from \"styled-components\";\nimport { Anchor, Flex, styled as TamagStyled, Text, useSporeColors } from \"ui/src\";\nimport { QuestionInCircle } from \"ui/src/components/icons\";\nimport { fonts } from \"ui/src/theme\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport LiquidityHowItWorksModal from \"./LIquidityHowItWorksModal\";\nexport default function LiquidityProvider() {\n  const { toggleModal: toggleHowItWorksModal } = useModalState(ModalName.HowItworks);\n  const colors = useSporeColors();\n  const TextCustom = TamagStyled(Text, {\n    variant: \"body3\",\n    cursor: \"pointer\",\n    lineHeight: \"2\"\n  });\n  const Button = styled.button`\n    padding: 8px 12px;\n    margin-top: 8px;\n    display: flex;\n    gap: 4px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: ${colors.accent1.val};\n    transition: all 250ms ease;\n    border-radius: 10px;\n    &:hover {\n      background-color: ${colors.slate.val};\n    }\n  `;\n  const info = [\n    { id: 1, name: \"TVL\", value: \"1.0B\" },\n    { id: 2, name: \"Fees\", value: \"1,568,667.2\" },\n    { id: 3, name: \"Volume\", value: \"1.43B\" }\n  ];\n  return <Flex\n    $platform-web={{\n      display: \"grid\",\n      gridTemplateColumns: \"6fr 2fr\",\n      gap: \"$gap24\"\n    }}\n    $sm={{\n      gridTemplateColumns: \"1fr\",\n      gap: \"$gap16\"\n    }}\n  >\n      <Flex\n    row\n    flexDirection=\"column\"\n    borderWidth={1}\n    borderColor=\"$surface3\"\n    borderRadius={\"$rounded12\"}\n    p={\"$spacing16\"}\n    background={`linear-gradient(90deg, ${colors.slate.val} 0%, ${colors.accent2.val} 100%);`}\n  >\n        <Flex className=\"top\" flexDirection=\"column\" gap={\"$gap12\"} justifyContent=\"space-between\" width={\"100%\"}>\n          <TextCustom maxWidth={\"24rem\"}>\n            Liquidity Providers{\" \"}\n            <TextCustom color={\"$neutral2\"}>\n              make low-slippage swaps possible. Deposit and Stake liquidity to earn ABX.\n            </TextCustom>\n          </TextCustom>\n\n          <TextCustom variant=\"body4\" color={\"$neutral3\"}>\n            There are currently 271 tokens listed.\n          </TextCustom>\n        </Flex>\n\n        <Flex className=\"bottom\" mt={\"$spacing16\"} row justifyContent=\"space-between\" gap={\"$gap16\"}>\n          <Flex className=\"left\" row gap={\"$gap32\"}>\n            {info.map((item) => <Flex key={item.id} gap={\"$gap4\"}>\n                <TextCustom variant=\"body3\" color={\"$neutral3\"}>\n                  {item.name}\n                </TextCustom>\n\n                <TextCustom variant=\"body2\">{item.value}</TextCustom>\n              </Flex>)}\n          </Flex>\n\n          <Anchor\n    href=\"/\"\n    py={\"$spacing2\"}\n    px={\"$spacing16\"}\n    fontFamily={\"$button\"}\n    fontSize={fonts.body2.fontSize}\n    borderRadius={\"$rounded12\"}\n    backgroundColor={\"$accent1\"}\n    cursor=\"pointer\"\n    transition=\"all 0.2s ease-in-out\"\n    color={\"$surface1\"}\n    $platform-web={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textDecorationLine: \"none\"\n    }}\n    hoverStyle={{ backgroundColor: \"$surface1\", color: \"$accent1\" }}\n  >\n            Deposite Liquidity\n          </Anchor>\n        </Flex>\n      </Flex>\n\n      <Flex\n    p={\"$spacing16\"}\n    borderRadius={\"$rounded12\"}\n    backgroundColor={\"$surface2\"}\n    borderWidth={1}\n    borderColor=\"$surface3\"\n    flexDirection=\"column\"\n    alignItems=\"flex-start\"\n    gap={\"$gap8\"}\n  >\n        <Text variant=\"subheading1\">How it works</Text>\n        <Text variant=\"body4\" color={\"$neutral3\"}>\n          The deeper the liquidity (TVL), the lower the slippage a pool will offer. LPs get ABX emissions, while ABX\n          lockers get the pool trading fees as an incentive to vote on the most productive pools.\n        </Text>\n        <Button onClick={toggleHowItWorksModal}>\n          <QuestionInCircle size={\"$icon.16\"} />\n          Read more\n        </Button>\n      </Flex>\n\n      <LiquidityHowItWorksModal />\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable\n} from \"@tanstack/react-table\";\nimport { useParentSize } from \"@visx/responsive\";\nimport Loader from \"components/Icons/LoadingSpinner\";\nimport { ErrorModal } from \"components/Table/ErrorBox\";\nimport { ScrollButton } from \"components/Table/ScrollButton\";\nimport { TableSizeProvider, useTableSize } from \"components/Table/TableSizeProvider\";\nimport {\n  CellContainer,\n  HeaderRow,\n  LOAD_MORE_BOTTOM_OFFSET,\n  LoadingIndicator,\n  LoadingIndicatorContainer,\n  NoDataFoundTableRow,\n  SHOW_RETURN_TO_TOP_OFFSET,\n  TableBodyContainer,\n  TableContainer,\n  TableHead,\n  TableRowLink,\n  TableScrollMask\n} from \"components/Table/styled\";\nimport { getCommonPinningStyles } from \"components/Table/utils\";\nimport useDebounce from \"hooks/useDebounce\";\nimport { forwardRef, memo, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ScrollSync, ScrollSyncPane } from \"react-scroll-sync\";\nimport { ThemedText } from \"theme/components\";\nimport { Flex, styled } from \"ui/src\";\nimport { useSporeColors } from \"ui/src/hooks/useSporeColors\";\nimport { INTERFACE_NAV_HEIGHT, zIndexes } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nconst TableCell = memo(({ cell, colors }) => {\n  return <CellContainer style={getCommonPinningStyles(cell.column, colors)}>\r\n      {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n    </CellContainer>;\n});\nTableCell.displayName = \"TableCell\";\nconst DataRow = styled(Flex, {\n  row: true,\n  alignItems: \"center\",\n  width: \"fit-content\",\n  minWidth: \"100%\",\n  height: \"100%\",\n  hoverStyle: { backgroundColor: \"$surface1Hovered\" },\n  borderStyle: \"solid\",\n  borderBottomWidth: 1,\n  borderTopWidth: 0,\n  borderLeftWidth: 0,\n  borderRightWidth: 0,\n  borderColor: \"$surface3\"\n});\nconst TableRow = ({ row }) => {\n  const analyticsContext = useTrace();\n  const rowOriginal = row.original;\n  const linkState = rowOriginal.linkState;\n  const rowTestId = rowOriginal.testId;\n  const colors = useSporeColors();\n  const { width: tableWidth } = useTableSize();\n  const rowHeight = 110;\n  const cells = row.getVisibleCells().map((cell) => <TableCell key={cell.id} cell={cell} colors={colors} />);\n  return <Trace\n    logPress\n    element={rowOriginal.analytics?.elementName}\n    properties={{\n      ...rowOriginal.analytics?.properties,\n      ...analyticsContext\n    }}\n  >\r\n      {\"link\" in rowOriginal && typeof rowOriginal.link === \"string\" ? <TableRowLink to={rowOriginal.link} state={linkState} data-testid={rowTestId}>\r\n          <DataRow height={rowHeight}>{cells}</DataRow>\r\n        </TableRowLink> : <DataRow height={rowHeight} data-testid={rowTestId}>\r\n          {cells}\r\n        </DataRow>}\r\n    </Trace>;\n};\nconst TableBody = forwardRef(({ table, loading, error }, ref) => {\n  const rows = table.getRowModel().rows;\n  if (loading || error) {\n    return <>\r\n        {Array.from({ length: 20 }, (_, rowIndex) => <DataRow key={`skeleton-row-${rowIndex}`}>\r\n            {table.getAllColumns().map((column, columnIndex) => <CellContainer key={`skeleton-row-${rowIndex}-column-${columnIndex}`}>\r\n                {flexRender(column.columnDef.cell, {})}\r\n              </CellContainer>)}\r\n          </DataRow>)}\r\n        {error && <ErrorModal\n      header={<Trans i18nKey=\"common.errorLoadingData.error\" />}\n      subtitle={<Trans i18nKey=\"error.dataUnavailable\" />}\n    />}\r\n      </>;\n  }\n  if (!rows.length) {\n    return <NoDataFoundTableRow py=\"$spacing20\">\r\n        <ThemedText.BodySecondary>\r\n          <Trans i18nKey=\"error.noData\" />\r\n        </ThemedText.BodySecondary>\r\n      </NoDataFoundTableRow>;\n  }\n  return <Flex ref={ref} position=\"relative\">\r\n      {rows.map((row) => <TableRow key={row.id} row={row} />)}\r\n    </Flex>;\n});\nTableBody.displayName = \"TableBody\";\nexport function Table({\n  columns,\n  data,\n  loading,\n  error,\n  loadMore,\n  maxWidth,\n  maxHeight,\n  defaultPinnedColumns = [],\n  forcePinning = false\n}) {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [showScrollRightButton, setShowScrollRightButton] = useState(false);\n  const [showScrollLeftButton, setShowScrollLeftButton] = useState(false);\n  const colors = useSporeColors();\n  const [pinnedColumns, setPinnedColumns] = useState([]);\n  const [scrollPosition, setScrollPosition] = useState({\n    distanceFromTop: 0,\n    distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n  });\n  const { distanceFromTop, distanceToBottom } = useDebounce(scrollPosition, 125);\n  const tableBodyRef = useRef(null);\n  const lastLoadedLengthRef = useRef(0);\n  const canLoadMore = useRef(true);\n  const isSticky = useMemo(() => !maxHeight, [maxHeight]);\n  const { parentRef, width, height, top, left } = useParentSize();\n  useEffect(() => {\n    const scrollableElement = maxHeight ? tableBodyRef.current : window;\n    if (scrollableElement === null) {\n      return void 0;\n    }\n    const updateScrollPosition = () => {\n      if (scrollableElement instanceof HTMLDivElement) {\n        const { scrollTop, scrollHeight, clientHeight } = scrollableElement;\n        setScrollPosition({\n          distanceFromTop: scrollTop,\n          distanceToBottom: scrollHeight - scrollTop - clientHeight\n        });\n      } else {\n        setScrollPosition({\n          distanceFromTop: scrollableElement.scrollY,\n          distanceToBottom: document.body.scrollHeight - scrollableElement.scrollY - scrollableElement.innerHeight\n        });\n      }\n    };\n    scrollableElement.addEventListener(\"scroll\", updateScrollPosition);\n    return () => scrollableElement.removeEventListener(\"scroll\", updateScrollPosition);\n  }, [loadMore, maxHeight, loadingMore, tableBodyRef]);\n  useEffect(() => {\n    if (distanceToBottom < LOAD_MORE_BOTTOM_OFFSET && !loadingMore && loadMore && canLoadMore.current && !error) {\n      setLoadingMore(true);\n      setScrollPosition({\n        distanceFromTop: SHOW_RETURN_TO_TOP_OFFSET,\n        distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n      });\n      loadMore({\n        onComplete: () => {\n          setLoadingMore(false);\n          if (data?.length === lastLoadedLengthRef.current) {\n            canLoadMore.current = false;\n          } else {\n            lastLoadedLengthRef.current = data?.length ?? 0;\n          }\n        }\n      });\n    }\n  }, [data?.length, distanceFromTop, distanceToBottom, error, loadMore, loading, loadingMore]);\n  const table = useReactTable({\n    columns,\n    data,\n    state: { columnPinning: { left: pinnedColumns } },\n    getCoreRowModel: getCoreRowModel()\n  });\n  useEffect(() => {\n    const resizeHandler = () => {\n      if (!defaultPinnedColumns.length) {\n        return;\n      }\n      if (maxWidth && window.innerWidth < maxWidth || forcePinning) {\n        setPinnedColumns(defaultPinnedColumns);\n      } else {\n        setPinnedColumns([]);\n      }\n    };\n    resizeHandler();\n    window.addEventListener(\"resize\", resizeHandler);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler);\n    };\n  }, [maxWidth, defaultPinnedColumns, forcePinning, table]);\n  useEffect(() => {\n    const container = tableBodyRef.current?.parentElement;\n    if (!container || loading) {\n      return void 0;\n    }\n    const horizontalScrollHandler = () => {\n      const maxScrollLeft = container.scrollWidth - container.clientWidth;\n      const nextShowScrollRightButton = container.scrollLeft < maxScrollLeft;\n      if (showScrollRightButton !== nextShowScrollRightButton) {\n        setShowScrollRightButton(nextShowScrollRightButton);\n      }\n      const nextShowScrollLeftButton = container.scrollLeft > 0;\n      if (showScrollLeftButton !== nextShowScrollLeftButton) {\n        setShowScrollLeftButton(nextShowScrollLeftButton);\n      }\n    };\n    horizontalScrollHandler();\n    container.addEventListener(\"scroll\", horizontalScrollHandler);\n    return () => {\n      container.removeEventListener(\"scroll\", horizontalScrollHandler);\n    };\n  }, [loading, showScrollLeftButton, showScrollRightButton, tableBodyRef]);\n  const headerHeight = useMemo(() => {\n    const header = document.getElementById(\"AppHeader\");\n    return header?.clientHeight || INTERFACE_NAV_HEIGHT;\n  }, []);\n  const scrollButtonTop = useMemo(() => {\n    if (maxHeight) {\n      return height / 2;\n    } else if (isSticky) {\n      return (window.innerHeight - (headerHeight + 12)) / 2;\n    }\n    return 0;\n  }, [headerHeight, height, isSticky, maxHeight]);\n  const onScrollButtonPress = useCallback(\n    (direction) => () => {\n      const container = tableBodyRef.current?.parentElement;\n      if (!container) {\n        return;\n      }\n      const numPinnedVisibleColumns = table.getLeftVisibleLeafColumns().length;\n      const regularColumns = table.getAllColumns().slice(numPinnedVisibleColumns);\n      const widths = regularColumns.map((column) => column.getSize());\n      const cumulativeWidths = widths.reduce(\n        (acc, current) => {\n          const lastSum = acc.length > 0 ? acc[acc.length - 1] : 0;\n          return [...acc, lastSum + current];\n        },\n        [0]\n      );\n      if (direction === \"left\") {\n        cumulativeWidths.reverse();\n      }\n      const nextScrollLeft = cumulativeWidths.find((width2) => {\n        if (direction === \"left\") {\n          return width2 < container.scrollLeft;\n        }\n        return width2 > container.scrollLeft;\n      });\n      container.scrollTo({ left: nextScrollLeft, behavior: \"smooth\" });\n    },\n    [table]\n  );\n  const hasPinnedColumns = useMemo(() => pinnedColumns.length > 0, [pinnedColumns]);\n  const tableSize = useMemo(() => ({ width, height, top, left }), [width, height, top, left]);\n  return <TableSizeProvider value={tableSize}>\r\n      <ScrollSync horizontal>\r\n        <TableContainer maxWidth={maxWidth} maxHeight={maxHeight} position=\"relative\" ref={parentRef}>\r\n          <TableHead $isSticky={isSticky} $top={headerHeight}>\r\n            {hasPinnedColumns && <>\r\n                <Flex\n    position=\"absolute\"\n    top={scrollButtonTop}\n    left={table.getLeftTotalSize()}\n    pl=\"$spacing12\"\n    zIndex={zIndexes.default}\n  >\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"left\")}\n    opacity={showScrollLeftButton ? 1 : 0}\n    direction=\"left\"\n  />\r\n                </Flex>\r\n                <Flex position=\"absolute\" top={scrollButtonTop} right={0} pr=\"$spacing12\" zIndex={zIndexes.default}>\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"right\")}\n    opacity={showScrollRightButton ? 1 : 0}\n    direction=\"right\"\n  />\r\n                </Flex>\r\n                <TableScrollMask\n    top={isSticky ? \"$spacing12\" : 0}\n    zIndex={zIndexes.dropdown - 1}\n    borderTopRightRadius=\"$rounded20\"\n  />\r\n              </>}\r\n            <ScrollSyncPane group=\"table-sync\">\r\n              <HeaderRow dimmed={!!error}>\r\n                {table.getFlatHeaders().map((header) => <CellContainer key={header.id} style={getCommonPinningStyles(header.column, colors)}>\r\n                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </CellContainer>)}\r\n              </HeaderRow>\r\n            </ScrollSyncPane>\r\n          </TableHead>\r\n          {hasPinnedColumns && <TableScrollMask zIndex={zIndexes.default} borderBottomRightRadius=\"$rounded20\" />}\r\n          <ScrollSyncPane group=\"table-sync\">\r\n            <TableBodyContainer maxHeight={maxHeight ? maxHeight - headerHeight : \"unset\"}>\r\n              <TableBody\n    loading={loading}\n    error={error}\n    table={table}\n    ref={tableBodyRef}\n  />\r\n            </TableBodyContainer>\r\n          </ScrollSyncPane>\r\n          {loadingMore && <LoadingIndicatorContainer>\r\n              <LoadingIndicator>\r\n                <Loader />\r\n                <Trans i18nKey=\"common.loading\" />\r\n              </LoadingIndicator>\r\n            </LoadingIndicatorContainer>}\r\n        </TableContainer>\r\n      </ScrollSync>\r\n    </TableSizeProvider>;\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { InterfaceElementName } from \"@uniswap/analytics-events\";\nimport QueryTokenLogo from \"components/Logo/QueryTokenLogo\";\nimport { Cell } from \"components/Table/Cell\";\nimport {\n  ClickableHeaderRow,\n  EllipsisText,\n  HeaderArrow,\n  HeaderCell,\n  HeaderSortText,\n  TableText\n} from \"components/Table/styled\";\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from \"components/Tokens/constants\";\nimport {\n  TokenSortMethod,\n  exploreSearchStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom,\n  useSetSortMethod\n} from \"components/Tokens/state\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { OrderDirection, getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport useSimplePagination from \"hooks/useSimplePagination\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { memo, useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { TABLE_PAGE_SIZE, giveExploreStatDefaultValue } from \"state/explore\";\nimport { useTopTokens as useRestTopTokens } from \"state/explore/topTokens\";\nimport { Flex, Text, styled, useMedia } from \"ui/src\";\nimport { Plus } from \"ui/src/components/icons\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { fromGraphQLChain, toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainIdFromChainUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { Table } from \"./Table\";\nconst TableWrapper = styled(Flex, {\n  m: \"0 auto\",\n  maxWidth: MAX_WIDTH_MEDIA_BREAKPOINT\n});\nfunction TokenDescription({ token }) {\n  return <Flex>\r\n      <Flex row gap=\"$gap8\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n        <Flex row alignItems=\"center\" gap={\"$gap8\"} pr=\"$spacing4\">\r\n          <QueryTokenLogo token={token} size={40} />{\" \"}\r\n          <Flex ml={-15} height={40} width={40} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n            <img height={25} width={25} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n          </Flex>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\">\r\n          <Flex gap=\"$gap8\">\r\n            <EllipsisText data-testid=\"token-names\"> {token.symbol} / ABX </EllipsisText>\r\n          </Flex>\r\n          <Text fontSize={\"$small\"} color={\"$blueBase\"}>\r\n            Basic Volatile\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>;\n}\nexport const PoolsTable = memo(function PoolsTable2() {\n  const { topTokens, tokenSortRank, isLoading, sparklines, isError } = useRestTopTokens();\n  console.log(useRestTopTokens());\n  const { page, loadMore } = useSimplePagination();\n  return <TableWrapper data-testid=\"top-tokens-explore-table\">\r\n      <TokenTable\n    tokens={topTokens?.slice(0, page * TABLE_PAGE_SIZE)}\n    tokenSortRank={tokenSortRank}\n    sparklines={sparklines}\n    loading={isLoading}\n    loadMore={loadMore}\n    error={isError}\n  />\r\n    </TableWrapper>;\n});\nconst HEADER_TEXT = {\n  [TokenSortMethod.PRICE]: \"Volume\",\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: \"Fees\",\n  [TokenSortMethod.HOUR_CHANGE]: \"Total Rewards\",\n  [TokenSortMethod.DAY_CHANGE]: \"TVL\",\n  [TokenSortMethod.VOLUME]: \"APR\"\n};\nexport const HEADER_DESCRIPTIONS = {\n  [TokenSortMethod.PRICE]: void 0,\n  [TokenSortMethod.DAY_CHANGE]: void 0,\n  [TokenSortMethod.HOUR_CHANGE]: void 0,\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: <Trans i18nKey=\"stats.fdv.description\" />,\n  [TokenSortMethod.VOLUME]: <Trans i18nKey=\"stats.volume.description\" />\n};\nfunction TokenTableHeader({\n  category,\n  isCurrentSortMethod,\n  direction\n}) {\n  const handleSortCategory = useSetSortMethod(category);\n  return <Flex width=\"100%\">\r\n      <MouseoverTooltip\n    disabled={!HEADER_DESCRIPTIONS[category]}\n    size={TooltipSize.Max}\n    text={HEADER_DESCRIPTIONS[category]}\n    placement=\"top\"\n  >\r\n        <ClickableHeaderRow justifyContent=\"flex-end\" onPress={handleSortCategory} group>\r\n          <HeaderArrow orderDirection={direction} size={14} opacity={isCurrentSortMethod ? 1 : 0} />\r\n          <HeaderSortText active={isCurrentSortMethod} variant=\"body3\">\r\n            {HEADER_TEXT[category]}\r\n          </HeaderSortText>\r\n        </ClickableHeaderRow>\r\n      </MouseoverTooltip>\r\n    </Flex>;\n}\nfunction TokenTable({\n  tokens,\n  tokenSortRank,\n  sparklines,\n  loading,\n  error,\n  loadMore\n}) {\n  const { formatFiatPrice, formatNumber, formatDelta } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const orderDirection = sortAscending ? OrderDirection.Asc : OrderDirection.Desc;\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const timePeriod = useAtomValue(filterTimeAtom);\n  const tokenTableValues = useMemo(\n    () => tokens?.map((token, i) => {\n      const delta1d = token.pricePercentChange1Day?.value;\n      const currCurrencyId = buildCurrencyId(fromGraphQLChain(token.chain) ?? UniverseChainId.Mainnet, token.address);\n      const tokenSortIndex = tokenSortRank[currCurrencyId];\n      const chainId = getChainIdFromChainUrlParam(token.chain.toLowerCase());\n      const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n      return {\n        index: tokenSortIndex,\n        tokenDescription: <TokenDescription token={unwrappedToken} />,\n        price: giveExploreStatDefaultValue(token.price?.value),\n        testId: `token-table-row-${unwrappedToken.address}`,\n        percentChange1d: <TableText>{formatDelta(delta1d)}</TableText>,\n        fdv: giveExploreStatDefaultValue(token.fullyDilutedValuation?.value),\n        volume: giveExploreStatDefaultValue(token.volume?.value),\n        link: getTokenDetailsURL({\n          address: unwrappedToken.address,\n          chain: toGraphQLChain(chainId ?? defaultChainId)\n        }),\n        analytics: {\n          elementName: InterfaceElementName.TOKENS_TABLE_ROW,\n          properties: {\n            chain_id: chainId,\n            token_address: token.address,\n            token_symbol: token.symbol,\n            token_list_index: i,\n            token_list_rank: tokenSortIndex,\n            token_list_length: tokens.length,\n            time_frame: timePeriod,\n            search_token_address_input: filterString\n          }\n        },\n        linkState: { preloadedLogoSrc: token.logo }\n      };\n    }) ?? [],\n    [defaultChainId, filterString, formatDelta, sparklines, timePeriod, tokenSortRank, tokens]\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const media = useMedia();\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    const filteredColumns = [\n      // !media.lg\n      //   ? columnHelper.accessor((row) => row.index, {\n      //       id: 'index',\n      //       size: 60,\n      //       header: () => (\n      //         <HeaderCell justifyContent=\"flex-start\">\n      //           <Text variant=\"body3\" color=\"$neutral2\">\n      //             #\n      //           </Text>\n      //         </HeaderCell>\n      //       ),\n      //       cell: (index) => (\n      //         <Cell height=\"100%\" justifyContent=\"flex-start\" loading={showLoadingSkeleton}>\n      //           <TableText>{index.getValue?.()}</TableText>\n      //         </Cell>\n      //       ),\n      //     })\n      //   : null,\n      columnHelper.accessor((row) => row.tokenDescription, {\n        id: \"tokenDescription\",\n        size: media.lg ? 150 : 300,\n        header: () => <HeaderCell justifyContent=\"flex-start\">\r\n            <Text variant=\"body3\" color=\"$neutral2\" fontWeight=\"500\">\r\n              Liquidity Pools\r\n            </Text>\r\n          </HeaderCell>,\n        cell: (tokenDescription) => <Cell height=\"100%\" justifyContent=\"flex-start\" loading={showLoadingSkeleton} testId=\"name-cell\">\r\n            <TableText>{tokenDescription.getValue?.()}</TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.price, {\n        id: \"price\",\n        maxSize: 140,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.PRICE}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.PRICE}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (price) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex height={\"100%\"} width={\"100%\"} my={\"$spacing1\"} flexDirection=\"column\" justifyContent=\"space-between\">\r\n              <TableText textAlign=\"right\">\r\n                {\n          /* A simple 0 price indicates the price is not currently available from the api */\n        }\r\n                {price.getValue?.() === 0 ? \"-\" : formatFiatPrice({ price: price.getValue?.(), type: NumberType.FiatTokenPrice })}\r\n              </TableText>\r\n\r\n              <Flex gap={\"$gap2\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  55.34 ABX\r\n                </TableText>\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  136,971.19 ABX\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.percentChange1d, {\n        id: \"percentChange1d\",\n        maxSize: 120,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.DAY_CHANGE}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.DAY_CHANGE}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (percentChange1d) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex height={\"100%\"} width={\"100%\"} my={\"$spacing1\"} flexDirection=\"column\" justifyContent=\"space-between\">\r\n              <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                {percentChange1d.getValue?.()}\r\n              </TableText>\r\n\r\n              <Flex gap={\"$gap2\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  55.34 ABX\r\n                </TableText>\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  136,971.19 ABX\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.fdv, {\n        id: \"fdv\",\n        maxSize: 120,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.FULLY_DILUTED_VALUATION}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.FULLY_DILUTED_VALUATION}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (fdv) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex height={\"100%\"} width={\"100%\"} my={\"$spacing1\"} flexDirection=\"column\" justifyContent=\"space-between\">\r\n              <EllipsisText textAlign=\"right\">\r\n                {formatNumber({ input: fdv.getValue?.(), type: NumberType.FiatTokenStats })}\r\n              </EllipsisText>\r\n\r\n              <Flex gap={\"$gap2\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  55.34 ABX\r\n                </TableText>\r\n                <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  136,971.19 ABX\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.volume, {\n        id: \"volume\",\n        maxSize: 150,\n        header: () => <HeaderCell>\r\n            <TokenTableHeader\n          category={TokenSortMethod.VOLUME}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.VOLUME}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (volume) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex height={\"100%\"} width={\"100%\"} my={\"$spacing1\"} flexDirection=\"column\" justifyContent=\"space-between\">\r\n              <EllipsisText textAlign=\"right\">\r\n                {formatNumber({ input: volume.getValue?.(), type: NumberType.FiatTokenStats })}\r\n              </EllipsisText>\r\n\r\n              <Flex row justifyContent=\"flex-end\">\r\n                <Flex\n          py={\"$spacing8\"}\n          px={\"$spacing12\"}\n          borderRadius={\"$rounded12\"}\n          backgroundColor={\"$slate\"}\n          row\n          gap={\"$gap8\"}\n          centered\n          cursor=\"pointer\"\n          hoverStyle={{ backgroundColor: \"$surface2\" }}\n        >\r\n                  <Plus color={\"$accent1\"} size={\"$icon.12\"} />\r\n                  <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral2\"}>\r\n                    New Deposite\r\n                  </TableText>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      })\n    ];\n    return filteredColumns.filter((column) => Boolean(column));\n  }, [formatFiatPrice, formatNumber, orderDirection, showLoadingSkeleton, sortMethod, media]);\n  return <Table\n    columns={columns}\n    data={tokenTableValues}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxWidth={1200}\n    defaultPinnedColumns={[\"index\", \"tokenDescription\"]}\n  />;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { ExploreContextProvider } from \"state/explore\";\nimport { Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport LiquidityPoolVoting from \"./components/LiquidityPool\";\nimport LiquidiProvider from \"./components/LiquidityProvider\";\nimport { PoolsTable } from \"./components/table/PoolsTable\";\nexport default function Liquidity() {\n  return <Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={1200}\n    pb={\"$spacing40\"}\n    $xl={{\n      px: \"$spacing12\",\n      maxWidth: 1200,\n      mx: \"auto\"\n    }}\n  >\r\n      <LiquidiProvider />\r\n\r\n      <Flex mt={\"$spacing48\"}>\r\n        <LiquidityPoolVoting />\r\n      </Flex>\r\n\r\n      <Flex mt={\"$spacing24\"}>\r\n        <Trace logImpression page={InterfacePageName.VOTE_PAGE}>\r\n          <ExploreContextProvider>\r\n            <PoolsTable />\r\n          </ExploreContextProvider>\r\n        </Trace>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  TokenSortMethod,\n  exploreSearchStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom\n} from \"components/Tokens/state\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { TimePeriod, unwrapToken } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { useContext, useMemo } from \"react\";\nimport { ExploreContext, giveExploreStatDefaultValue } from \"state/explore\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { fromGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainIdFromChainUrlParam } from \"utils/chainParams\";\nconst TokenSortMethods = {\n  [TokenSortMethod.PRICE]: (a, b) => giveExploreStatDefaultValue(b?.price?.value) - giveExploreStatDefaultValue(a?.price?.value),\n  [TokenSortMethod.DAY_CHANGE]: (a, b) => giveExploreStatDefaultValue(b?.pricePercentChange1Day?.value) - giveExploreStatDefaultValue(a?.pricePercentChange1Day?.value),\n  [TokenSortMethod.HOUR_CHANGE]: (a, b) => giveExploreStatDefaultValue(b?.pricePercentChange1Hour?.value) - giveExploreStatDefaultValue(a?.pricePercentChange1Hour?.value),\n  [TokenSortMethod.VOLUME]: (a, b) => giveExploreStatDefaultValue(b?.volume?.value) - giveExploreStatDefaultValue(a?.volume?.value),\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: (a, b) => giveExploreStatDefaultValue(b?.fullyDilutedValuation?.value) - giveExploreStatDefaultValue(a?.fullyDilutedValuation?.value)\n};\nfunction convertPriceHistoryToPricePoints(priceHistory) {\n  return priceHistory?.values.map((value, index) => {\n    return {\n      timestamp: Number(priceHistory.start) + index * Number(priceHistory.step),\n      value\n    };\n  });\n}\nfunction convertTokenStatsToTokenStat(tokenStats, duration) {\n  let volume;\n  let priceHistory;\n  switch (duration) {\n    case TimePeriod.HOUR:\n      volume = tokenStats.volume1Hour;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryHour);\n      break;\n    case TimePeriod.DAY:\n      volume = tokenStats.volume1Day;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryDay);\n      break;\n    case TimePeriod.WEEK:\n      volume = tokenStats.volume1Week;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryWeek);\n      break;\n    case TimePeriod.MONTH:\n      volume = tokenStats.volume1Month;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryMonth);\n      break;\n    case TimePeriod.YEAR:\n      volume = tokenStats.volume1Year;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryYear);\n      break;\n    default:\n      volume = tokenStats.volume1Day;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryDay);\n  }\n  return {\n    ...tokenStats,\n    priceHistory,\n    volume\n  };\n}\nfunction useSortedTokens(tokens) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  return useMemo(() => {\n    if (!tokens) {\n      return void 0;\n    }\n    const tokenArray = Array.from(tokens).sort(TokenSortMethods[sortMethod]);\n    return sortAscending ? tokenArray.reverse() : tokenArray;\n  }, [tokens, sortMethod, sortAscending]);\n}\nfunction useFilteredTokens(tokens) {\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const lowercaseFilterString = useMemo(() => filterString.toLowerCase(), [filterString]);\n  return useMemo(() => {\n    if (!tokens) {\n      return void 0;\n    }\n    let returnTokens = tokens;\n    if (lowercaseFilterString) {\n      returnTokens = returnTokens?.filter((token) => {\n        const addressIncludesFilterString = token?.address?.toLowerCase().includes(lowercaseFilterString);\n        const projectNameIncludesFilterString = token?.project?.name?.toLowerCase().includes(lowercaseFilterString);\n        const nameIncludesFilterString = token?.name?.toLowerCase().includes(lowercaseFilterString);\n        const symbolIncludesFilterString = token?.symbol?.toLowerCase().includes(lowercaseFilterString);\n        return projectNameIncludesFilterString || nameIncludesFilterString || symbolIncludesFilterString || addressIncludesFilterString;\n      });\n    }\n    return returnTokens;\n  }, [tokens, lowercaseFilterString]);\n}\nconst MAX_TOP_TOKENS = 100;\nexport function useTopTokens() {\n  const duration = useAtomValue(filterTimeAtom);\n  const {\n    exploreStats: { data, isLoading, error: isError }\n  } = useContext(ExploreContext);\n  const tokenStats = data?.stats?.tokenStats?.map(\n    (tokenStat) => convertTokenStatsToTokenStat(tokenStat, duration)\n  );\n  const sortedTokenStats = useSortedTokens(tokenStats);\n  const tokenSortRank = useMemo(\n    () => sortedTokenStats?.reduce((acc, cur, i) => {\n      if (!cur?.address) {\n        return acc;\n      }\n      const currCurrencyId = buildCurrencyId(fromGraphQLChain(cur.chain) ?? UniverseChainId.Mainnet, cur.address);\n      return {\n        ...acc,\n        [currCurrencyId]: i + 1\n      };\n    }, {}) ?? {},\n    [sortedTokenStats]\n  );\n  const filteredTokens = useFilteredTokens(sortedTokenStats)?.slice(0, MAX_TOP_TOKENS);\n  const sparklines = useMemo(() => {\n    const unwrappedTokens = filteredTokens?.map((tokenStat) => {\n      const chainId = getChainIdFromChainUrlParam(tokenStat?.chain.toLowerCase());\n      return chainId ? unwrapToken(chainId, tokenStat) : void 0;\n    });\n    const map = {};\n    unwrappedTokens?.forEach((current) => {\n      if (current !== void 0) {\n        const address = current?.address === NATIVE_CHAIN_ID ? NATIVE_CHAIN_ID : current?.address?.toLowerCase();\n        map[address] = current?.priceHistory;\n      }\n    });\n    return map;\n  }, [filteredTokens]);\n  return { topTokens: filteredTokens, sparklines, tokenSortRank, isLoading, isError };\n}\n"],"names":["DropdownIcon","props","svg","width","height","viewBox","fill","xmlns","path","d","MissingDataBars","color","clipRule","fillRule","stroke","strokeLinecap","strokeWidth","MissingDataIcon","rect","fillOpacity","rx","_cn2","_cn","Button","styled","button","TextCotainer","UiStyled","Text","variant","cursor","hoverStyle","FIlterContainer","Flex","row","alignItems","gap","borderStyle","borderWidth","borderColor","borderRadius","FilterPools","activeFilter","setActiveFilter","useState","Basic","Consetrated","Stable","Volatile","Incetivized","ALM","GenerateFilterButton","type","divider","div","className","onClick","value","handleFilter","Checkmark","PlusSign","Check","size","Plus","SearchBar","tab","currentString","useAtomValue","exploreSearchStringAtom","localFilterString","setLocalFilterString","setFilterString","useUpdateAtom","debouncedLocalFilterString","useDebounce","isOpen","setIsOpen","colors","useSporeColors","useEffect","Trace","logFocus","eventOnTrigger","InterfaceEventName","EXPLORE_SEARCH_SELECTED","element","InterfaceElementName","EXPLORE_SEARCH_INPUT","$md","position","left","right","zIndex","zIndexes","mask","centered","SearchIcon","neutral1","val","style","pointerEvents","Input","data-testid","placeholder","placeholderTextColor","id","autoComplete","onChangeText","backgroundColor","pl","textOverflow","onFocus","handleFocus","onBlur","handleBlur","$platform-web","transitionDuration","transitions","duration","fast","focusStyle","IconButton","emphasis","onPress","handleClose","icon","X","p","scale","LiquidityPoolVoting","_cn5","_cn4","_cn3","LiquidityProvider","toggleModal","toggleHowItWorksModal","useModalState","ModalName","HowItworks","TextCustom","TamagStyled","lineHeight","accent1","slate","display","gridTemplateColumns","$sm","flexDirection","background","accent2","maxWidth","name","map","item","Anchor","href","py","px","fontFamily","fontSize","fonts","body2","transition","justifyContent","textDecorationLine","QuestionInCircle","LiquidityHowItWorksModal","TableCell","memo","cell","CellContainer","getCommonPinningStyles","column","flexRender","columnDef","getContext","displayName","DataRow","minWidth","borderBottomWidth","borderTopWidth","borderLeftWidth","borderRightWidth","TableRow","rowOriginal","analyticsContext","useTrace","original","linkState","rowTestId","testId","tableWidth","useTableSize","cells","getVisibleCells","logPress","analytics","elementName","properties","link","TableRowLink","to","state","TableBody","forwardRef","table","loading","error","ref","rows","getRowModel","Array","from","length","_","rowIndex","getAllColumns","columnIndex","ErrorModal","header","Trans","i18nKey","subtitle","NoDataFoundTableRow","ThemedText","BodySecondary","Table","columns","data","loadMore","maxHeight","defaultPinnedColumns","forcePinning","loadingMore","setLoadingMore","showScrollRightButton","setShowScrollRightButton","showScrollLeftButton","setShowScrollLeftButton","pinnedColumns","setPinnedColumns","scrollPosition","setScrollPosition","distanceFromTop","distanceToBottom","LOAD_MORE_BOTTOM_OFFSET","tableBodyRef","useRef","lastLoadedLengthRef","canLoadMore","isSticky","useMemo","parentRef","top","useParentSize","scrollableElement","current","window","updateScrollPosition","HTMLDivElement","scrollTop","scrollHeight","clientHeight","scrollY","document","body","innerHeight","addEventListener","removeEventListener","SHOW_RETURN_TO_TOP_OFFSET","onComplete","useReactTable","columnPinning","getCoreRowModel","resizeHandler","innerWidth","container","parentElement","horizontalScrollHandler","maxScrollLeft","scrollWidth","clientWidth","nextShowScrollRightButton","scrollLeft","nextShowScrollLeftButton","headerHeight","getElementById","INTERFACE_NAV_HEIGHT","scrollButtonTop","onScrollButtonPress","useCallback","direction","numPinnedVisibleColumns","getLeftVisibleLeafColumns","cumulativeWidths","slice","getSize","reduce","acc","lastSum","reverse","nextScrollLeft","find","width2","scrollTo","behavior","hasPinnedColumns","tableSize","TableSizeProvider","ScrollSync","horizontal","TableContainer","TableHead","$isSticky","$top","getLeftTotalSize","default","ScrollButton","opacity","pr","TableScrollMask","dropdown","borderTopRightRadius","ScrollSyncPane","group","HeaderRow","dimmed","getFlatHeaders","borderBottomRightRadius","TableBodyContainer","LoadingIndicatorContainer","LoadingIndicator","Loader","_cn8","_cn7","TableWrapper","m","MAX_WIDTH_MEDIA_BREAKPOINT","TokenDescription","token","QueryTokenLogo","img","src","alt","EllipsisText","symbol","PoolsTable","topTokens","tokenSortRank","isLoading","sparklines","isError","useRestTopTokens","console","log","page","useSimplePagination","TokenTable","tokens","TABLE_PAGE_SIZE","HEADER_TEXT","TokenSortMethod","PRICE","FULLY_DILUTED_VALUATION","HOUR_CHANGE","DAY_CHANGE","VOLUME","HEADER_DESCRIPTIONS","TokenTableHeader","category","isCurrentSortMethod","handleSortCategory","useSetSortMethod","MouseoverTooltip","disabled","TooltipSize","Max","text","placement","ClickableHeaderRow","HeaderArrow","orderDirection","HeaderSortText","active","formatFiatPrice","formatNumber","formatDelta","useFormatter","defaultChainId","useEnabledChains","sortAscendingAtom","OrderDirection","Asc","Desc","sortMethod","sortMethodAtom","filterString","timePeriod","filterTimeAtom","tokenTableValues","i","delta1d","pricePercentChange1Day","currCurrencyId","buildCurrencyId","fromGraphQLChain","chain","UniverseChainId","Mainnet","address","tokenSortIndex","chainId","getChainIdFromChainUrlParam","toLowerCase","unwrappedToken","unwrapToken","index","tokenDescription","price","giveExploreStatDefaultValue","percentChange1d","TableText","fdv","fullyDilutedValuation","volume","getTokenDetailsURL","toGraphQLChain","TOKENS_TABLE_ROW","chain_id","token_address","token_symbol","token_list_index","token_list_rank","token_list_length","time_frame","search_token_address_input","preloadedLogoSrc","logo","showLoadingSkeleton","media","useMedia","columnHelper","createColumnHelper","accessor","lg","HeaderCell","fontWeight","Cell","getValue","maxSize","textAlign","NumberType","FiatTokenPrice","input","FiatTokenStats","filter","Boolean","Liquidity","LiquidiProvider","logImpression","InterfacePageName","VOTE_PAGE","ExploreContextProvider","TokenSortMethods","a","b","pricePercentChange1Hour","convertPriceHistoryToPricePoints","priceHistory","values","timestamp","Number","start","step","MAX_TOP_TOKENS","useTopTokens","useFilteredTokens","exploreStats","useContext","ExploreContext","tokenStats","stats","tokenStat","TimePeriod","HOUR","volume1Hour","priceHistoryHour","DAY","volume1Day","priceHistoryDay","WEEK","volume1Week","priceHistoryWeek","MONTH","volume1Month","priceHistoryMonth","YEAR","volume1Year","priceHistoryYear","convertTokenStatsToTokenStat","sortedTokenStats","sortAscending","tokenArray","sort","useSortedTokens","cur","filteredTokens","lowercaseFilterString","returnTokens","addressIncludesFilterString","includes","projectNameIncludesFilterString","project","nameIncludesFilterString","symbolIncludesFilterString","unwrappedTokens","forEach","NATIVE_CHAIN_ID"],"sourceRoot":""}