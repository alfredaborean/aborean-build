{"version":3,"file":"static/js/3212.0c8965f6.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/AddLiquidity/index.tsx?5986","webpack://@uniswap/interface/./src/components/PoolAndGaugeAddress.tsx?f51f","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/AllowConfirmAccess.tsx?ce12","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/TokenAmoutInput.tsx?0999","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/PoolInfoModal.tsx?c8ca","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/PoolInfoAndChange.tsx?ce65","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/DepositedDetails.tsx?cedb","webpack://@uniswap/interface/./src/components/AddressCopy.tsx?d736","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/IncreaseOrSetDepositAmount.tsx?2e32","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/EditAmoutAndAllowButton.tsx?25c1","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/DepositAmoutAndEdit.tsx?c19a","webpack://@uniswap/interface/./src/pages/AddLiquidity/components/SwapTokenButtons.tsx?0765","../packages/ui/src/components/icons/CoinStack.tsx","../packages/ui/src/components/icons/Infinity.tsx","../packages/ui/src/components/icons/Shrink.tsx","components/AddressCopy.tsx","components/PoolAndGaugeAddress.tsx","pages/AddLiquidity/ContextProvider.tsx","pages/AddLiquidity/components/EditAmoutAndAllowButton.tsx","pages/AddLiquidity/components/AllowConfirmAccess.tsx","pages/AddLiquidity/components/DepositAmoutAndEdit.tsx","pages/AddLiquidity/components/DepositedDetails.tsx","pages/AddLiquidity/components/ChangePoolAndDepositButton.tsx","pages/AddLiquidity/components/SwapTokenButtons.tsx","pages/AddLiquidity/components/TokenAmoutInput.tsx","pages/AddLiquidity/components/IncreaseOrSetDepositAmount.tsx","pages/AddLiquidity/components/PoolInfoAndChange.tsx","pages/AddLiquidity/components/PoolInfoModal.tsx","pages/AddLiquidity/index.tsx","../node_modules/@tamagui/button/dist/esm/Button.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [CoinStack, AnimatedCoinStack] = createIcon({\n  name: \"CoinStack\",\n  getIcon: (props) => <Svg viewBox=\"0 0 23 24\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M17.3293 11.0072C17.1985 11.0072 17.0801 10.9215 17.0428 10.7992L16.5817 9.22128C16.1643 7.77178 15.0118 6.64642 13.5353 6.23665L11.9217 5.78407C11.766 5.74126 11.6725 5.58224 11.7161 5.42934C11.741 5.33148 11.822 5.25809 11.9217 5.22751L13.5353 4.77492C15.0118 4.36514 16.1643 3.23979 16.5817 1.79029L17.0428 0.212363C17.0864 0.0594624 17.2484 -0.0322791 17.4103 0.0105331C17.51 0.0411132 17.5848 0.114507 17.6159 0.212363L18.0769 1.79029C18.4943 3.23979 19.6469 4.36514 21.1234 4.77492L22.737 5.22751C22.8927 5.28867 22.9675 5.46603 22.9052 5.61893C22.874 5.69233 22.8117 5.75349 22.737 5.78407L21.1234 6.23665C19.6469 6.64642 18.4943 7.77789 18.0769 9.22128L17.6159 10.7992C17.5785 10.9215 17.4602 11.0072 17.3293 11.0072ZM13.4792 10.946L13.6225 10.4689C13.7471 10.0347 14.096 9.69833 14.5383 9.57601L15.0242 9.44145C15.0741 9.4231 15.0928 9.36806 15.0741 9.32525C15.0616 9.30078 15.0492 9.28855 15.0242 9.27632L14.5383 9.14176C14.096 9.01944 13.7471 8.68307 13.6225 8.24883L13.4792 7.77178C13.4668 7.72285 13.4169 7.69838 13.367 7.71061C13.3359 7.71673 13.3172 7.7412 13.3048 7.77178L13.1677 8.24883C13.0431 8.68307 12.6942 9.01944 12.2519 9.14176L11.766 9.27632C11.7161 9.28855 11.6912 9.33748 11.7036 9.38641C11.7099 9.41699 11.7348 9.43533 11.766 9.44757L12.2519 9.58212C12.6942 9.70444 13.0431 10.0408 13.1677 10.4751L13.3048 10.9521C13.3172 11.001 13.3671 11.0255 13.4169 11.0133C13.448 11.0072 13.4668 10.9827 13.4792 10.9521V10.946Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M12.052 3.55437C10.7236 3.02128 9.0065 2.7541 7.2894 2.7541C3.68035 2.7541 0.0712891 3.93441 0.0712891 6.28327C0.0712891 8.65573 3.68035 9.81244 7.2894 9.81244C8.25257 9.81244 9.21574 9.73005 10.1103 9.56416C10.028 8.85051 10.4168 8.00326 11.3437 7.75821L11.6683 7.66835L11.7529 7.37362L11.4834 7.29801C10.5042 7.02554 9.89331 6.02591 10.1658 5.0266C10.3547 4.31953 10.9118 3.88866 11.4433 3.72561L11.4621 3.71983L12.052 3.55437Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M13.262 10.8024L13.1677 10.4751C13.1667 10.4717 13.166 10.4684 13.165 10.465C13.373 10.3677 13.5718 10.2643 13.7613 10.1552C13.7535 10.168 13.7458 10.181 13.7384 10.194C13.7124 10.2399 13.689 10.2877 13.6688 10.3369C13.6511 10.3798 13.6355 10.4238 13.6225 10.4689L13.528 10.7847C13.4388 10.7899 13.3501 10.7958 13.262 10.8024Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M13.5871 8.13011C13.4269 8.269 13.2485 8.39919 13.0542 8.52072C13.077 8.48029 13.0976 8.43851 13.116 8.39551L13.1191 8.3881C13.138 8.34301 13.1541 8.29643 13.1677 8.24883L13.3048 7.77178C13.3172 7.7412 13.3359 7.71673 13.367 7.71061C13.4169 7.69838 13.4668 7.72285 13.4792 7.77178L13.5871 8.13011Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M13.7319 12.5566C13.751 12.5529 13.7699 12.5488 13.7884 12.5446C14.025 12.5331 14.2649 12.5272 14.5075 12.5272C18.4895 12.5272 21.7256 14.1089 21.7256 16.0564C21.7256 18.004 18.4895 19.5856 14.5075 19.5856C10.5255 19.5856 7.2894 18.004 7.2894 16.0564C7.2894 14.3186 9.8661 12.8721 13.2502 12.5808C13.4142 12.595 13.5774 12.5867 13.7319 12.5566Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M6.24278 22.7842C5.74954 22.1114 5.48487 21.3325 5.48487 20.4708V20.0813C3.19914 19.8688 1.33446 19.2197 0.0712891 18.2518V19.2905C0.0712891 21.4269 3.01869 22.5836 6.24278 22.7842Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M5.521 15.7021C5.521 15.6903 5.521 15.6786 5.53297 15.6669H5.521C3.2112 15.4662 1.33446 14.8171 0.0712891 13.8374V14.8761C0.0712891 16.8472 2.57357 17.9803 5.48487 18.3108V16.0564C5.48487 15.9384 5.49694 15.8201 5.521 15.7021Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M6.1706 13.9436C6.9646 12.8105 8.39618 11.9017 10.2248 11.3469C9.32251 11.5004 8.33603 11.5829 7.2894 11.5829C4.17358 11.5829 1.64724 10.8747 0.0712891 9.65899V10.4617C0.0712891 12.5863 2.97057 13.7429 6.1706 13.9436Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M7.2894 19.3141C8.91348 20.5771 11.4879 21.3561 14.5075 21.3561C17.5271 21.3561 20.1016 20.5771 21.7256 19.3141V20.4708C21.7256 22.8197 18.1166 24 14.5075 24C10.8985 24 7.2894 22.8197 7.2894 20.4708V19.3141Z\"\n    fill={\"currentColor\"}\n  />\r\n      <Path\n    d=\"M21.958 1.83864L21.8646 2.15668C21.8583 2.17502 21.8459 2.19337 21.8272 2.19337C21.796 2.2056 21.7586 2.18726 21.7524 2.15668L21.6589 1.83864C21.5717 1.55119 21.3412 1.32489 21.0484 1.24538L20.7244 1.15365C20.7058 1.14753 20.6871 1.1353 20.6871 1.11695C20.6746 1.08637 20.6933 1.04968 20.7244 1.04356L21.0484 0.951817C21.3475 0.872309 21.578 0.646015 21.6589 0.358562L21.7524 0.0405346C21.7586 0.0221865 21.7711 0.00383054 21.7898 0.00383054C21.8209 -0.00840152 21.8583 0.00995441 21.8646 0.0405346L21.958 0.358562C22.0452 0.646015 22.2757 0.872309 22.5685 0.951817L22.8925 1.04356C22.905 1.04968 22.9174 1.0619 22.9237 1.07414C22.9361 1.10472 22.9237 1.14142 22.8925 1.15365L22.5685 1.24538C22.2695 1.32489 22.039 1.55119 21.958 1.83864Z\"\n    fill={\"currentColor\"}\n  />\r\n    </Svg>,\n  defaultFill: \"oklch(0.92 0.004 286.32)\"\n});\n","\"use strict\";\nimport { Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Infinity, AnimatedInfinity] = createIcon({\n  name: \"InfoCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    stroke-width=\"1.5\"\n    d=\"m14 9l-.25.375M10 9a5 5 0 1 0 0 6l.334-.5M10 9l4 6a5 5 0 1 0 0-6\"\n  />\n    </Svg>\n});\n","\"use strict\";\nimport { Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Shrink, AnimatedShrink] = createIcon({\n  name: \"Shrink\",\n  getIcon: (props) => <Svg viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n      <path\n    fill=\"currentColor\"\n    fill-rule=\"evenodd\"\n    d=\"M1 .375c.345 0 .625.28.625.625v12a.625.625 0 1 1-1.25 0V1c0-.345.28-.625.625-.625m2.692 3.683a.625.625 0 1 0-.884.884L4.866 7L2.808 9.058a.625.625 0 1 0 .884.884l2.5-2.5a.625.625 0 0 0 0-.884zm7.5.884a.625.625 0 1 0-.884-.884l-2.5 2.5a.625.625 0 0 0 0 .884l2.5 2.5a.625.625 0 1 0 .884-.884L9.134 7zM13.625 1a.625.625 0 1 0-1.25 0v12a.625.625 0 1 0 1.25 0z\"\n    clip-rule=\"evenodd\"\n  />\n    </Svg>\n});\n","\"use strict\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useCallback } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Flex, Text, useMedia, useSporeColors } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport default function AddressCopy({ address }) {\n  const colors = useSporeColors();\n  const [isCopied, setCopied] = useCopyClipboard();\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && !isCopied;\n  const copyCallBack = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  return <Flex row gap={\"$gap8\"} onPress={copyCallBack} cursor=\"pointer\" alignItems=\"center\">\n      <Text variant=\"body4\" color={colors.neutral2.val}>\n        {shortenAddress(address)}\n      </Text>\n      <Copy\n    data-testid=\"breadcrumb-hover-copy\"\n    size={13}\n    color={shouldShowActions ? colors.neutral3.val : \"transparent\"}\n  />\n    </Flex>;\n}\n","\"use strict\";\nimport AddressCopy from \"components/AddressCopy\";\nimport { Flex, Separator, Text } from \"ui/src\";\nexport default function PoolAndGaugeAddress({\n  poolAddress,\n  gaugeAddress\n}) {\n  return <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Pool Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n      <Separator width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Gauge Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { createContext, useContext, useState } from \"react\";\nexport const AddLiquidityContext = createContext(null);\nexport const AddLiquidityProvider = ({ children }) => {\n  const [addLiquidityStep, setAddLiquidityStep] = useState(\"step-1\");\n  return <AddLiquidityContext.Provider value={{ setAddLiquidityStep, addLiquidityStep }}>\n      {children}\n    </AddLiquidityContext.Provider>;\n};\nexport const useAddLiquidityContext = () => {\n  const context = useContext(AddLiquidityContext);\n  if (!context) {\n    throw new Error(\"useAddLiquidity must be used within a AddLiquidityProvider\");\n  }\n  return context;\n};\n","\"use strict\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { useAddLiquidityContext } from \"../ContextProvider\";\nexport default function EditAmoutAndAllowButton() {\n  const { setAddLiquidityStep } = useAddLiquidityContext();\n  const colors = useSporeColors();\n  const Button = styled.button`\n    all: unset;\n    padding: 16px 10px;\n    background-color: ${(props) => props.$lock ? colors.surface2Hovered.val : colors.accent1.val};\n    color: ${(props) => props.$lock ? colors.neutral1.val : colors.surface1.val};\n    border-radius: 12px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    transition: all 0.2s ease;\n    &:hover {\n      opacity: 0.7;\n    }\n  `;\n  return <Flex mt={\"$spacing24\"} row gap={\"$gap12\"} alignItems=\"center\">\n      <Button role=\"button\" $lock onClick={() => setAddLiquidityStep(\"step-2\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Edit amount\n        </Text>\n      </Button>\n      <Button role=\"button\" onClick={() => setAddLiquidityStep(\"step-1\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Allow\n        </Text>\n      </Button>\n    </Flex>;\n}\n","\"use strict\";\nimport { RoundedLogo } from \"components/Logo/LogoProvider\";\nimport { Flex, Text, styled, useSporeColors } from \"ui/src\";\nimport EditAmoutAndAllowButton from \"./EditAmoutAndAllowButton\";\nconst AmountData = [\n  {\n    label: \"Amount\",\n    value: \"1.4\",\n    symbol: \"ABX\",\n    price: \"5.265\"\n  },\n  {\n    label: \"Amount\",\n    value: \"45.5\",\n    symbol: \"ETH\",\n    price: \"2.65\"\n  }\n];\nconst TextWrapper = styled(Text, {\n  variant: \"body3\"\n});\nexport default function AllowConfirmAccess() {\n  const colors = useSporeColors();\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    maxWidth={700}\n    width={\"100%\"}\n    style={{\n      background: `linear-gradient(180deg, ${colors.surface2.variable} 0%, transparent 100%)`\n    }}\n    position=\"relative\"\n    overflow=\"hidden\"\n  >\n      <Flex>\n        {AmountData.map((item, index) => <Flex\n    key={index}\n    row\n    gap={\"$gap12\"}\n    justifyContent=\"space-between\"\n    borderBottomWidth={1}\n    borderColor={\"$surface3\"}\n    py={\"$spacing16\"}\n  >\n            <Text>{item.label}</Text>\n            <Flex row gap={\"$gap12\"}>\n              <TextWrapper>{item.value}</TextWrapper>\n              <TextWrapper color={\"$neutral2\"}>{item.symbol}</TextWrapper>\n              <TextWrapper color={\"$neutral2\"}>~${item.price}</TextWrapper>\n            </Flex>\n          </Flex>)}\n      </Flex>\n\n      <Flex flexDirection=\"column\" alignItems=\"center\" gap={\"$gap16\"} py={\"$spacing24\"} $sm={{ py: \"$spacing16\" }} mt={\"$spacing24\"}>\n        <RoundedLogo size={54} />\n        <Text variant=\"subheading1\" textAlign=\"center\">\n          Confirm access <br /> to ABX\n        </Text>\n      </Flex>\n\n      <EditAmoutAndAllowButton />\n    </Flex>;\n}\n","\"use strict\";\nimport { Check } from \"react-feather\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { useAddLiquidityContext } from \"../ContextProvider\";\nexport default function DepositAmoutAndEdit() {\n  const { setAddLiquidityStep } = useAddLiquidityContext();\n  const colors = useSporeColors();\n  return <Flex\n    row\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    backgroundColor={\"$surface2\"}\n    justifyContent=\"space-between\"\n    gap={\"$gap12\"}\n    alignItems=\"center\"\n  >\n      <Flex row gap={\"$gap8\"} alignItems=\"center\">\n        <Flex row centered height={20} width={20} backgroundColor={\"$accent1\"} borderRadius={\"$roundedFull\"}>\n          <Check size={16} color={colors.surface1.val} />\n        </Flex>\n        <Text variant=\"buttonLabel3\">Deposit amount</Text>\n      </Flex>\n      <Text\n    variant=\"buttonLabel3\"\n    backgroundColor={\"$surface3\"}\n    px={\"$padding12\"}\n    py={\"$padding8\"}\n    borderRadius={\"$roundedFull\"}\n    cursor=\"pointer\"\n    onPress={() => setAddLiquidityStep(\"step-1\")}\n  >\n        Edit\n      </Text>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex, Separator, Text } from \"ui/src\";\nimport { AnimatedCoinStack, Infinity, Shrink } from \"ui/src/components/icons\";\nimport { colors as ThemeColors } from \"ui/src/theme\";\nexport default function DepositedDetails() {\n  return <Flex p={\"$spacing24\"} $sm={{ p: \"$spacing16\" }} borderRadius={\"$rounded12\"} backgroundColor={\"$surface2\"}>\n      <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap={\"$gap12\"}>\n        <Flex row gap={\"$gap12\"} alignItems=\"center\">\n          <AnimatedCoinStack size={18} /> <Text variant=\"body3\">Deposit #0</Text>\n        </Flex>\n        <Text>~$0.05857</Text>\n      </Flex>\n\n      <Separator my={\"$spacing24\"} $sm={{ my: \"$spacing24\" }} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n\n      <Flex row gap={\"$gap8\"} alignItems=\"center\">\n        <Text variant=\"buttonLabel4\">0</Text>\n        <Shrink size={18} color={ThemeColors.greenVibrant} />\n        <Infinity size={14} color={\"$neutral1\"} />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { useAddLiquidityContext } from \"../ContextProvider\";\nexport default function ChangePoolAndIncetivizeButton() {\n  const colors = useSporeColors();\n  const Button = styled.button`\n    all: unset;\n    padding: 16px 10px;\n    background-color: ${(props) => props.$lock ? colors.surface2Hovered.val : colors.accent1.val};\n    color: ${(props) => props.$lock ? colors.neutral1.val : colors.surface1.val};\n    border-radius: 12px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    transition: all 0.2s ease;\n    &:hover {\n      opacity: 0.7;\n    }\n  `;\n  const { setAddLiquidityStep } = useAddLiquidityContext();\n  return <Flex mt={\"$spacing24\"} row gap={\"$gap12\"} $platform-web={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n      <Link to=\"/dash\" className=\"text-decoration-none flex\">\n        <Button role=\"button\" $lock onClick={() => setAddLiquidityStep(\"step-1\")}>\n          <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n            Change Pool\n          </Text>\n        </Button>\n      </Link>\n      <Button role=\"button\" onClick={() => setAddLiquidityStep(\"step-2\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Incentivize\n        </Text>\n      </Button>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nexport default function SwapTokenButtons({\n  swapToken,\n  setSwapToken\n}) {\n  const colors = useSporeColors();\n  return <Flex\n    row\n    padding={\"$spacing2\"}\n    alignItems=\"center\"\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    borderRadius={\"$rounded12\"}\n  >\n      <Text\n    onPress={() => setSwapToken(true)}\n    px={\"$spacing8\"}\n    py={\"$spacing2\"}\n    borderRadius={\"$rounded12\"}\n    cursor=\"pointer\"\n    background={swapToken ? colors.accent1.val : \"transparent\"}\n    color={swapToken ? colors.surface1.val : colors.accent1.val}\n    variant=\"buttonLabel4\"\n  >\n        ABX\n      </Text>\n      <Text\n    onPress={() => setSwapToken(false)}\n    px={\"$spacing8\"}\n    py={\"$spacing2\"}\n    borderRadius={\"$rounded12\"}\n    cursor=\"pointer\"\n    background={!swapToken ? colors.accent1.val : \"transparent\"}\n    color={!swapToken ? colors.surface1.val : colors.accent1.val}\n    variant=\"buttonLabel4\"\n  >\n        ETH\n      </Text>\n    </Flex>;\n}\n","\"use strict\";\nimport { RoundedLogo } from \"components/Logo/LogoProvider\";\nimport { useRef, useState } from \"react\";\nimport { Flex, Input, Text, useSporeColors } from \"ui/src\";\nexport default function TokenAmoutInput({ symbol }) {\n  const inputRef = useRef(null);\n  const [value, setValue] = useState(\"\");\n  const handleChange = (text) => {\n    const numericValue = text.replace(/[^0-9.]/g, \"\");\n    setValue(numericValue);\n  };\n  const colors = useSporeColors();\n  return <Flex mt={\"$gap24\"}>\n      <Flex row alignItems=\"center\" justifyContent=\"space-between\" gap={\"$gap12\"}>\n        <Text variant=\"body3\" fontWeight={\"$medium\"}>\n          Amout\n        </Text>\n        <Flex row alignItems=\"center\" gap={\"$gap4\"}>\n          <Text variant=\"body3\" color={\"$neutral2\"}>\n            Balance:\n          </Text>\n          <Text variant=\"body3\">12.4 {symbol}</Text>\n        </Flex>\n      </Flex>\n      <Flex\n    row\n    mt={\"$gap12\"}\n    px=\"$spacing16\"\n    py=\"$spacing16\"\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    gap={\"$gap12\"}\n    borderRadius={\"$rounded12\"}\n    onPress={() => inputRef.current?.focus()}\n    $platform-web={{\n      focusWithinStyle: { borderColor: \"$neutral2\" }\n    }}\n    transition=\"border-color 0.3s ease\"\n  >\n        <Flex\n    row\n    alignItems=\"center\"\n    gap={\"$gap8\"}\n    backgroundColor={\"$surface3\"}\n    borderWidth={1}\n    borderColor={\"$accent2\"}\n    py={\"$padding8\"}\n    px={\"$padding12\"}\n    borderRadius={\"$rounded12\"}\n  >\n          <RoundedLogo size={24} />\n          <Text variant=\"buttonLabel2\">{symbol}</Text>\n        </Flex>\n        <Flex grow flexDirection=\"column\" gap={\"$gap8\"}>\n          <Input\n    ref={inputRef}\n    py={\"$padding20\"}\n    textAlign=\"right\"\n    placeholder=\"0\"\n    fontSize={\"28px\"}\n    backgroundColor={\"none\"}\n    width={\"100%\"}\n    inputMode=\"numeric\"\n    keyboardType=\"numeric\"\n    value={value}\n    onChangeText={handleChange}\n  />\n          <Text variant=\"body3\" color={\"$neutral3\"} textAlign=\"right\">\n            ~$0\n          </Text>\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { useState } from \"react\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport ChangePoolAndIncetivizeButton from \"./ChangePoolAndDepositButton\";\nimport SwapTokenButtons from \"./SwapTokenButtons\";\nimport TokenAmoutInput from \"./TokenAmoutInput\";\nexport default function IncreaseOrSetDepositAmount({ type }) {\n  const colors = useSporeColors();\n  const [swapToken, setSwapToken] = useState(true);\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    width={\"100%\"}\n    style={{\n      background: `linear-gradient(180deg, ${colors.surface2.variable} 0%, transparent 100%)`\n    }}\n  >\n      <Flex row gap={\"$gap12\"} alignItems=\"center\" justifyContent=\"space-between\">\n        <Text>Increase deposit amount</Text>\n        <SwapTokenButtons {...{ swapToken, setSwapToken }} />\n      </Flex>\n      <Flex>\n        <TokenAmoutInput symbol=\"ABX\" />\n        <TokenAmoutInput symbol=\"ETH\" />\n      </Flex>\n\n      <ChangePoolAndIncetivizeButton />\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { Button } from \"tamagui\";\nimport { Flex, Separator, Text, styled, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nexport default function PoolInfoAndChange() {\n  const colors = useSporeColors();\n  const { toggleModal: togglePoolInfoModal } = useModalState(ModalName.PoolInfo);\n  const ButtonContainer = styled(Button, {\n    py: \"$padding16\",\n    px: \"$padding16\",\n    borderRadius: \"$rounded16\",\n    transition: \"all 0.3s ease\",\n    backgroundColor: \"$accent2\"\n  });\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    width={\"100%\"}\n    backgroundColor={\"$surface2\"}\n  >\n      <Text variant=\"subheading1\">Incentivize Pool</Text>\n\n      <Separator my={\"$spacing24\"} $sm={{ my: \"$spacing24\" }} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n\n      <Flex group row justifyContent=\"space-between\" gap={\"$gap12\"}>\n        <Flex className=\"left\" row gap={\"$gap12\"}>\n          <Flex row alignItems=\"center\">\n            <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>{\" \"}\n            <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap4\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n              <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n                <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n                  0.23%\n                </Text>\n              </MouseoverTooltip>\n              <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n                <Flex transition=\"opacity 0.3s ease\" opacity={0} $group-hover={{ opacity: 1 }}>\n                  <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n                </Flex>\n              </MouseoverTooltip>\n            </Flex>\n            <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n              Basic Volatile\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex className=\"right\" row gap={\"$gap12\"}>\n          {\" \"}\n          <ButtonContainer onPress={togglePoolInfoModal}>\n            <Text variant=\"buttonLabel4\">Pool info</Text>\n          </ButtonContainer>{\" \"}\n          <ButtonContainer>\n            <Text variant=\"buttonLabel4\">Change</Text>\n          </ButtonContainer>\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { X } from \"react-feather\";\nimport styled from \"styled-components\";\nimport { Flex, Separator, Text, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nconst Button = styled.button`\n  all: unset;\n  padding: 8px 12px;\n  cursor: pointer;\n`;\nexport default function PoolInfoModal() {\n  const modalName = ModalName.PoolInfo;\n  const { isOpen: isModalOpen, toggleModal: togglePoolInfoModal } = useModalState(modalName);\n  const colors = useSporeColors();\n  const onClose = () => {\n    togglePoolInfoModal();\n  };\n  const infoData = [\n    {\n      label: \"APR\",\n      value: \"11.41%\"\n    },\n    {\n      label: \"TVL\",\n      value: \"~$20.72M\"\n    },\n    {\n      label: \"Volume\",\n      value: \"~$1,163,018.7\"\n    },\n    {\n      label: \"Fees\",\n      value: \"~$3,489.05\"\n    },\n    {\n      label: \"Trading fee\",\n      value: \"0.3%\"\n    }\n  ];\n  return <Modal\n    extendOnKeyboardVisible\n    fullScreen\n    hideKeyboardOnDismiss\n    hideKeyboardOnSwipeDown\n    renderBehindBottomInset\n    backgroundColor={colors.surface1.val}\n    isModalOpen={isModalOpen}\n    maxWidth={400}\n    maxHeight={410}\n    name={modalName}\n    padding=\"$none\"\n    height=\"100vh\"\n    onClose={onClose}\n  >\n      <Flex py={\"$spacing24\"} px={\"$spacing20\"}>\n        <Flex row justifyContent=\"space-between\" alignItems=\"center\">\n          <Text variant=\"subheading2\">Pool info</Text>\n          <Button onClick={onClose}>\n            <Flex\n    height={28}\n    width={28}\n    hoverStyle={{ backgroundColor: colors.surface2Hovered.val }}\n    centered\n    borderRadius={\"$roundedFull\"}\n  >\n              <X color={colors.accent1.val} size={24} />\n            </Flex>\n          </Button>\n        </Flex>\n\n        <Separator mt={\"$spacing8\"} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n\n        <Flex group className=\"info\" row gap={\"$gap12\"} mt={\"$spacing24\"}>\n          <Flex row alignItems=\"center\">\n            <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>{\" \"}\n            <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap4\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n              <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n                <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n                  0.23%\n                </Text>\n              </MouseoverTooltip>\n              <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n                <Flex transition=\"opacity 0.3s ease\" opacity={0} $group-hover={{ opacity: 1 }}>\n                  <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n                </Flex>\n              </MouseoverTooltip>\n            </Flex>\n            <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n              Basic Volatile\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex mt={\"$spacing24\"}>\n          {infoData.map((item, index) => <Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    gap={\"$gap12\"}\n    key={index}\n    py={\"$spacing12\"}\n    borderTopWidth={1}\n    borderColor={index > 0 ? \"$surface3\" : \"transparent\"}\n  >\n              <Text variant=\"body3\" color={\"$neutral2\"}>\n                {item.label}\n              </Text>\n              <Text variant=\"body3\">{item.value}</Text>\n            </Flex>)}\n        </Flex>\n      </Flex>\n    </Modal>;\n}\n","\"use strict\";\nimport { Flex } from \"ui/src\";\nimport { AddLiquidityProvider, useAddLiquidityContext } from \"./ContextProvider\";\nimport AllowConfirmAccess from \"./components/AllowConfirmAccess\";\nimport DepositAmoutAndEdit from \"./components/DepositAmoutAndEdit\";\nimport DepositedDetails from \"./components/DepositedDetails\";\nimport IncreaseOrSetDepositAmount from \"./components/IncreaseOrSetDepositAmount\";\nimport PoolInfoAndChange from \"./components/PoolInfoAndChange\";\nimport PoolInfoModal from \"./components/PoolInfoModal\";\nconst AddLiquidity = () => {\n  const { addLiquidityStep } = useAddLiquidityContext();\n  return <Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={780}\n    pb={\"$spacing40\"}\n    $xl={{\n      px: \"$spacing12\",\n      mx: \"auto\"\n    }}\n    flexDirection=\"column\"\n    gap={\"$gap12\"}\n  >\r\n      <PoolInfoAndChange />\r\n      <DepositedDetails />\r\n      {addLiquidityStep === \"step-1\" && <IncreaseOrSetDepositAmount type=\"increase\" />}\r\n      {addLiquidityStep === \"step-2\" && <>\r\n          <DepositAmoutAndEdit />\r\n          <AllowConfirmAccess />\r\n        </>}\r\n      <PoolInfoModal />\r\n    </Flex>;\n};\nconst AddLiquidityPage = () => {\n  return <AddLiquidityProvider>\r\n      <AddLiquidity />\r\n    </AddLiquidityProvider>;\n};\nexport default AddLiquidityPage;\n","import { getFontSize } from \"@tamagui/font-size\";\nimport { getButtonSized } from \"@tamagui/get-button-sized\";\nimport { withStaticProperties } from \"@tamagui/helpers\";\nimport { useGetThemedIcon } from \"@tamagui/helpers-tamagui\";\nimport { ButtonNestingContext, ThemeableStack } from \"@tamagui/stacks\";\nimport { SizableText, wrapChildrenInText } from \"@tamagui/text\";\nimport { createStyledContext, getVariableValue, spacedChildren, styled, useProps } from \"@tamagui/web\";\nimport { useContext } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nconst ButtonContext = createStyledContext({\n    // keeping these here means they work with styled() passing down color to text\n    color: void 0,\n    ellipse: void 0,\n    fontFamily: void 0,\n    fontSize: void 0,\n    fontStyle: void 0,\n    fontWeight: void 0,\n    letterSpacing: void 0,\n    maxFontSizeMultiplier: void 0,\n    size: void 0,\n    textAlign: void 0,\n    variant: void 0\n  }),\n  BUTTON_NAME = \"Button\",\n  ButtonFrame = styled(ThemeableStack, {\n    name: BUTTON_NAME,\n    tag: \"button\",\n    context: ButtonContext,\n    role: \"button\",\n    focusable: !0,\n    variants: {\n      unstyled: {\n        false: {\n          size: \"$true\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"nowrap\",\n          flexDirection: \"row\",\n          cursor: \"pointer\",\n          hoverTheme: !0,\n          pressTheme: !0,\n          backgrounded: !0,\n          borderWidth: 1,\n          borderColor: \"transparent\",\n          focusVisibleStyle: {\n            outlineColor: \"$outlineColor\",\n            outlineStyle: \"solid\",\n            outlineWidth: 2\n          }\n        }\n      },\n      variant: {\n        outlined: {\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"$borderColor\",\n          hoverStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorHover\"\n          },\n          pressStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorPress\"\n          },\n          focusVisibleStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorFocus\"\n          }\n        }\n      },\n      size: {\n        \"...size\": getButtonSized,\n        \":number\": getButtonSized\n      },\n      disabled: {\n        true: {\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonText = styled(SizableText, {\n    name: \"Button\",\n    context: ButtonContext,\n    variants: {\n      unstyled: {\n        false: {\n          userSelect: \"none\",\n          cursor: \"pointer\",\n          // flexGrow 1 leads to inconsistent native style where text pushes to start of view\n          flexGrow: 0,\n          flexShrink: 1,\n          ellipse: !0,\n          color: \"$color\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonIcon = props => {\n    const {\n        children,\n        scaleIcon = 1\n      } = props,\n      {\n        size,\n        color\n      } = useContext(ButtonContext),\n      iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size)) * scaleIcon;\n    return useGetThemedIcon({\n      size: iconSize,\n      color\n    })(children);\n  },\n  ButtonComponent = ButtonFrame.styleable(function (props, ref) {\n    const {\n      props: buttonProps\n    } = useButton(props);\n    return /* @__PURE__ */jsx(ButtonFrame, {\n      \"data-disable-theme\": !0,\n      ...buttonProps,\n      ref\n    });\n  }),\n  Button2 = withStaticProperties(ButtonComponent, {\n    Text: ButtonText,\n    Icon: ButtonIcon\n  });\nfunction useButton({\n  textProps,\n  ...propsIn\n}, {\n  Text = Button2.Text\n} = {\n  Text: Button2.Text\n}) {\n  const isNested = useContext(ButtonNestingContext),\n    propsActive = useProps(propsIn, {\n      noNormalize: !0,\n      noExpand: !0\n    }),\n    {\n      icon,\n      iconAfter,\n      space,\n      spaceFlex,\n      scaleIcon = 1,\n      scaleSpace = 0.66,\n      separator,\n      noTextWrap,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      tag,\n      ellipse,\n      maxFontSizeMultiplier,\n      ...restProps\n    } = propsActive,\n    size = propsActive.size || (propsActive.unstyled ? void 0 : \"$true\"),\n    color = propsActive.color,\n    iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size, {\n      font: fontFamily?.[0] === \"$\" ? fontFamily : void 0\n    })) * scaleIcon,\n    getThemedIcon = useGetThemedIcon({\n      size: iconSize,\n      color\n    }),\n    [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon),\n    spaceSize = space ?? getVariableValue(iconSize) * scaleSpace,\n    contents = noTextWrap ? [propsIn.children] : wrapChildrenInText(Text, {\n      children: propsIn.children,\n      fontFamily,\n      fontSize,\n      textProps,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      ellipse,\n      maxFontSizeMultiplier\n    }, Text === ButtonText && propsActive.unstyled !== !0 ? {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\",\n      size\n    } : void 0),\n    inner = spacedChildren({\n      // a bit arbitrary but scaling to font size is necessary so long as button does\n      space: spaceSize === !1 ? 0 : spaceSize == !0 ? \"$true\" : spaceSize,\n      spaceFlex,\n      ensureKeys: !0,\n      separator,\n      direction: propsActive.flexDirection === \"column\" || propsActive.flexDirection === \"column-reverse\" ? \"vertical\" : \"horizontal\",\n      // for keys to stay the same we keep indices as similar a possible\n      // so even if icons are undefined we still pass them\n      children: [themedIcon, ...contents, themedIconAfter]\n    }),\n    props = {\n      size,\n      ...(propsIn.disabled && {\n        // in rnw - false still has keyboard tabIndex, undefined = not actually focusable\n        focusable: void 0,\n        // even with tabIndex unset, it will keep focusVisibleStyle on web so disable it here\n        focusVisibleStyle: {\n          borderColor: \"$background\"\n        }\n      }),\n      // fixes SSR issue + DOM nesting issue of not allowing button in button\n      tag: tag ?? (isNested ? \"span\" :\n      // defaults to <a /> when accessibilityRole = link\n      // see https://github.com/tamagui/tamagui/issues/505\n      propsActive.accessibilityRole === \"link\" || propsActive.role === \"link\" ? \"a\" : \"button\"),\n      ...restProps,\n      children: /* @__PURE__ */jsx(ButtonNestingContext.Provider, {\n        value: !0,\n        children: inner\n      }),\n      // forces it to be a runtime pressStyle so it passes through context text colors\n      disableClassName: !0\n    };\n  return {\n    spaceSize,\n    isNested,\n    props\n  };\n}\nexport { Button2 as Button, ButtonContext, ButtonFrame, ButtonIcon, ButtonText, useButton };\n//# sourceMappingURL=Button.mjs.map\n"],"names":["CoinStack","AnimatedCoinStack","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","defaultFill","Infinity","AnimatedInfinity","path","stroke","stroke-linecap","stroke-linejoin","stroke-width","Shrink","AnimatedShrink","fill-rule","clip-rule","_cn","AddressCopy","address","colors","useSporeColors","isCopied","setCopied","useCopyClipboard","shouldShowActions","useMedia","md","copyCallBack","useCallback","div","onClick","className","Text","variant","color","neutral2","val","shortenAddress","Copy","data-testid","size","neutral3","_cn3","_cn2","PoolAndGaugeAddress","poolAddress","gaugeAddress","fontWeight","AddLiquidityContext","createContext","AddLiquidityProvider","children","addLiquidityStep","setAddLiquidityStep","useState","Provider","value","useAddLiquidityContext","context","useContext","Error","EditAmoutAndAllowButton","Button","styled","button","$lock","surface2Hovered","accent1","neutral1","surface1","role","AmountData","label","symbol","price","TextWrapper","AllowConfirmAccess","Flex","p","$sm","borderRadius","maxWidth","width","style","background","surface2","variable","position","overflow","map","item","index","RoundedLogo","textAlign","br","DepositAmoutAndEdit","Check","backgroundColor","px","py","cursor","onPress","DepositedDetails","ThemeColors","greenVibrant","ChangePoolAndIncetivizeButton","mt","row","gap","$platform-web","display","gridTemplateColumns","Link","to","SwapTokenButtons","swapToken","setSwapToken","TokenAmoutInput","inputRef","useRef","setValue","borderWidth","borderColor","justifyContent","alignItems","current","focus","focusWithinStyle","transition","Input","ref","placeholder","fontSize","inputMode","keyboardType","onChangeText","text","numericValue","replace","IncreaseOrSetDepositAmount","type","PoolInfoAndChange","toggleModal","togglePoolInfoModal","useModalState","ModalName","PoolInfo","ButtonContainer","group","LogoProvider","MouseoverTooltip","TooltipSize","Max","placement","hoverStyle","opacity","$group-hover","InfoCircleFilled","PoolInfoModal","modalName","isOpen","isModalOpen","onClose","Modal","extendOnKeyboardVisible","fullScreen","hideKeyboardOnDismiss","hideKeyboardOnSwipeDown","renderBehindBottomInset","maxHeight","padding","height","centered","X","concatClassName","AddLiquidity","AddLiquidityPage","ButtonContext","ellipse","fontFamily","fontStyle","letterSpacing","maxFontSizeMultiplier","ButtonFrame","tag","focusable","variants","unstyled","false","flexWrap","flexDirection","hoverTheme","pressTheme","backgrounded","focusVisibleStyle","outlineColor","outlineStyle","outlineWidth","outlined","pressStyle","disabled","true","pointerEvents","defaultVariants","TAMAGUI_HEADLESS","ButtonText","userSelect","flexGrow","flexShrink","ButtonComponent","styleable","buttonProps","textProps","propsIn","Button2","isNested","propsActive","noNormalize","noExpand","icon","iconAfter","space","spaceFlex","scaleIcon","scaleSpace","separator","noTextWrap","restProps","iconSize","font","getThemedIcon","themedIcon","themedIconAfter","spaceSize","contents","inner","ensureKeys","direction","accessibilityRole","jsx","disableClassName","useButton","Icon"],"sourceRoot":""}