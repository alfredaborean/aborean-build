{"version":3,"file":"static/js/3248.de7014f6.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionInfo.tsx?c44f","webpack://@uniswap/interface/./src/pages/Pool/Positions/shared.tsx?2cdd","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionStatusIndicator.tsx?6ab3","../packages/ui/src/components/icons/StatusIndicatorCircle.tsx","components/Liquidity/LiquidityPositionStatusIndicator.tsx","components/Liquidity/LiquidityPositionInfo.tsx","components/Liquidity/LiquidityPositionInfoBadges.tsx","pages/Pool/Positions/shared.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [StatusIndicatorCircle, AnimatedStatusIndicatorCircle] = createIcon({\n  name: \"StatusIndicatorCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6Z\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Path\n    d=\"M2 6C2 3.79086 3.79086 2 6 2C8.20914 2 10 3.79086 10 6C10 8.20914 8.20914 10 6 10C3.79086 10 2 8.20914 2 6Z\"\n    fill={\"currentColor\"}\n  />\r\n    </Svg>,\n  defaultFill: \"#FF5F52\"\n});\n","\"use strict\";\nimport { lpStatusConfig } from \"components/Liquidity/constants\";\nimport { TextLoader } from \"pages/Pool/Positions/shared\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { StatusIndicatorCircle } from \"ui/src/components/icons/StatusIndicatorCircle\";\nexport function LiquidityPositionStatusIndicatorLoader() {\n  return <Flex row gap=\"$spacing6\" alignItems=\"center\">\r\n      <StatusIndicatorCircle color=\"$surface3\" />\r\n      <TextLoader variant=\"body3\" width={100} />\r\n    </Flex>;\n}\nexport function LiquidityPositionStatusIndicator({ status }) {\n  const config = lpStatusConfig[status];\n  if (!config) {\n    return null;\n  }\n  return <Flex row gap=\"$spacing6\" alignItems=\"center\">\r\n      <StatusIndicatorCircle color={config.color} />\r\n      <Text variant=\"body3\" color={config.color}>\r\n        <Trans i18nKey={config.i18nKey} />\r\n      </Text>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport {\n  LiquidityPositionStatusIndicator,\n  LiquidityPositionStatusIndicatorLoader\n} from \"components/Liquidity/LiquidityPositionStatusIndicator\";\nimport { getProtocolVersionLabel } from \"components/Liquidity/utils\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { TextLoader } from \"pages/Pool/Positions/shared\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Anchor, Button, Circle, Flex, Text, useMedia } from \"ui/src\";\nimport { RightArrow } from \"ui/src/components/icons/RightArrow\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { SplitLogo } from \"uniswap/src/components/CurrencyLogo/SplitLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useCurrencyInfos } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { getPoolDetailsURL } from \"uniswap/src/utils/linking\";\nexport function LiquidityPositionInfoLoader({ hideStatus }) {\n  return <Flex row gap=\"$gap16\" $md={{ width: \"100%\" }}>\r\n      <Circle size={44} backgroundColor=\"$surface3\" />\r\n      <Flex grow $md={{ row: true, justifyContent: \"space-between\", alignItems: \"flex-start\" }}>\r\n        <Flex my={hideStatus ? \"auto\" : \"$none\"}>\r\n          <TextLoader variant=\"subheading1\" width={100} />\r\n        </Flex>\r\n        {!hideStatus && <LiquidityPositionStatusIndicatorLoader />}\r\n      </Flex>\r\n    </Flex>;\n}\nexport function LiquidityPositionInfo({\n  positionInfo,\n  currencyLogoSize = 44,\n  hideStatusIndicator = false,\n  showMigrateButton = false,\n  isMiniVersion = false,\n  linkToPool = false,\n  includeLpIncentives = false,\n  includeNetwork = false\n}) {\n  const { currency0Amount, currency1Amount, status, feeTier, v4hook, version, chainId } = positionInfo;\n  const versionLabel = getProtocolVersionLabel(version);\n  const navigate = useNavigate();\n  const chainInfo = getChainInfo(positionInfo.chainId);\n  const media = useMedia();\n  const { t } = useTranslation();\n  const { formatPercent: _ } = useLocalizationContext();\n  const lpIncentiveRewardApr = positionInfo.version === ProtocolVersion.V4 && Boolean(positionInfo.boostedApr) ? positionInfo.boostedApr : void 0;\n  const isMigrateToV4ButtonVisible = useMemo(() => {\n    if (!(positionInfo.version === ProtocolVersion.V3 && showMigrateButton)) {\n      return false;\n    }\n    const isInMdToLgRange = media.lg && !media.md;\n    const isInXlToXxlRange = media.xxl && !media.xl;\n    const shouldHideInRange = isInMdToLgRange || isInXlToXxlRange;\n    return !shouldHideInRange;\n  }, [positionInfo.version, showMigrateButton, media.lg, media.md, media.xxl, media.xl]);\n  const [currency0Info, currency1Info] = useCurrencyInfos([\n    currencyId(currency0Amount.currency),\n    currencyId(currency1Amount.currency)\n  ]);\n  const includeNetworkInLogo = useMemo(\n    () => !includeNetwork || includeNetwork && media.lg,\n    [includeNetwork, media.lg]\n  );\n  const migrateToV4Button = () => {\n    return <Button\n      icon={<RightArrow />}\n      iconPosition=\"after\"\n      py=\"$spacing2\"\n      borderRadius=\"$rounded4\"\n      emphasis=\"secondary\"\n      size=\"xxsmall\"\n      onPress={(e) => {\n        e.preventDefault();\n        navigate(`/migrate/v3/${chainInfo.urlParam}/${positionInfo.tokenId}`);\n      }}\n    >\r\n        {t(\"pool.migrateToV4\")}\r\n      </Button>;\n  };\n  return <Flex row gap=\"$gap16\" $md={{ width: \"100%\" }} alignItems={isMiniVersion ? \"center\" : \"flex-start\"}>\r\n      <SplitLogo\n    inputCurrencyInfo={currency0Info}\n    outputCurrencyInfo={currency1Info}\n    size={currencyLogoSize}\n    chainId={includeNetworkInLogo ? chainId : null}\n  />\r\n      <Flex gap={isMiniVersion ? \"$none\" : \"$spacing2\"}>\r\n        <Flex\n    flexDirection={isMiniVersion ? \"column\" : \"row\"}\n    gap={isMiniVersion ? \"$none\" : \"$gap12\"}\n    $md={{ gap: isMiniVersion ? \"$none\" : \"$gap12\" }}\n    alignItems={isMiniVersion ? \"flex-start\" : \"center\"}\n  >\r\n          <Flex>\r\n            {linkToPool ? <Anchor href={getPoolDetailsURL(positionInfo.poolId, positionInfo.chainId)} textDecorationLine=\"none\">\r\n                <Text variant=\"subheading1\" {...ClickableTamaguiStyle}>\r\n                  {currency0Amount?.currency.symbol} / {currency1Amount?.currency.symbol}\r\n                </Text>\r\n              </Anchor> : <Text variant=\"subheading1\">\r\n                {currency0Amount?.currency.symbol} / {currency1Amount?.currency.symbol}\r\n              </Text>}\r\n          </Flex>\r\n          <Flex row gap={2} alignItems=\"center\">\r\n            <LiquidityPositionInfoBadges size=\"small\" versionLabel={versionLabel} v4hook={v4hook} feeTier={feeTier} />\r\n          </Flex>\r\n          {isMigrateToV4ButtonVisible && migrateToV4Button()}\r\n        </Flex>\r\n\r\n        {!isMiniVersion && <Flex row gap=\"$gap12\">\r\n            {includeNetwork && <Flex row gap=\"$spacing6\" alignItems=\"center\" $lg={{ display: \"none\" }}>\r\n                <NetworkLogo chainId={chainInfo.id} size={16} shape=\"square\" />\r\n                <Text variant=\"body3\" color=\"$neutral2\">\r\n                  {chainInfo.name}\r\n                </Text>\r\n              </Flex>}\r\n            {!hideStatusIndicator && <Flex row gap=\"$spacing6\" alignItems=\"center\">\r\n                <LiquidityPositionStatusIndicator status={status} />\r\n              </Flex>}\r\n            {includeLpIncentives && lpIncentiveRewardApr && <LpIncentivesAprDisplay\n    lpIncentiveRewardApr={lpIncentiveRewardApr}\n    hideBackground\n    tooltipProps={{\n      currency0Info,\n      currency1Info,\n      poolApr: positionInfo.apr,\n      totalApr: positionInfo.version === ProtocolVersion.V4 ? positionInfo.totalApr : void 0\n    }}\n  />}\r\n          </Flex>}\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { isDynamicFeeTierAmount } from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { CopyHelper } from \"theme/components/CopyHelper\";\nimport { styled, Text } from \"ui/src\";\nimport { DocumentList } from \"ui/src/components/icons/DocumentList\";\nimport { isAddress, shortenAddress } from \"utilities/src/addresses\";\nconst PositionInfoBadge = styled(Text, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  gap: \"$spacing2\",\n  variant: \"body3\",\n  color: \"$neutral2\",\n  backgroundColor: \"$surface3\",\n  py: \"$spacing2\",\n  px: \"$padding6\",\n  variants: {\n    size: {\n      default: {\n        variant: \"body3\"\n      },\n      small: {\n        variant: \"body4\"\n      }\n    },\n    placement: {\n      start: {\n        borderTopLeftRadius: \"$rounded4\",\n        borderBottomLeftRadius: \"$rounded4\",\n        display: \"none\"\n        // hide first badge\n      },\n      middle: {},\n      end: {\n        borderTopLeftRadius: \"$rounded4\",\n        borderBottomLeftRadius: \"$rounded4\",\n        borderTopRightRadius: \"$rounded4\",\n        borderBottomRightRadius: \"$rounded4\"\n      },\n      only: {\n        borderRadius: \"$rounded4\"\n      }\n    }\n  }\n});\nfunction getPlacement(index, length) {\n  return length === 1 ? \"only\" : index === 0 ? \"start\" : index === length - 1 ? \"end\" : \"middle\";\n}\nexport function LiquidityPositionInfoBadges({\n  versionLabel,\n  v4hook,\n  feeTier,\n  size = \"default\"\n}) {\n  const { t } = useTranslation();\n  const badges = useMemo(() => {\n    return [\n      // versionLabel ? { label: versionLabel } : undefined,\n      v4hook && v4hook !== ZERO_ADDRESS ? { label: v4hook, copyable: true, icon: <DocumentList color=\"$neutral2\" size={16} /> } : void 0,\n      feeTier !== void 0 && feeTier !== \"\" && (typeof feeTier === \"number\" || !isNaN(Number(feeTier))) ? isDynamicFeeTierAmount(feeTier) ? { label: t(\"common.dynamic\") } : { label: `${Number(feeTier) / 1e4}%` } : void 0\n    ].filter(Boolean);\n  }, [versionLabel, v4hook, feeTier, t]);\n  return <>\r\n      {badges.map(({ label, copyable, icon }, index) => {\n    const displayLabel = isAddress(label) ? shortenAddress(label) : label;\n    return <PositionInfoBadge\n      cursor={copyable ? \"pointer\" : \"unset\"}\n      key={label + index}\n      placement={getPlacement(index, badges.length)}\n      size={size}\n    >\r\n            {icon}\r\n            {copyable ? <CopyHelper toCopy={label} iconSize={12} iconPosition=\"right\">\r\n                {displayLabel}\r\n              </CopyHelper> : displayLabel}\r\n          </PositionInfoBadge>;\n  })}\r\n    </>;\n}\n","\"use strict\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Anchor, Flex, Main, Text, styled } from \"ui/src\";\nimport { Arrow } from \"ui/src/components/arrow/Arrow\";\nimport { fonts, iconSizes } from \"ui/src/theme\";\nconst LOADER_PADDING = 2;\nexport function TextLoader({ variant, width }) {\n  const height = fonts[variant].lineHeight;\n  return <Flex\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$rounded6\"\n    width={width}\n    height={height - LOADER_PADDING * 2}\n    my={LOADER_PADDING}\n  />;\n}\nexport const LoadingRow = styled(Flex, {\n  my: \"$spacing16\"\n});\nexport function ExternalArrowLink({\n  href,\n  openInNewTab = true,\n  children\n}) {\n  return <Anchor\n    textDecorationLine=\"none\"\n    href={href}\n    target={openInNewTab ? \"_blank\" : void 0}\n    {...ClickableTamaguiStyle}\n  >\r\n      <Flex gap=\"$gap8\" alignItems=\"center\" row>\r\n        <Text variant=\"buttonLabel3\" color=\"$neutral2\">\r\n          {children}\r\n        </Text>\r\n        <Arrow size={iconSizes.icon20} color=\"$neutral2\" />\r\n      </Flex>\r\n    </Anchor>;\n}\nexport const BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"$spacing32\",\n  width: \"100%\",\n  maxWidth: 1200,\n  zIndex: \"$default\",\n  py: \"$spacing24\",\n  px: \"$spacing40\",\n  $lg: {\n    px: \"$padding20\"\n  }\n});\n"],"names":["StatusIndicatorCircle","AnimatedStatusIndicatorCircle","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","fillOpacity","defaultFill","_cn","LiquidityPositionStatusIndicatorLoader","div","className","color","TextLoader","variant","width","LiquidityPositionStatusIndicator","status","config","lpStatusConfig","Text","Trans","i18nKey","_cn18","_cn17","_cn16","_cn15","_cn14","_cn13","_cn12","_cn11","_cn10","_cn1","_cn0","_cn9","_cn8","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","LiquidityPositionInfoLoader","hideStatus","concatClassName","LiquidityPositionInfo","positionInfo","currencyLogoSize","hideStatusIndicator","showMigrateButton","isMiniVersion","linkToPool","includeLpIncentives","includeNetwork","currency0Amount","currency1Amount","feeTier","v4hook","version","chainId","versionLabel","getProtocolVersionLabel","navigate","useNavigate","chainInfo","getChainInfo","media","useMedia","t","useTranslation","formatPercent","_","useLocalizationContext","lpIncentiveRewardApr","ProtocolVersion","V4","Boolean","boostedApr","isMigrateToV4ButtonVisible","useMemo","V3","isInMdToLgRange","lg","md","isInXlToXxlRange","xxl","xl","currency0Info","currency1Info","useCurrencyInfos","currencyId","currency","includeNetworkInLogo","SplitLogo","inputCurrencyInfo","outputCurrencyInfo","size","Anchor","href","getPoolDetailsURL","poolId","textDecorationLine","ClickableTamaguiStyle","symbol","LiquidityPositionInfoBadges","Button","icon","RightArrow","iconPosition","py","borderRadius","emphasis","onPress","e","preventDefault","urlParam","tokenId","NetworkLogo","id","shape","LpIncentivesAprDisplay","hideBackground","tooltipProps","poolApr","apr","totalApr","PositionInfoBadge","styled","display","flexDirection","alignItems","gap","backgroundColor","px","variants","default","small","placement","start","borderTopLeftRadius","borderBottomLeftRadius","middle","end","borderTopRightRadius","borderBottomRightRadius","only","getPlacement","index","length","badges","ZERO_ADDRESS","label","copyable","DocumentList","isNaN","Number","isDynamicFeeTierAmount","filter","map","displayLabel","isAddress","shortenAddress","cursor","CopyHelper","toCopy","iconSize","LOADER_PADDING","height","fonts","lineHeight","Flex","my","LoadingRow","ExternalArrowLink","openInNewTab","children","target","Arrow","iconSizes","icon20","BodyWrapper","Main","maxWidth","zIndex","$lg"],"sourceRoot":""}