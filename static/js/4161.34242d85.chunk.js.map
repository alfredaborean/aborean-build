{"version":3,"file":"static/js/4161.34242d85.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Table/index.tsx?8372","webpack://@uniswap/interface/./src/components/Pools/PoolTable/PoolTable.tsx?3391","components/Pools/PoolTable/PoolTable.tsx","components/Table/index.tsx","graphql/data/pools/useTopPools.ts","state/explore/topPools.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { InterfaceElementName } from \"@uniswap/analytics-events\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport LPIncentiveFeeStatTooltip from \"components/Liquidity/LPIncentiveFeeStatTooltip\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport {\n  ClickableHeaderRow,\n  EllipsisText,\n  HeaderArrow,\n  HeaderCell,\n  HeaderSortText,\n  TableText\n} from \"components/Table/styled\";\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from \"components/Tokens/constants\";\nimport { exploreSearchStringAtom } from \"components/Tokens/state\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection, gqlToCurrency, supportedChainIdFromGQLChain, unwrapToken } from \"graphql/data/util\";\nimport useSimplePagination from \"hooks/useSimplePagination\";\nimport { useAtom } from \"jotai\";\nimport { atomWithReset, useAtomValue, useResetAtom, useUpdateAtom } from \"jotai/utils\";\nimport { memo, useCallback, useEffect, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { TABLE_PAGE_SIZE, giveExploreStatDefaultValue } from \"state/explore\";\nimport { useExploreContextTopPools } from \"state/explore/topPools\";\nimport { Flex, Text, styled, useMedia } from \"ui/src\";\nimport { LearnMoreLink } from \"uniswap/src/components/text/LearnMoreLink\";\nimport { getNativeAddress } from \"uniswap/src/constants/addresses\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TableWrapper = styled(Flex, {\n  m: \"0 auto\",\n  maxWidth: MAX_WIDTH_MEDIA_BREAKPOINT\n});\nexport const PoolDetailsBadge = styled(Text, {\n  py: 2,\n  px: 6,\n  backgroundColor: \"$surface2\",\n  color: \"$neutral2\",\n  variants: {\n    $position: {\n      right: {\n        borderTopRightRadius: 4,\n        borderBottomRightRadius: 4\n      },\n      left: {\n        borderTopLeftRadius: 4,\n        borderBottomLeftRadius: 4\n      }\n    }\n  }\n});\nfunction PoolDescription({\n  token0,\n  token1,\n  chainId\n}) {\n  const currencies = [token0 ? gqlToCurrency(token0) : void 0, token1 ? gqlToCurrency(token1) : void 0];\n  return <Flex row gap=\"$gap8\" alignItems=\"center\" maxWidth=\"100%\">\r\n      <PortfolioLogo currencies={currencies} chainId={chainId} size={24} />\r\n      <EllipsisText>\r\n        {token0?.symbol}/{token1?.symbol}\r\n      </EllipsisText>\r\n    </Flex>;\n}\nexport const sortMethodAtom = atomWithReset(PoolSortFields.TVL);\nexport const sortAscendingAtom = atomWithReset(false);\nfunction useSetSortMethod(newSortMethod) {\n  const [sortMethod, setSortMethod] = useAtom(sortMethodAtom);\n  const setSortAscending = useUpdateAtom(sortAscendingAtom);\n  return useCallback(() => {\n    if (sortMethod === newSortMethod) {\n      setSortAscending((sortAscending) => !sortAscending);\n    } else {\n      setSortMethod(newSortMethod);\n      setSortAscending(false);\n    }\n  }, [sortMethod, setSortMethod, setSortAscending, newSortMethod]);\n}\nfunction PoolTableHeader({\n  category,\n  isCurrentSortMethod,\n  direction\n}) {\n  const handleSortCategory = useSetSortMethod(category);\n  const { t } = useTranslation();\n  const HEADER_DESCRIPTIONS = {\n    [PoolSortFields.TVL]: t(\"stats.tvl\"),\n    [PoolSortFields.Volume24h]: t(\"stats.volume.1d\"),\n    [PoolSortFields.Volume30D]: t(\"pool.volume.thirtyDay\"),\n    [PoolSortFields.VolOverTvl]: void 0,\n    [PoolSortFields.Apr]: t(\"pool.apr.description\"),\n    [PoolSortFields.RewardApr]: <>\r\n        {t(\"pool.incentives.merklDocs\")}\r\n        <LearnMoreLink textVariant=\"buttonLabel4\" url={uniswapUrls.merklDocsUrl} />\r\n      </>\n  };\n  const HEADER_TEXT = {\n    [PoolSortFields.TVL]: t(\"common.totalValueLocked\"),\n    [PoolSortFields.Volume24h]: t(\"stats.volume.1d.short\"),\n    [PoolSortFields.Volume30D]: t(\"pool.volume.thirtyDay.short\"),\n    [PoolSortFields.Apr]: t(\"pool.aprText\"),\n    [PoolSortFields.VolOverTvl]: t(\"pool.volOverTvl\"),\n    [PoolSortFields.RewardApr]: \"Reward APR\"\n  };\n  return <Flex width=\"100%\">\r\n      <MouseoverTooltip\n    disabled={!HEADER_DESCRIPTIONS[category]}\n    size={TooltipSize.Max}\n    text={HEADER_DESCRIPTIONS[category]}\n    placement=\"top\"\n  >\r\n        <ClickableHeaderRow justifyContent=\"flex-end\" onPress={handleSortCategory} group>\r\n          <HeaderArrow orderDirection={direction} size={14} opacity={isCurrentSortMethod ? 1 : 0} />\r\n          <HeaderSortText active={isCurrentSortMethod} variant=\"body3\">\r\n            {HEADER_TEXT[category]}\r\n          </HeaderSortText>\r\n        </ClickableHeaderRow>\r\n      </MouseoverTooltip>\r\n    </Flex>;\n}\nexport const ExploreTopPoolTable = memo(function ExploreTopPoolTable2() {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  const { topPools, isLoading, isError } = useExploreContextTopPools({\n    sortBy: sortMethod,\n    sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc\n  });\n  return <TopPoolTable topPoolData={{ topPools, isLoading, isError }} />;\n});\nexport const TopPoolTable = memo(function TopPoolTable2({\n  topPoolData,\n  pageSize = TABLE_PAGE_SIZE,\n  staticSize = false,\n  forcePinning = false\n}) {\n  const { topPools, isLoading, isError } = topPoolData;\n  const { page, loadMore } = useSimplePagination();\n  return <TableWrapper data-testid=\"top-pools-explore-table\">\r\n      <PoolsTable\n    pools={topPools?.slice(0, page * pageSize)}\n    loading={isLoading}\n    error={isError}\n    loadMore={staticSize ? void 0 : loadMore}\n    maxWidth={1200}\n    forcePinning={forcePinning}\n    maxHeight={staticSize ? 1e3 : void 0}\n  />\r\n    </TableWrapper>;\n});\nexport function PoolsTable({\n  pools,\n  loading,\n  error,\n  loadMore,\n  maxWidth,\n  maxHeight,\n  hiddenColumns,\n  forcePinning\n}) {\n  const { formatNumber, formatPercent } = useFormatter();\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const orderDirection = sortAscending ? OrderDirection.Asc : OrderDirection.Desc;\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const { defaultChainId } = useEnabledChains();\n  const { t } = useTranslation();\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const poolTableValues = useMemo(\n    () => pools?.map((pool, index) => {\n      const poolSortRank = index + 1;\n      const isGqlPool = \"hash\" in pool;\n      const chainId = supportedChainIdFromGQLChain(pool.token0?.chain) ?? defaultChainId;\n      const token0Address = pool.token0?.address || getNativeAddress(chainId);\n      const token1Address = pool.token1?.address || getNativeAddress(chainId);\n      const currency0Id = buildCurrencyId(chainId, token0Address);\n      const currency1Id = buildCurrencyId(chainId, token1Address);\n      return {\n        index: poolSortRank,\n        poolDescription: <PoolDescription\n          token0={unwrapToken(chainId, pool.token0)}\n          token1={unwrapToken(chainId, pool.token1)}\n          chainId={chainId}\n        />,\n        feeTier: pool.feeTier,\n        tvl: isGqlPool ? pool.tvl : giveExploreStatDefaultValue(pool.totalLiquidity?.value),\n        volume24h: isGqlPool ? pool.volume24h : giveExploreStatDefaultValue(pool.volume1Day?.value),\n        volume30d: isGqlPool ? pool.volume30d : giveExploreStatDefaultValue(pool.volume30Day?.value),\n        volOverTvl: pool.volOverTvl,\n        apr: pool.apr,\n        rewardApr: pool.boostedApr,\n        link: `/explore/pools/${getChainUrlParam(chainId ?? defaultChainId)}/${isGqlPool ? pool.hash : pool.id}`,\n        token0CurrencyId: currency0Id,\n        token1CurrencyId: currency1Id,\n        analytics: {\n          elementName: InterfaceElementName.POOLS_TABLE_ROW,\n          properties: {\n            chain_id: chainId,\n            pool_address: isGqlPool ? pool.hash : pool?.id,\n            token0_address: pool?.token0?.address,\n            token0_symbol: pool?.token0?.symbol,\n            token1_address: pool?.token1?.address,\n            token1_symbol: pool?.token1?.symbol,\n            pool_list_index: index,\n            pool_list_rank: poolSortRank,\n            pool_list_length: pools.length,\n            search_pool_input: filterString\n          }\n        }\n      };\n    }) ?? [],\n    [defaultChainId, filterString, pools]\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const media = useMedia();\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    const filteredColumns = [\n      !media.lg ? columnHelper.accessor((row) => row.index, {\n        id: \"index\",\n        size: 60,\n        header: () => <HeaderCell justifyContent=\"flex-start\">\r\n                <Text variant=\"body3\" color=\"$neutral2\">\r\n                  #\r\n                </Text>\r\n              </HeaderCell>,\n        cell: (index) => <Cell justifyContent=\"flex-start\" loading={showLoadingSkeleton}>\r\n                <TableText>{index.getValue?.()}</TableText>\r\n              </Cell>\n      }) : null,\n      columnHelper.accessor((row) => row.poolDescription, {\n        id: \"poolDescription\",\n        size: media.lg ? 170 : 180,\n        header: () => <HeaderCell justifyContent=\"flex-start\">\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {t(\"common.pool\")}\r\n            </Text>\r\n          </HeaderCell>,\n        cell: (poolDescription) => <Cell justifyContent=\"flex-start\" loading={showLoadingSkeleton}>\r\n            {poolDescription.getValue?.()}\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.feeTier, {\n        id: \"feeTier\",\n        size: 90,\n        header: () => <HeaderCell>\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {t(\"fee.tier\")}\r\n            </Text>\r\n          </HeaderCell>,\n        cell: (feeTier) => <Cell loading={showLoadingSkeleton}>\r\n            <TableText>{feeTier.getValue?.() ? `${(feeTier.getValue() / BIPS_BASE).toFixed(2)}%` : \"-\"}</TableText>\r\n          </Cell>\n      }),\n      !hiddenColumns?.includes(PoolSortFields.TVL) ? columnHelper.accessor((row) => row.tvl, {\n        id: \"tvl\",\n        size: 110,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.TVL}\n          isCurrentSortMethod={sortMethod === PoolSortFields.TVL}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        cell: (tvl) => <Cell loading={showLoadingSkeleton}>\r\n                <TableText>{formatNumber({ input: tvl.getValue?.(), type: NumberType.FiatTokenStats })}</TableText>\r\n              </Cell>\n      }) : null,\n      !hiddenColumns?.includes(PoolSortFields.Apr) ? columnHelper.accessor((row) => row.apr, {\n        id: \"apr\",\n        size: 120,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.Apr}\n          isCurrentSortMethod={sortMethod === PoolSortFields.Apr}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        cell: (oneDayApr) => <Cell loading={showLoadingSkeleton}>\r\n                <TableText>{formatPercent(oneDayApr.getValue?.())}</TableText>\r\n              </Cell>\n      }) : null,\n      !hiddenColumns?.includes(PoolSortFields.RewardApr) && isLPIncentivesEnabled ? columnHelper.accessor((row) => row.rewardApr, {\n        id: PoolSortFields.RewardApr,\n        size: 130,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.RewardApr}\n          isCurrentSortMethod={sortMethod === PoolSortFields.RewardApr}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        sortingFn: \"basic\",\n        cell: ({ row }) => {\n          if (!row?.original) {\n            return null;\n          }\n          const { apr, token0CurrencyId, token1CurrencyId, rewardApr } = row.original;\n          return <RewardAprCell\n            apr={apr}\n            rewardApr={rewardApr}\n            token0CurrencyId={token0CurrencyId}\n            token1CurrencyId={token1CurrencyId}\n            isLoading={showLoadingSkeleton}\n          />;\n        }\n      }) : null,\n      !hiddenColumns?.includes(PoolSortFields.Volume24h) ? columnHelper.accessor((row) => row.volume24h, {\n        id: \"volume24h\",\n        size: 120,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.Volume24h}\n          isCurrentSortMethod={sortMethod === PoolSortFields.Volume24h}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        cell: (volume24h) => {\n          return <Cell loading={showLoadingSkeleton}>\r\n                  <TableText>\r\n                    {formatNumber({ input: volume24h.getValue?.(), type: NumberType.FiatTokenStats })}\r\n                  </TableText>\r\n                </Cell>;\n        }\n      }) : null,\n      !hiddenColumns?.includes(PoolSortFields.Volume30D) ? columnHelper.accessor((row) => row.volume30d, {\n        id: \"volume30Day\",\n        size: 120,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.Volume30D}\n          isCurrentSortMethod={sortMethod === PoolSortFields.Volume30D}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        cell: (volumeWeek) => <Cell loading={showLoadingSkeleton}>\r\n                <TableText>\r\n                  {formatNumber({ input: volumeWeek.getValue?.(), type: NumberType.FiatTokenStats })}\r\n                </TableText>\r\n              </Cell>\n      }) : null,\n      !hiddenColumns?.includes(PoolSortFields.VolOverTvl) ? columnHelper.accessor((row) => row.volOverTvl, {\n        id: \"volOverTvl\",\n        size: 120,\n        header: () => <HeaderCell>\r\n                <PoolTableHeader\n          category={PoolSortFields.VolOverTvl}\n          isCurrentSortMethod={sortMethod === PoolSortFields.VolOverTvl}\n          direction={orderDirection}\n        />\r\n              </HeaderCell>,\n        cell: (volOverTvl) => <Cell loading={showLoadingSkeleton}>\r\n                <TableText>\r\n                  {formatNumber({\n          input: volOverTvl.getValue?.(),\n          type: NumberType.TokenQuantityStats,\n          placeholder: \"-\"\n        })}\r\n                </TableText>\r\n              </Cell>\n      }) : null\n    ];\n    return filteredColumns.filter((column) => Boolean(column));\n  }, [\n    media.lg,\n    hiddenColumns,\n    isLPIncentivesEnabled,\n    showLoadingSkeleton,\n    t,\n    sortMethod,\n    orderDirection,\n    formatNumber,\n    formatPercent\n  ]);\n  return <Table\n    columns={columns}\n    data={poolTableValues ?? []}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxWidth={maxWidth}\n    maxHeight={maxHeight}\n    defaultPinnedColumns={[\"index\", \"poolDescription\"]}\n    forcePinning={forcePinning}\n  />;\n}\nfunction RewardAprCell({ apr, isLoading, rewardApr, token0CurrencyId, token1CurrencyId }) {\n  const { formatPercent } = useLocalizationContext();\n  const currency0Info = useCurrencyInfo(token0CurrencyId);\n  const currency1Info = useCurrencyInfo(token1CurrencyId);\n  const poolApr = parseFloat(apr.toFixed(2));\n  const totalApr = poolApr + (rewardApr ?? 0);\n  if (!rewardApr) {\n    return <Cell loading={isLoading} gap=\"$spacing2\">\r\n        <TableText color=\"$neutral3\">-</TableText>\r\n      </Cell>;\n  }\n  return <MouseoverTooltip\n    padding={0}\n    text={<LPIncentiveFeeStatTooltip\n      currency0Info={currency0Info}\n      currency1Info={currency1Info}\n      poolApr={poolApr}\n      lpIncentiveRewardApr={rewardApr}\n      totalApr={totalApr}\n    />}\n    size={TooltipSize.Small}\n    placement=\"top\"\n  >\r\n      <Cell loading={isLoading} gap=\"$spacing2\">\r\n        <TableText color=\"$neutral3\">+</TableText>\r\n        <TableText color=\"$accent1\" mr=\"$spacing4\">\r\n          {formatPercent(rewardApr)}\r\n        </TableText>\r\n        <Flex height={20} width={20} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n          <img height={16} width={16} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n        </Flex>\r\n      </Cell>\r\n    </MouseoverTooltip>;\n}\n","\"use strict\";\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable\n} from \"@tanstack/react-table\";\nimport { useParentSize } from \"@visx/responsive\";\nimport Loader from \"components/Icons/LoadingSpinner\";\nimport { ErrorModal } from \"components/Table/ErrorBox\";\nimport { ScrollButton } from \"components/Table/ScrollButton\";\nimport { TableSizeProvider, useTableSize } from \"components/Table/TableSizeProvider\";\nimport {\n  CellContainer,\n  DataRow,\n  HeaderRow,\n  LOAD_MORE_BOTTOM_OFFSET,\n  LoadingIndicator,\n  LoadingIndicatorContainer,\n  NoDataFoundTableRow,\n  SHOW_RETURN_TO_TOP_OFFSET,\n  TableBodyContainer,\n  TableContainer,\n  TableHead,\n  TableRowLink,\n  TableScrollMask\n} from \"components/Table/styled\";\nimport { getCommonPinningStyles } from \"components/Table/utils\";\nimport useDebounce from \"hooks/useDebounce\";\nimport { forwardRef, memo, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ScrollSync, ScrollSyncPane } from \"react-scroll-sync\";\nimport { ThemedText } from \"theme/components\";\nimport { Flex } from \"ui/src\";\nimport { useSporeColors } from \"ui/src/hooks/useSporeColors\";\nimport { INTERFACE_NAV_HEIGHT, breakpoints, zIndexes } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nconst ROW_HEIGHT_DESKTOP = 56;\nconst ROW_HEIGHT_MOBILE_WEB = 48;\nconst TableCell = memo(({ cell, colors }) => {\n  return <CellContainer style={getCommonPinningStyles(cell.column, colors)}>\r\n      {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n    </CellContainer>;\n});\nTableCell.displayName = \"TableCell\";\nconst TableRow = ({ row }) => {\n  const analyticsContext = useTrace();\n  const rowOriginal = row.original;\n  const linkState = rowOriginal.linkState;\n  const rowTestId = rowOriginal.testId;\n  const colors = useSporeColors();\n  const { width: tableWidth } = useTableSize();\n  const rowHeight = useMemo(\n    () => tableWidth <= breakpoints.lg ? ROW_HEIGHT_MOBILE_WEB : ROW_HEIGHT_DESKTOP,\n    [tableWidth]\n  );\n  const cells = row.getVisibleCells().map((cell) => <TableCell key={cell.id} cell={cell} colors={colors} />);\n  return <Trace\n    logPress\n    element={rowOriginal.analytics?.elementName}\n    properties={{\n      ...rowOriginal.analytics?.properties,\n      ...analyticsContext\n    }}\n  >\r\n      {\"link\" in rowOriginal && typeof rowOriginal.link === \"string\" ? <TableRowLink to={rowOriginal.link} state={linkState} data-testid={rowTestId}>\r\n          <DataRow height={rowHeight}>{cells}</DataRow>\r\n        </TableRowLink> : <DataRow height={rowHeight} data-testid={rowTestId}>\r\n          {cells}\r\n        </DataRow>}\r\n    </Trace>;\n};\nconst TableBody = forwardRef(({ table, loading, error }, ref) => {\n  const rows = table.getRowModel().rows;\n  if (loading || error) {\n    return <>\r\n        {Array.from({ length: 20 }, (_, rowIndex) => <DataRow key={`skeleton-row-${rowIndex}`}>\r\n            {table.getAllColumns().map((column, columnIndex) => <CellContainer key={`skeleton-row-${rowIndex}-column-${columnIndex}`}>\r\n                {flexRender(column.columnDef.cell, {})}\r\n              </CellContainer>)}\r\n          </DataRow>)}\r\n        {error && <ErrorModal\n      header={<Trans i18nKey=\"common.errorLoadingData.error\" />}\n      subtitle={<Trans i18nKey=\"error.dataUnavailable\" />}\n    />}\r\n      </>;\n  }\n  if (!rows.length) {\n    return <NoDataFoundTableRow py=\"$spacing20\">\r\n        <ThemedText.BodySecondary>\r\n          <Trans i18nKey=\"error.noData\" />\r\n        </ThemedText.BodySecondary>\r\n      </NoDataFoundTableRow>;\n  }\n  return <Flex ref={ref} position=\"relative\">\r\n      {rows.map((row) => <TableRow key={row.id} row={row} />)}\r\n    </Flex>;\n});\nTableBody.displayName = \"TableBody\";\nexport function Table({\n  columns,\n  data,\n  loading,\n  error,\n  loadMore,\n  maxWidth,\n  maxHeight,\n  defaultPinnedColumns = [],\n  forcePinning = false\n}) {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [showScrollRightButton, setShowScrollRightButton] = useState(false);\n  const [showScrollLeftButton, setShowScrollLeftButton] = useState(false);\n  const colors = useSporeColors();\n  const [pinnedColumns, setPinnedColumns] = useState([]);\n  const [scrollPosition, setScrollPosition] = useState({\n    distanceFromTop: 0,\n    distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n  });\n  const { distanceFromTop, distanceToBottom } = useDebounce(scrollPosition, 125);\n  const tableBodyRef = useRef(null);\n  const lastLoadedLengthRef = useRef(0);\n  const canLoadMore = useRef(true);\n  const isSticky = useMemo(() => !maxHeight, [maxHeight]);\n  const { parentRef, width, height, top, left } = useParentSize();\n  useEffect(() => {\n    const scrollableElement = maxHeight ? tableBodyRef.current : window;\n    if (scrollableElement === null) {\n      return void 0;\n    }\n    const updateScrollPosition = () => {\n      if (scrollableElement instanceof HTMLDivElement) {\n        const { scrollTop, scrollHeight, clientHeight } = scrollableElement;\n        setScrollPosition({\n          distanceFromTop: scrollTop,\n          distanceToBottom: scrollHeight - scrollTop - clientHeight\n        });\n      } else {\n        setScrollPosition({\n          distanceFromTop: scrollableElement.scrollY,\n          distanceToBottom: document.body.scrollHeight - scrollableElement.scrollY - scrollableElement.innerHeight\n        });\n      }\n    };\n    scrollableElement.addEventListener(\"scroll\", updateScrollPosition);\n    return () => scrollableElement.removeEventListener(\"scroll\", updateScrollPosition);\n  }, [loadMore, maxHeight, loadingMore, tableBodyRef]);\n  useEffect(() => {\n    if (distanceToBottom < LOAD_MORE_BOTTOM_OFFSET && !loadingMore && loadMore && canLoadMore.current && !error) {\n      setLoadingMore(true);\n      setScrollPosition({\n        distanceFromTop: SHOW_RETURN_TO_TOP_OFFSET,\n        distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n      });\n      loadMore({\n        onComplete: () => {\n          setLoadingMore(false);\n          if (data?.length === lastLoadedLengthRef.current) {\n            canLoadMore.current = false;\n          } else {\n            lastLoadedLengthRef.current = data?.length ?? 0;\n          }\n        }\n      });\n    }\n  }, [data?.length, distanceFromTop, distanceToBottom, error, loadMore, loading, loadingMore]);\n  const table = useReactTable({\n    columns,\n    data,\n    state: { columnPinning: { left: pinnedColumns } },\n    getCoreRowModel: getCoreRowModel()\n  });\n  useEffect(() => {\n    const resizeHandler = () => {\n      if (!defaultPinnedColumns.length) {\n        return;\n      }\n      if (maxWidth && window.innerWidth < maxWidth || forcePinning) {\n        setPinnedColumns(defaultPinnedColumns);\n      } else {\n        setPinnedColumns([]);\n      }\n    };\n    resizeHandler();\n    window.addEventListener(\"resize\", resizeHandler);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler);\n    };\n  }, [maxWidth, defaultPinnedColumns, forcePinning, table]);\n  useEffect(() => {\n    const container = tableBodyRef.current?.parentElement;\n    if (!container || loading) {\n      return void 0;\n    }\n    const horizontalScrollHandler = () => {\n      const maxScrollLeft = container.scrollWidth - container.clientWidth;\n      const nextShowScrollRightButton = container.scrollLeft < maxScrollLeft;\n      if (showScrollRightButton !== nextShowScrollRightButton) {\n        setShowScrollRightButton(nextShowScrollRightButton);\n      }\n      const nextShowScrollLeftButton = container.scrollLeft > 0;\n      if (showScrollLeftButton !== nextShowScrollLeftButton) {\n        setShowScrollLeftButton(nextShowScrollLeftButton);\n      }\n    };\n    horizontalScrollHandler();\n    container.addEventListener(\"scroll\", horizontalScrollHandler);\n    return () => {\n      container.removeEventListener(\"scroll\", horizontalScrollHandler);\n    };\n  }, [loading, showScrollLeftButton, showScrollRightButton, tableBodyRef]);\n  const headerHeight = useMemo(() => {\n    const header = document.getElementById(\"AppHeader\");\n    return header?.clientHeight || INTERFACE_NAV_HEIGHT;\n  }, []);\n  const scrollButtonTop = useMemo(() => {\n    if (maxHeight) {\n      return height / 2;\n    } else if (isSticky) {\n      return (window.innerHeight - (headerHeight + 12)) / 2;\n    }\n    return 0;\n  }, [headerHeight, height, isSticky, maxHeight]);\n  const onScrollButtonPress = useCallback(\n    (direction) => () => {\n      const container = tableBodyRef.current?.parentElement;\n      if (!container) {\n        return;\n      }\n      const numPinnedVisibleColumns = table.getLeftVisibleLeafColumns().length;\n      const regularColumns = table.getAllColumns().slice(numPinnedVisibleColumns);\n      const widths = regularColumns.map((column) => column.getSize());\n      const cumulativeWidths = widths.reduce(\n        (acc, current) => {\n          const lastSum = acc.length > 0 ? acc[acc.length - 1] : 0;\n          return [...acc, lastSum + current];\n        },\n        [0]\n      );\n      if (direction === \"left\") {\n        cumulativeWidths.reverse();\n      }\n      const nextScrollLeft = cumulativeWidths.find((width2) => {\n        if (direction === \"left\") {\n          return width2 < container.scrollLeft;\n        }\n        return width2 > container.scrollLeft;\n      });\n      container.scrollTo({ left: nextScrollLeft, behavior: \"smooth\" });\n    },\n    [table]\n  );\n  const hasPinnedColumns = useMemo(() => pinnedColumns.length > 0, [pinnedColumns]);\n  const tableSize = useMemo(() => ({ width, height, top, left }), [width, height, top, left]);\n  return <TableSizeProvider value={tableSize}>\r\n      <ScrollSync horizontal>\r\n        <TableContainer maxWidth={maxWidth} maxHeight={maxHeight} position=\"relative\" ref={parentRef}>\r\n          <TableHead $isSticky={isSticky} $top={headerHeight}>\r\n            {hasPinnedColumns && <>\r\n                <Flex\n    position=\"absolute\"\n    top={scrollButtonTop}\n    left={table.getLeftTotalSize()}\n    pl=\"$spacing12\"\n    zIndex={zIndexes.default}\n  >\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"left\")}\n    opacity={showScrollLeftButton ? 1 : 0}\n    direction=\"left\"\n  />\r\n                </Flex>\r\n                <Flex position=\"absolute\" top={scrollButtonTop} right={0} pr=\"$spacing12\" zIndex={zIndexes.default}>\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"right\")}\n    opacity={showScrollRightButton ? 1 : 0}\n    direction=\"right\"\n  />\r\n                </Flex>\r\n                <TableScrollMask\n    top={isSticky ? \"$spacing12\" : 0}\n    zIndex={zIndexes.dropdown - 1}\n    borderTopRightRadius=\"$rounded20\"\n  />\r\n              </>}\r\n            <ScrollSyncPane group=\"table-sync\">\r\n              <HeaderRow dimmed={!!error}>\r\n                {table.getFlatHeaders().map((header) => <CellContainer key={header.id} style={getCommonPinningStyles(header.column, colors)}>\r\n                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </CellContainer>)}\r\n              </HeaderRow>\r\n            </ScrollSyncPane>\r\n          </TableHead>\r\n          {hasPinnedColumns && <TableScrollMask zIndex={zIndexes.default} borderBottomRightRadius=\"$rounded20\" />}\r\n          <ScrollSyncPane group=\"table-sync\">\r\n            <TableBodyContainer maxHeight={maxHeight ? maxHeight - headerHeight : \"unset\"}>\r\n              <TableBody\n    loading={loading}\n    error={error}\n    table={table}\n    ref={tableBodyRef}\n  />\r\n            </TableBodyContainer>\r\n          </ScrollSyncPane>\r\n          {loadingMore && <LoadingIndicatorContainer>\r\n              <LoadingIndicator>\r\n                <Loader />\r\n                <Trans i18nKey=\"common.loading\" />\r\n              </LoadingIndicator>\r\n            </LoadingIndicatorContainer>}\r\n        </TableContainer>\r\n      </ScrollSync>\r\n    </TableSizeProvider>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nexport function sortPools(pools, sortState) {\n  return pools.sort((a, b) => {\n    switch (sortState.sortBy) {\n      case \"1 day volume/TVL\" /* VolOverTvl */:\n        return sortState.sortDirection === OrderDirection.Desc ? b.volOverTvl - a.volOverTvl : a.volOverTvl - b.volOverTvl;\n      case \"1 day volume\" /* Volume24h */:\n        return sortState.sortDirection === OrderDirection.Desc ? b.volume24h - a.volume24h : a.volume24h - b.volume24h;\n      case \"30 day volume\" /* Volume30D */:\n        return sortState.sortDirection === OrderDirection.Desc ? b.volume30d - a.volume30d : a.volume30d - b.volume30d;\n      case \"APR\" /* Apr */:\n        return sortState.sortDirection === OrderDirection.Desc ? b.apr.greaterThan(a.apr) ? 1 : -1 : a.apr.greaterThan(b.apr) ? 1 : -1;\n      default:\n        return sortState.sortDirection === OrderDirection.Desc ? b.tvl - a.tvl : a.tvl - b.tvl;\n    }\n  });\n}\nexport function calculate1DVolOverTvl(volume24h, tvl) {\n  if (!volume24h || !tvl) {\n    return void 0;\n  }\n  return volume24h / tvl;\n}\nexport function calculateApr(volume24h, tvl, feeTier) {\n  if (!volume24h || !feeTier || !tvl || !Math.round(tvl)) {\n    return new Percent(0);\n  }\n  return new Percent(Math.round(volume24h * (feeTier / (BIPS_BASE * 100)) * 365), Math.round(tvl));\n}\nexport const V2_BIPS = 3e3;\nexport var PoolSortFields = /* @__PURE__ */ ((PoolSortFields2) => {\n  PoolSortFields2[\"TVL\"] = \"TVL\";\n  PoolSortFields2[\"Apr\"] = \"APR\";\n  PoolSortFields2[\"RewardApr\"] = \"Reward APR\";\n  PoolSortFields2[\"Volume24h\"] = \"1 day volume\";\n  PoolSortFields2[\"Volume30D\"] = \"30 day volume\";\n  PoolSortFields2[\"VolOverTvl\"] = \"1 day volume/TVL\";\n  return PoolSortFields2;\n})(PoolSortFields || {});\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { exploreSearchStringAtom } from \"components/Tokens/state\";\nimport {\n  PoolSortFields,\n  V2_BIPS,\n  calculate1DVolOverTvl,\n  calculateApr\n} from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { useContext, useMemo } from \"react\";\nimport { ExploreContext, giveExploreStatDefaultValue } from \"state/explore\";\nfunction useFilteredPools(pools) {\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const lowercaseFilterString = useMemo(() => filterString.toLowerCase(), [filterString]);\n  return useMemo(\n    () => pools?.filter((pool) => {\n      const addressIncludesFilterString = pool.id.toLowerCase().includes(lowercaseFilterString);\n      const token0IncludesFilterString = pool.token0?.symbol?.toLowerCase().includes(lowercaseFilterString);\n      const token1IncludesFilterString = pool.token1?.symbol?.toLowerCase().includes(lowercaseFilterString);\n      const token0HashIncludesFilterString = pool.token0?.address?.toLowerCase().includes(lowercaseFilterString);\n      const token1HashIncludesFilterString = pool.token1?.address?.toLowerCase().includes(lowercaseFilterString);\n      const poolName = `${pool.token0?.symbol}/${pool.token1?.symbol}`.toLowerCase();\n      const poolNameIncludesFilterString = poolName.includes(lowercaseFilterString);\n      return token0IncludesFilterString || token1IncludesFilterString || addressIncludesFilterString || token0HashIncludesFilterString || token1HashIncludesFilterString || poolNameIncludesFilterString;\n    }),\n    [lowercaseFilterString, pools]\n  );\n}\nfunction sortPools(sortState, pools) {\n  return pools?.sort((a, b) => {\n    switch (sortState.sortBy) {\n      case PoolSortFields.VolOverTvl:\n        return sortState.sortDirection === OrderDirection.Desc ? (b?.volOverTvl ?? 0) - (a?.volOverTvl ?? 0) : (a?.volOverTvl ?? 0) - (b?.volOverTvl ?? 0);\n      case PoolSortFields.Volume24h:\n        return sortState.sortDirection === OrderDirection.Desc ? giveExploreStatDefaultValue(b?.volume1Day?.value) - giveExploreStatDefaultValue(a?.volume1Day?.value) : giveExploreStatDefaultValue(a?.volume1Day?.value) - giveExploreStatDefaultValue(b?.volume1Day?.value);\n      case PoolSortFields.Volume30D:\n        return sortState.sortDirection === OrderDirection.Desc ? giveExploreStatDefaultValue(b.volume30Day?.value) - giveExploreStatDefaultValue(a.volume30Day?.value) : giveExploreStatDefaultValue(a.volume30Day?.value) - giveExploreStatDefaultValue(b.volume30Day?.value);\n      case PoolSortFields.Apr:\n        return sortState.sortDirection === OrderDirection.Desc ? b.apr.greaterThan(a.apr) ? 1 : -1 : a.apr.greaterThan(b.apr) ? 1 : -1;\n      case PoolSortFields.RewardApr:\n        return sortState.sortDirection === OrderDirection.Desc ? (b.boostedApr ?? 0) - (a.boostedApr ?? 0) : (a.boostedApr ?? 0) - (b.boostedApr ?? 0);\n      default:\n        return sortState.sortDirection === OrderDirection.Desc ? giveExploreStatDefaultValue(b?.totalLiquidity?.value) - giveExploreStatDefaultValue(a?.totalLiquidity?.value) : giveExploreStatDefaultValue(a?.totalLiquidity?.value) - giveExploreStatDefaultValue(b?.totalLiquidity?.value);\n    }\n  });\n}\nfunction convertPoolStatsToPoolStat(poolStats) {\n  return {\n    ...poolStats,\n    apr: calculateApr(\n      giveExploreStatDefaultValue(poolStats.volume1Day?.value),\n      giveExploreStatDefaultValue(poolStats.totalLiquidity?.value),\n      poolStats.feeTier ?? V2_BIPS\n    ),\n    boostedApr: poolStats.boostedApr,\n    feeTier: poolStats.feeTier ?? V2_BIPS,\n    volOverTvl: calculate1DVolOverTvl(poolStats.volume1Day?.value, poolStats.totalLiquidity?.value),\n    hookAddress: poolStats.hook?.address\n  };\n}\nfunction getPoolDataByProtocol(data, protocol) {\n  switch (protocol) {\n    case ProtocolVersion.V2:\n      return data?.stats?.poolStatsV2;\n    case ProtocolVersion.V3:\n      return data?.stats?.poolStatsV3;\n    case ProtocolVersion.V4:\n      return data?.stats?.poolStatsV4;\n    default:\n      return data?.stats?.poolStats;\n  }\n}\nexport function useExploreContextTopPools(sortState, protocol) {\n  const {\n    exploreStats: { data, isLoading, error: isError }\n  } = useContext(ExploreContext);\n  return useTopPools({ data, isLoading, isError }, sortState, protocol);\n}\nexport function useTopPools(topPoolData, sortState, protocol) {\n  const { data, isLoading, isError } = topPoolData;\n  const poolStatsByProtocol = getPoolDataByProtocol(data, protocol);\n  const { sortedPoolStats, boostedPoolStats } = useMemo(() => {\n    const poolStats = poolStatsByProtocol?.map((poolStat) => convertPoolStatsToPoolStat(poolStat));\n    const sortedPools = sortPools(sortState, poolStats);\n    const boostedPools = sortedPools?.filter((pool) => typeof pool.boostedApr === \"number\" && pool.boostedApr > 0).sort((a, b) => (b.boostedApr ?? 0) - (a.boostedApr ?? 0));\n    return { sortedPoolStats: sortedPools, boostedPoolStats: boostedPools };\n  }, [poolStatsByProtocol, sortState]);\n  const filteredPoolStats = useFilteredPools(sortedPoolStats);\n  return { topPools: filteredPoolStats, topBoostedPools: boostedPoolStats, isLoading, isError };\n}\n"],"names":["_cn3","_cn2","_cn","TableWrapper","styled","Flex","m","maxWidth","MAX_WIDTH_MEDIA_BREAKPOINT","PoolDetailsBadge","Text","py","px","backgroundColor","color","variants","$position","right","borderTopRightRadius","borderBottomRightRadius","left","borderTopLeftRadius","borderBottomLeftRadius","PoolDescription","token0","token1","chainId","currencies","gqlToCurrency","div","className","PortfolioLogo","size","EllipsisText","symbol","sortMethodAtom","atomWithReset","PoolSortFields","TVL","sortAscendingAtom","PoolTableHeader","category","isCurrentSortMethod","direction","handleSortCategory","newSortMethod","sortMethod","setSortMethod","useAtom","setSortAscending","useUpdateAtom","useCallback","sortAscending","useSetSortMethod","t","useTranslation","HEADER_DESCRIPTIONS","Volume24h","Volume30D","VolOverTvl","Apr","RewardApr","LearnMoreLink","textVariant","url","uniswapUrls","merklDocsUrl","HEADER_TEXT","MouseoverTooltip","disabled","TooltipSize","Max","text","placement","ClickableHeaderRow","justifyContent","onPress","group","HeaderArrow","orderDirection","opacity","HeaderSortText","active","variant","ExploreTopPoolTable","memo","useAtomValue","resetSortMethod","useResetAtom","resetSortAscending","useEffect","topPools","isLoading","isError","useExploreContextTopPools","sortBy","sortDirection","OrderDirection","Asc","Desc","TopPoolTable","topPoolData","pageSize","TABLE_PAGE_SIZE","staticSize","forcePinning","page","loadMore","useSimplePagination","data-testid","PoolsTable","pools","slice","loading","error","maxHeight","hiddenColumns","formatNumber","formatPercent","useFormatter","filterString","exploreSearchStringAtom","defaultChainId","useEnabledChains","isLPIncentivesEnabled","useFeatureFlag","FeatureFlags","LpIncentives","poolTableValues","useMemo","map","pool","index","poolSortRank","isGqlPool","supportedChainIdFromGQLChain","chain","token0Address","address","getNativeAddress","token1Address","currency0Id","buildCurrencyId","currency1Id","poolDescription","unwrapToken","feeTier","tvl","giveExploreStatDefaultValue","totalLiquidity","value","volume24h","volume1Day","volume30d","volume30Day","volOverTvl","apr","rewardApr","boostedApr","link","getChainUrlParam","hash","id","token0CurrencyId","token1CurrencyId","analytics","elementName","InterfaceElementName","POOLS_TABLE_ROW","properties","chain_id","pool_address","token0_address","token0_symbol","token1_address","token1_symbol","pool_list_index","pool_list_rank","pool_list_length","length","search_pool_input","showLoadingSkeleton","media","useMedia","columns","columnHelper","createColumnHelper","lg","accessor","row","header","HeaderCell","cell","Cell","TableText","getValue","BIPS_BASE","toFixed","includes","input","type","NumberType","FiatTokenStats","oneDayApr","sortingFn","original","RewardAprCell","volumeWeek","TokenQuantityStats","placeholder","filter","column","Boolean","Table","data","defaultPinnedColumns","useLocalizationContext","currency0Info","useCurrencyInfo","currency1Info","poolApr","parseFloat","totalApr","padding","LPIncentiveFeeStatTooltip","lpIncentiveRewardApr","Small","gap","mr","img","height","width","src","alt","TableCell","colors","CellContainer","style","getCommonPinningStyles","flexRender","columnDef","getContext","displayName","TableRow","rowOriginal","analyticsContext","useTrace","linkState","rowTestId","testId","useSporeColors","tableWidth","useTableSize","rowHeight","breakpoints","cells","getVisibleCells","Trace","logPress","element","TableRowLink","to","state","DataRow","TableBody","forwardRef","table","ref","rows","getRowModel","Array","from","_","rowIndex","getAllColumns","columnIndex","ErrorModal","Trans","i18nKey","subtitle","NoDataFoundTableRow","ThemedText","BodySecondary","loadingMore","setLoadingMore","useState","showScrollRightButton","setShowScrollRightButton","showScrollLeftButton","setShowScrollLeftButton","pinnedColumns","setPinnedColumns","scrollPosition","setScrollPosition","distanceFromTop","distanceToBottom","LOAD_MORE_BOTTOM_OFFSET","useDebounce","tableBodyRef","useRef","lastLoadedLengthRef","canLoadMore","isSticky","parentRef","top","useParentSize","scrollableElement","current","window","updateScrollPosition","HTMLDivElement","scrollTop","scrollHeight","clientHeight","scrollY","document","body","innerHeight","addEventListener","removeEventListener","SHOW_RETURN_TO_TOP_OFFSET","onComplete","useReactTable","columnPinning","getCoreRowModel","resizeHandler","innerWidth","container","parentElement","horizontalScrollHandler","maxScrollLeft","scrollWidth","clientWidth","nextShowScrollRightButton","scrollLeft","nextShowScrollLeftButton","headerHeight","getElementById","INTERFACE_NAV_HEIGHT","scrollButtonTop","onScrollButtonPress","numPinnedVisibleColumns","getLeftVisibleLeafColumns","cumulativeWidths","getSize","reduce","acc","lastSum","reverse","nextScrollLeft","find","width2","scrollTo","behavior","hasPinnedColumns","tableSize","TableSizeProvider","ScrollSync","horizontal","TableContainer","position","TableHead","$isSticky","$top","getLeftTotalSize","pl","zIndex","zIndexes","default","ScrollButton","pr","TableScrollMask","dropdown","ScrollSyncPane","HeaderRow","dimmed","getFlatHeaders","TableBodyContainer","LoadingIndicatorContainer","LoadingIndicator","Loader","sortPools","sortState","sort","a","b","greaterThan","calculate1DVolOverTvl","calculateApr","Math","round","Percent","V2_BIPS","PoolSortFields2","protocol","exploreStats","useContext","ExploreContext","useTopPools","poolStatsByProtocol","ProtocolVersion","V2","stats","poolStatsV2","V3","poolStatsV3","V4","poolStatsV4","poolStats","getPoolDataByProtocol","sortedPoolStats","boostedPoolStats","sortedPools","poolStat","hookAddress","hook","convertPoolStatsToPoolStat","lowercaseFilterString","toLowerCase","addressIncludesFilterString","token0IncludesFilterString","token1IncludesFilterString","token0HashIncludesFilterString","token1HashIncludesFilterString","poolNameIncludesFilterString","useFilteredPools","topBoostedPools"],"sourceRoot":""}