{"version":3,"file":"static/js/9669.3876e867.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx?b902","webpack://@uniswap/interface/./src/pages/PoolDetails/index.tsx?35b8","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsLink.tsx?4ef9","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsHeader.tsx?60b0","webpack://@uniswap/interface/./src/components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution.tsx?a1a7","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/ChartSection/index.tsx?16c0","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx?f68f","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx?780a","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsApr.tsx?9b6d","webpack://@uniswap/interface/./src/components/Pools/PoolDetails/PoolDetailsStats.tsx?40b4","components/AccountDrawer/Scrim.tsx","components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution.tsx","components/Pools/PoolDetails/ChartSection/index.tsx","components/Pools/PoolDetails/ChartSection/hooks.ts","components/LpIncentives/utils.ts","components/Pools/PoolDetails/PoolDetailsApr.tsx","components/Pools/PoolDetails/shared.ts","../node_modules/react-feather/dist/icons/external-link.js","components/Pools/PoolDetails/PoolDetailsHeader.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","../packages/utilities/src/tokens/constants.ts","components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync.ts","utils/arrays.ts","components/AccountDrawer/MiniPortfolio/Pools/hooks.ts","components/AccountDrawer/MiniPortfolio/Pools/cache.ts","components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","pages/PoolDetails/index.tsx","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { useEffect } from \"react\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { useDeviceDimensions } from \"ui/src/hooks/useDeviceDimensions\";\nimport { breakpoints } from \"ui/src/theme\";\nconst ScrimBackground = styled.div`\n  z-index: ${({ $zIndex }) => $zIndex ?? Z_INDEX.modalBackdrop};\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.scrim};\n\n  opacity: 0;\n  pointer-events: none;\n  @media only screen and (max-width: ${({ theme, $maxWidth }) => `${$maxWidth ?? theme.breakpoint.md}px`}) {\n    opacity: ${({ $open }) => $open ? 1 : 0};\n    pointer-events: ${({ $open }) => $open ? \"auto\" : \"none\"};\n    transition: opacity ${({ theme }) => theme.transition.duration.medium} ease-in-out;\n  }\n`;\nexport const Scrim = (props) => {\n  const { fullWidth: width } = useDeviceDimensions();\n  useEffect(() => {\n    if (width && width < breakpoints.md && props.$open) {\n      document.body.style.overflow = \"hidden\";\n    }\n    return () => {\n      document.body.style.overflow = \"visible\";\n    };\n  }, [props.$open, width]);\n  return <ScrimBackground {...props} />;\n};\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { useCurrentLanguage } from \"uniswap/src/features/language/hooks\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst formatDateRange = (startTimestamp, endTimestamp, locale) => {\n  if (!startTimestamp || !endTimestamp) {\n    return \"\";\n  }\n  const start = new Date(startTimestamp * 1e3);\n  const end = new Date(endTimestamp * 1e3);\n  const options = { month: \"short\", day: \"numeric\" };\n  const startDateStr = new Intl.DateTimeFormat(locale, options).format(start);\n  const endDateStr = new Intl.DateTimeFormat(locale, options).format(end);\n  return `${startDateStr} - ${endDateStr}`;\n};\nconst getDaysRemaining = (endTimestamp, t) => {\n  if (!endTimestamp) {\n    return \"\";\n  }\n  const now = Date.now();\n  const end = endTimestamp * 1e3;\n  const diff = end - now;\n  if (diff <= 0) {\n    return t(\"common.ended\");\n  }\n  const days = diff / ms(\"1d\");\n  if (days < 1) {\n    return `< 1 ${t(\"common.day\")}`;\n  }\n  return `${Math.ceil(days)} ${t(\"pool.incentives.daysLeft\")}`;\n};\nconst BarChartSide = ({ percent, color, isLeft }) => {\n  return <Flex\n    height={8}\n    width={`${percent * 100}%`}\n    backgroundColor={color}\n    {...isLeft ? { borderTopLeftRadius: 5, borderBottomLeftRadius: 5, borderRightWidth: 1, borderRightColor: \"$surface2\" } : { borderTopRightRadius: 5, borderBottomRightRadius: 5, borderLeftWidth: 1, borderLeftColor: \"$surface2\" }}\n  />;\n};\nexport const LpIncentivesPoolDetailsRewardsDistribution = ({\n  rewardsCampaign\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { price: uniPrice } = useUSDCPrice(LP_INCENTIVES_REWARD_TOKEN);\n  const { t } = useTranslation();\n  const currentLanguage = useCurrentLanguage();\n  const rewardsPercent = useMemo(() => {\n    if (!rewardsCampaign) {\n      return 0;\n    }\n    const distributed = rewardsCampaign.distributedRewards ? JSBI.BigInt(rewardsCampaign.distributedRewards) : JSBI.BigInt(0);\n    const total = rewardsCampaign.totalRewardAllocation ? JSBI.BigInt(rewardsCampaign.totalRewardAllocation) : JSBI.BigInt(0);\n    if (JSBI.greaterThan(total, JSBI.BigInt(0))) {\n      const distributedNum = parseFloat(distributed.toString());\n      const totalNum = parseFloat(total.toString());\n      if (totalNum === 0) {\n        return 0;\n      }\n      return Math.min(1, distributedNum / totalNum);\n    }\n    return 0;\n  }, [rewardsCampaign]);\n  const timePercent = useMemo(() => {\n    if (!rewardsCampaign) {\n      return 0;\n    }\n    const start = rewardsCampaign.startTimestamp;\n    const end = rewardsCampaign.endTimestamp;\n    if (!start || !end || start >= end) {\n      return 0;\n    }\n    const now = Date.now() / 1e3;\n    if (now <= start) {\n      return 0;\n    }\n    if (now >= end) {\n      return 1;\n    }\n    const duration = end - start;\n    const elapsed = now - start;\n    return elapsed / duration;\n  }, [rewardsCampaign]);\n  if (!rewardsCampaign) {\n    return null;\n  }\n  const distributedRewardsRaw = rewardsCampaign.distributedRewards ? JSBI.BigInt(rewardsCampaign.distributedRewards) : JSBI.BigInt(0);\n  const totalRewardAllocationRaw = rewardsCampaign.totalRewardAllocation ? JSBI.BigInt(rewardsCampaign.totalRewardAllocation) : JSBI.BigInt(0);\n  const distributedRewardsAmount = CurrencyAmount.fromRawAmount(LP_INCENTIVES_REWARD_TOKEN, distributedRewardsRaw);\n  const totalRewardAllocationAmount = CurrencyAmount.fromRawAmount(LP_INCENTIVES_REWARD_TOKEN, totalRewardAllocationRaw);\n  const distributedRewardsFiat = uniPrice?.quote(distributedRewardsAmount);\n  const totalRewardAllocationFiat = uniPrice?.quote(totalRewardAllocationAmount);\n  const formattedDistributedToken = formatCurrencyAmount({\n    amount: distributedRewardsAmount,\n    type: NumberType.TokenQuantityStats\n  });\n  const formattedTotalToken = formatCurrencyAmount({\n    amount: totalRewardAllocationAmount,\n    type: NumberType.TokenQuantityStats\n  });\n  const formattedDistributedFiat = formatCurrencyAmount({\n    amount: distributedRewardsFiat,\n    type: NumberType.FiatTokenStats,\n    placeholder: \"--\"\n  });\n  const formattedTotalFiat = formatCurrencyAmount({\n    amount: totalRewardAllocationFiat,\n    type: NumberType.FiatTokenStats,\n    placeholder: \"--\"\n  });\n  const daysRemaining = getDaysRemaining(rewardsCampaign.endTimestamp, t);\n  const dateRange = formatDateRange(rewardsCampaign.startTimestamp, rewardsCampaign.endTimestamp, currentLanguage);\n  return <Flex\n    mb={24}\n    mt={-24}\n    $xl={{ my: 0 }}\n    padding=\"$spacing20\"\n    borderRadius=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width=\"100%\"\n  >\r\n      <Flex flex={1} gap=\"$gap8\" minWidth={180} $md={{ minWidth: 150 }}>\r\n        <Text color=\"$neutral2\" variant=\"body2\">\r\n          {t(\"pool.incentives.rewardsDistribution\")}\r\n        </Text>\r\n        <Flex row justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n          <Text variant=\"body3\" color=\"$neutral1\">\r\n            {formattedDistributedToken} {LP_INCENTIVES_REWARD_TOKEN.symbol} ({formattedDistributedFiat})\r\n          </Text>\r\n          <Text variant=\"body3\" color=\"$neutral2\">\r\n            / {formattedTotalToken} {LP_INCENTIVES_REWARD_TOKEN.symbol} ({formattedTotalFiat})\r\n          </Text>\r\n        </Flex>\r\n        <Flex row width=\"100%\">\r\n          <BarChartSide percent={rewardsPercent} color=\"$accent1\" isLeft={true} />\r\n          <BarChartSide percent={1 - rewardsPercent} color=\"$accent2\" isLeft={false} />\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Flex flex={1} gap=\"$gap8\" minWidth={180} $md={{ minWidth: 150 }} mt=\"$spacing20\">\r\n        <Text variant=\"body2\" color=\"$neutral2\">\r\n          {t(\"pool.incentives.timePeriod\")}\r\n        </Text>\r\n        <Flex row justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n          <Text variant=\"body3\" color=\"$neutral1\">\r\n            {daysRemaining}\r\n          </Text>\r\n          <Text variant=\"body3\" color=\"$neutral2\">\r\n            {dateRange}\r\n          </Text>\r\n        </Flex>\r\n        <Flex row width=\"100%\">\r\n          <BarChartSide percent={timePercent} color=\"$accent1\" isLeft={true} />\r\n          <BarChartSide percent={1 - timePercent} color=\"$accent2\" isLeft={false} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>;\n};\n","\"use strict\";\nimport { ProtocolVersion as RestProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { FeeAmount } from \"@uniswap/v3-sdk\";\nimport { ChartHeader } from \"components/Charts/ChartHeader\";\nimport { Chart, refitChartContentAtom } from \"components/Charts/ChartModel\";\nimport { LiquidityBarChartModel, useLiquidityBarData } from \"components/Charts/LiquidityChart\";\nimport { ChartSkeleton } from \"components/Charts/LoadingState\";\nimport { PriceChartDelta, PriceChartModel } from \"components/Charts/PriceChart\";\nimport { VolumeChart } from \"components/Charts/VolumeChart\";\nimport { ChartType, PriceChartType } from \"components/Charts/utils\";\nimport { parseProtocolVersion } from \"components/Liquidity/utils\";\nimport { usePDPPriceChartData, usePDPVolumeChartData } from \"components/Pools/PoolDetails/ChartSection/hooks\";\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from \"components/Tokens/TokenDetails/ChartSection\";\nimport { ChartTypeDropdown } from \"components/Tokens/TokenDetails/ChartSection/ChartTypeSelector\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { LoadingChart } from \"components/Tokens/TokenDetails/Skeleton\";\nimport {\n  DISPLAYS,\n  TimePeriodDisplay,\n  getTimePeriodFromDisplay\n} from \"components/Tokens/TokenTable/VolumeTimeFrameSelector\";\nimport { TimePeriod, gqlToCurrency, toHistoryDuration } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { EllipsisStyle } from \"theme/components/styles\";\nimport { textFadeIn } from \"theme/styles\";\nimport { Flex, SegmentedControl, useMedia } from \"ui/src\";\nimport { Chain, ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { fromGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst PDP_CHART_HEIGHT_PX = 356;\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY];\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    width: 100%;\n  }\n`;\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n  disabledOption\n}) => <ChartTypeSelectorContainer>\r\n    <ChartTypeDropdown\n  options={PDP_CHART_SELECTOR_OPTIONS}\n  currentChartType={chartType}\n  onSelectOption={onChartTypeChange}\n  disabledOption={disabledOption}\n/>\r\n  </ChartTypeSelectorContainer>;\nfunction usePDPChartState(poolData, tokenA, tokenB, isReversed, chain, protocolVersion) {\n  const [timePeriod, setTimePeriod] = useState(TimePeriod.DAY);\n  const [chartType, setChartType] = useState(ChartType.VOLUME);\n  const isV2 = protocolVersion === ProtocolVersion.V2;\n  const isV3 = protocolVersion === ProtocolVersion.V3;\n  const isV4 = protocolVersion === ProtocolVersion.V4;\n  const variables = {\n    addressOrId: poolData?.idOrAddress ?? \"\",\n    chain,\n    duration: toHistoryDuration(timePeriod),\n    isV4,\n    isV3,\n    isV2\n  };\n  const priceQuery = usePDPPriceChartData(variables, poolData, isReversed ? tokenB : tokenA, protocolVersion);\n  const volumeQuery = usePDPVolumeChartData(variables);\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery;\n        case ChartType.VOLUME:\n          return volumeQuery;\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID\n          };\n      }\n    })();\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery\n    };\n  }, [chartType, volumeQuery, priceQuery, timePeriod]);\n}\nexport default function ChartSection(props) {\n  const { defaultChainId } = useEnabledChains();\n  const media = useMedia();\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1)\n  ];\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  );\n  const refitChartContent = useAtomValue(refitChartContentAtom);\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false);\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />;\n    }\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: fromGraphQLChain(props.chain) ?? defaultChainId,\n      poolId: props.poolData.idOrAddress,\n      hooks: props.poolData.hookAddress,\n      version: parseProtocolVersion(props.poolData.protocolVersion) ?? RestProtocolVersion.V3,\n      tickSpacing: props.poolData.tickSpacing\n    };\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} currencyA={currencyA} currencyB={currencyB} />;\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? void 0 : <Trans i18nKey=\"chart.error.pools\" />;\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />;\n    }\n    const stale = activeQuery.dataQuality === DataQuality.STALE;\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n    }\n  })();\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      const filtered = DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR);\n      if (timePeriod === TimePeriod.HOUR) {\n        setTimePeriod(TimePeriod.DAY);\n      }\n      return {\n        options: filtered,\n        selected: DISPLAYS[timePeriod]\n      };\n    }\n    return {\n      options: DEFAULT_PILL_TIME_SELECTOR_OPTIONS,\n      selected: DISPLAYS[timePeriod]\n    };\n  }, [activeQuery.chartType, timePeriod, setTimePeriod]);\n  const disabledChartOption = props.poolData?.protocolVersion === ProtocolVersion.V2 ? ChartType.LIQUIDITY : void 0;\n  return <Flex data-testid=\"pdp-chart-container\">\r\n      {ChartBody}\r\n      <ChartActionsContainer>\r\n        <PDPChartTypeSelector\n    chartType={activeQuery.chartType}\n    onChartTypeChange={setChartType}\n    disabledOption={disabledChartOption}\n  />\r\n        {activeQuery.chartType !== ChartType.LIQUIDITY && <Flex $md={{ width: \"100%\" }}>\r\n            <SegmentedControl\n    fullWidth={media.md}\n    options={filteredTimeOptions.options}\n    selectedOption={filteredTimeOptions.selected}\n    onSelectOption={(option) => {\n      const time = getTimePeriodFromDisplay(option);\n      if (time === timePeriod) {\n        refitChartContent?.();\n      } else {\n        setTimePeriod(time);\n      }\n    }}\n  />\r\n          </Flex>}\r\n      </ChartActionsContainer>\r\n    </Flex>;\n}\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`;\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`;\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB];\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale]);\n  const { price } = useUSDCPrice(referenceToken);\n  const lastPrice = data[data.length - 1];\n  return <Chart height={PDP_CHART_HEIGHT_PX} Model={PriceChartModel} params={params}>\r\n      {(crosshairData) => {\n    const displayValue = crosshairData ?? lastPrice;\n    const currencyBAmountRaw = Math.floor(\n      (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n    );\n    const priceDisplay = <PriceDisplayContainer>\r\n            <ChartPriceText>\r\n              {`1 ${referenceToken.symbol} = ${formatCurrencyAmount({\n      amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw)\n    })} \n            ${primaryToken.symbol}`}\r\n            </ChartPriceText>\r\n            <ChartPriceText color=\"neutral2\">{price ? \"(\" + formatPrice({ price }) + \")\" : \"\"}</ChartPriceText>\r\n          </PriceDisplayContainer>;\n    return <ChartHeader\n      value={priceDisplay}\n      additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n      valueFormatterType={NumberType.FiatTokenPrice}\n      time={crosshairData?.time}\n    />;\n  }}\r\n    </Chart>;\n}\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`;\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`;\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick\n}) {\n  const { t } = useTranslation();\n  const { formatNumber } = useFormatter();\n  if (!currentTick) {\n    return null;\n  }\n  const displayValue0 = data.tick >= currentTick ? formatNumber({\n    input: data.amount0Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  const displayValue1 = data.tick <= currentTick ? formatNumber({\n    input: data.amount1Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  return <>\r\n      <ThemedText.BodySmall>\r\n        {t(\"liquidityPool.chart.tooltip.amount\", { token: tokenADescriptor, amount: displayValue0 })}\r\n      </ThemedText.BodySmall>\r\n      <ThemedText.BodySmall>\r\n        {t(\"liquidityPool.chart.tooltip.amount\", { token: tokenBDescriptor, amount: displayValue1 })}\r\n      </ThemedText.BodySmall>\r\n    </>;\n}\nfunction LiquidityChart({\n  currencyA,\n  currencyB,\n  feeTier,\n  isReversed,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const { t } = useTranslation();\n  const tokenADescriptor = currencyA.symbol ?? currencyA.name ?? t(\"common.tokenA\");\n  const tokenBDescriptor = currencyB.symbol ?? currencyB.name ?? t(\"common.tokenB\");\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    currencyA,\n    currencyB,\n    feeTier,\n    isReversed,\n    chainId,\n    version,\n    tickSpacing,\n    hooks,\n    poolId\n  });\n  const theme = useTheme();\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage\n    };\n  }, [activeTick, isReversed, theme, tickData]);\n  if (loading) {\n    return <LoadingChart />;\n  }\n  return <Chart\n    height={PDP_CHART_HEIGHT_PX}\n    Model={LiquidityBarChartModel}\n    params={params}\n    TooltipBody={\n      // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n      feeTier !== FeeAmount.LOWEST ? ({ data }) => <LiquidityTooltipDisplay\n        data={data}\n        tokenADescriptor={tokenADescriptor}\n        tokenBDescriptor={tokenBDescriptor}\n        currentTick={tickData?.activeRangeData?.tick}\n      /> : void 0\n    }\n  >\r\n      {(crosshair) => {\n    const displayPoint = crosshair ?? tickData?.activeRangeData;\n    const display = <>\r\n            <FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading>\r\n            <FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>\r\n            {displayPoint && displayPoint.tick === activeTick && <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\">\r\n                <Trans i18nKey=\"pool.activeRange\" />\r\n              </FadeInSubheader>}\r\n          </>;\n    return <ChartHeader value={display} />;\n  }}\r\n    </Chart>;\n}\n","\"use strict\";\nimport { ChartType } from \"components/Charts/utils\";\nimport { checkDataQuality, withUTCTimestamp } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport { useMemo } from \"react\";\nimport {\n  usePoolVolumeHistoryQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport function usePDPPriceChartData(variables, poolData, tokenA, protocolVersion) {\n  return usePoolPriceChartData(variables, tokenA, protocolVersion, poolData?.token0?.address ?? \"\");\n}\nexport function usePDPVolumeChartData(variables) {\n  const { data, loading } = usePoolVolumeHistoryQuery({\n    variables,\n    skip: !variables.addressOrId || variables.addressOrId === \"\"\n  });\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? data?.v4Pool ?? {};\n    const entries = historicalVolume?.filter((amt) => amt !== null).map(withUTCTimestamp) ?? [];\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration);\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, data?.v4Pool, loading, variables.duration]);\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nexport const calculateTotalApr = (poolApr, rewardsApr) => {\n  const rewardsAprPercent = new Percent(Math.round(rewardsApr * 100), BIPS_BASE);\n  return poolApr.add(rewardsAprPercent);\n};\n","\"use strict\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { calculateTotalApr } from \"components/LpIncentives/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { useFormatter } from \"utils/formatNumbers\";\nexport const PoolDetailsApr = ({ poolApr, rewardsApr }) => {\n  const { t } = useTranslation();\n  const { formatPercent } = useFormatter();\n  const showAprBreakdown = rewardsApr !== void 0 && rewardsApr > 0;\n  const totalApr = rewardsApr ? formatPercent(calculateTotalApr(poolApr, rewardsApr), 2) : `${poolApr.toFixed(2)}%`;\n  return <Flex\n    gap=\"$spacing12\"\n    padding=\"$spacing20\"\n    borderRadius=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width=\"100%\"\n    flexDirection=\"column\"\n    mt={-24}\n    mb={24}\n    $xl={{ my: 0 }}\n  >\r\n      <Flex>\r\n        <Text variant=\"body2\" color=\"$neutral2\">\r\n          {t(\"pool.totalAPR\")}\r\n        </Text>\r\n        <Text variant=\"heading2\" color=\"$neutral1\" mt=\"$spacing4\">\r\n          {totalApr}\r\n        </Text>\r\n      </Flex>\r\n      {showAprBreakdown && <Flex mt=\"$spacing8\" gap=\"$spacing6\">\r\n          <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$gap8\">\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {t(\"pool.apr.base\")}\r\n            </Text>\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              {formatPercent(poolApr, 2)}\r\n            </Text>\r\n          </Flex>\r\n          <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$gap8\">\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {t(\"pool.apr.reward\")}\r\n            </Text>\r\n            <LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground showTokenSymbol />\r\n          </Flex>\r\n        </Flex>}\r\n    </Flex>;\n};\n","\"use strict\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled from \"lib/styled-components\";\nexport const DetailBubble = styled(LoadingBubble)`\n  height: ${({ $height }) => $height ? `${$height}px` : \"16px\"};\n  width: ${({ $width }) => $width ? `${$width}px` : \"80px\"};\n`;\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ExternalLink=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"path\",{d:\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"}),React.createElement(\"polyline\",{points:\"15 3 21 3 21 9\"}),React.createElement(\"line\",{x1:\"10\",y1:\"14\",x2:\"21\",y2:\"3\"}))}));ExternalLink.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ExternalLink.displayName=\"ExternalLink\";export default ExternalLink;","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { PoolDetailsBadge } from \"components/Pools/PoolTable/PoolTable\";\nimport ShareButton from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ReversedArrowsIcon } from \"nft/components/iconExports\";\nimport { useMemo, useState } from \"react\";\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableStyle, ClickableTamaguiStyle, EllipsisStyle } from \"theme/components/styles\";\nimport { textFadeIn } from \"theme/styles\";\nimport { Flex, TouchableArea, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  &:hover {\n    // Override hover behavior from ExternalLink\n    opacity: 1;\n  }\n`;\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`;\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }) {\n  const { defaultChainId } = useEnabledChains();\n  const chainUrlParam = getChainUrlParam(chainId ?? defaultChainId);\n  const exploreOrigin = `/explore/${chainUrlParam}`;\n  const poolsOrigin = `/explore/pools/${chainUrlParam}`;\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\r\n      <BreadcrumbNavLink to={exploreOrigin}>\r\n        <Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} />\r\n      </BreadcrumbNavLink>\r\n      <BreadcrumbNavLink to={poolsOrigin}>\r\n        <Trans i18nKey=\"common.pools\" /> <ChevronRight size={14} />\r\n      </BreadcrumbNavLink>\r\n      {loading || !poolAddress ? <DetailBubble $width={200} /> : <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />}\r\n    </BreadcrumbNavContainer>;\n}\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`;\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`;\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  hookAddress\n}) => {\n  const theme = useTheme();\n  const { formatPercent } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const graphQLChain = toGraphQLChain(chainId ?? defaultChainId);\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100));\n  return <StyledPoolDetailsTitle>\r\n      <Flex>\r\n        <PoolName>\r\n          <StyledLink\n    to={getTokenDetailsURL({\n      address: token0?.address,\n      chain: graphQLChain\n    })}\n  >\r\n            {token0?.symbol}\r\n          </StyledLink>\r\n          &nbsp;/&nbsp;\r\n          <StyledLink\n    to={getTokenDetailsURL({\n      address: token1?.address,\n      chain: graphQLChain\n    })}\n  >\r\n            {token1?.symbol}\r\n          </StyledLink>\r\n        </PoolName>\r\n      </Flex>\r\n      <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n        <PoolDetailsBadge variant=\"body3\" $position=\"left\">\r\n          {protocolVersion?.toLowerCase()}\r\n        </PoolDetailsBadge>\r\n        {hookAddress && <ExternalLink href={getExplorerLink(chainId ?? defaultChainId, hookAddress, ExplorerDataType.ADDRESS)}>\r\n            <PoolDetailsBadge variant=\"body3\" {...ClickableTamaguiStyle}>\r\n              {shortenAddress(hookAddress, 0, 4)}\r\n            </PoolDetailsBadge>\r\n          </ExternalLink>}\r\n        {!!feePercent && <PoolDetailsBadge variant=\"body3\" $position=\"right\">\r\n            {feePercent}\r\n          </PoolDetailsBadge>}\r\n      </Flex>\r\n      <TouchableArea\n    hoverable\n    {...ClickableTamaguiStyle}\n    onPress={toggleReversed}\n    testID=\"toggle-tokens-reverse-arrows\"\n  >\r\n        <ReversedArrowsIcon size=\"20px\" color={theme.neutral2} />\r\n      </TouchableArea>\r\n    </StyledPoolDetailsTitle>;\n};\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  ${EllipsisStyle}\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens\n}) => {\n  const theme = useTheme();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const isNative = address === NATIVE_CHAIN_ID;\n  const explorerUrl = chainId && address && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  if (!chainId || !explorerUrl) {\n    return <ContractsDropdownRowContainer>\r\n        <DetailBubble $width={117} />\r\n      </ContractsDropdownRowContainer>;\n  }\n  return <StyledExternalLink href={explorerUrl}>\r\n      <ContractsDropdownRowContainer>\r\n        <Row gap=\"sm\">\r\n          {isPool ? <DoubleCurrencyLogo currencies={currencies} size={24} /> : <CurrencyLogo currency={currency} size={24} />}\r\n          <ThemedText.BodyPrimary>\r\n            {isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.symbol}\r\n          </ThemedText.BodyPrimary>\r\n          <ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary>\r\n        </Row>\r\n        <ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} />\r\n      </ContractsDropdownRowContainer>\r\n    </StyledExternalLink>;\n};\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1,\n  protocolVersion\n}) => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const isTouchDevice = useIsTouchDevice();\n  const [contractsModalIsOpen, toggleContractsModal] = useState(false);\n  return <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\">\r\n      <DropdownSelector\n    isOpen={contractsModalIsOpen}\n    toggleOpen={toggleContractsModal}\n    menuLabel={chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />}\n    tooltipText={isTouchDevice ? void 0 : t(\"pool.explorers\")}\n    hideChevron\n    buttonStyle={ActionButtonStyle}\n    dropdownStyle={{ minWidth: 235 }}\n    alignRight\n  >\r\n        <>\r\n          {protocolVersion !== ProtocolVersion.V4 && <ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} />}\r\n          <ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} />\r\n          <ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} />\r\n        </>\r\n      </DropdownSelector>\r\n      <ShareButton name={poolName} utmSource=\"share-pool\" />\r\n    </Row>;\n};\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  hookAddress,\n  toggleReversed,\n  loading,\n  rewardsApr\n}) {\n  const media = useMedia();\n  const shouldColumnBreak = media.md;\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`;\n  const currencies = useMemo(\n    () => token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : [],\n    [token0, token1]\n  );\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const showRewards = isLPIncentivesEnabled && rewardsApr && rewardsApr > 0;\n  if (loading) {\n    return <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">\r\n        {shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}>\r\n            <IconBubble />\r\n            <DetailBubble $height={40} $width={137} />\r\n          </Column> : <Row gap=\"sm\">\r\n            <IconBubble />\r\n            <DetailBubble $height={40} $width={137} />\r\n          </Row>}\r\n      </HeaderContainer>;\n  }\n  return <HeaderContainer>\r\n      {shouldColumnBreak ? <Flex gap=\"$spacing4\" width=\"100%\">\r\n          <Flex row gap=\"$spacing8\" justifyContent=\"space-between\">\r\n            <DoubleCurrencyLogo currencies={currencies} data-testid=\"double-token-logo\" />\r\n            <PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  />\r\n          </Flex>\r\n          <PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n  />\r\n          {showRewards && <LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground />}\r\n        </Flex> : <Flex row gap={showRewards ? \"$spacing16\" : \"$spacing12\"} alignItems=\"center\" width=\"100%\">\r\n          <DoubleCurrencyLogo size={showRewards ? 56 : 30} currencies={currencies} data-testid=\"double-token-logo\" />\r\n          <Flex flex={1}>\r\n            <Flex row justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\r\n              <PoolDetailsTitle\n    token0={token0}\n    token1={token1}\n    chainId={chainId}\n    feeTier={feeTier}\n    protocolVersion={protocolVersion}\n    toggleReversed={toggleReversed}\n    hookAddress={hookAddress}\n  />\r\n              <PoolDetailsHeaderActions\n    chainId={chainId}\n    poolAddress={poolAddress}\n    poolName={poolName}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  />\r\n            </Flex>\r\n            {showRewards && <LpIncentivesAprDisplay lpIncentiveRewardApr={rewardsApr} hideBackground />}\r\n          </Flex>\r\n        </Flex>}\r\n    </HeaderContainer>;\n}\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { ChevronRight, Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableStyle, EllipsisStyle } from \"theme/components/styles\";\nimport { Flex } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { TokenStandard } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isAddress, shortenAddress } from \"utilities/src/addresses\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`;\nconst TokenTextWrapper = styled(Row)`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`;\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`;\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`;\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`;\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`;\nexport function PoolDetailsLink({ address, chainId, tokens, loading }) {\n  const theme = useTheme();\n  const { t } = useTranslation();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address);\n    checksummedAddress && setCopied(checksummedAddress);\n  }, [address, setCopied]);\n  const isPool = tokens.length === 2;\n  const isNative = address === NATIVE_CHAIN_ID || tokens[0] && !isPool && tokens[0].standard === TokenStandard.Native;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const explorerUrl = chainId && getExplorerLink(\n    chainId,\n    address ?? \"\",\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  const chainUrlParam = getChainUrlParam(chainId ?? defaultChainId);\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chainUrlParam }));\n    }\n  }, [navigate, tokens, isPool, chainUrlParam]);\n  const [truncateAddress, setTruncateAddress] = useState(false);\n  const onTextRender = useCallback(\n    (textRef) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth;\n        if (hasOverflow) {\n          setTruncateAddress((prev) => prev ? \"both\" : \"start\");\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  );\n  if (loading || !chainId) {\n    return <Flex gap=\"$spacing8\">\r\n        <LoadingBubble containerWidth=\"100%\" width=\"100%\" />\r\n        <LoadingBubble containerWidth=\"100%\" width=\"100%\" />\r\n      </Flex>;\n  }\n  return <Row align=\"space-between\">\r\n      <TokenTextWrapper\n    data-testid={isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`}\n    isClickable={!isPool}\n    onClick={handleTokenTextClick}\n    ref={onTextRender}\n  >\r\n        {isPool ? <DoubleCurrencyLogo currencies={currencies} size={20} /> : <CurrencyLogo currency={currency} size={20} />}\r\n        <TokenName>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.name}</TokenName>\r\n        <SymbolText>\r\n          {isPool ? `${tokens[0]?.symbol} / ${tokens[1]?.symbol}` : <Row gap=\"4px\">\r\n              {tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} />\r\n            </Row>}\r\n        </SymbolText>\r\n      </TokenTextWrapper>\r\n      <ButtonsRow>\r\n        {!isNative && <MouseoverTooltip\n    disabled\n    forceShow={isCopied}\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    text={t(\"common.copied\")}\n  >\r\n            <CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>\r\n              {shortenAddress(address, truncateAddress ? 2 : void 0, truncateAddress === \"both\" ? 2 : void 0)}\r\n              <StyledCopyIcon />\r\n            </CopyAddress>\r\n          </MouseoverTooltip>}\r\n        {explorerUrl && <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}>\r\n            <ExplorerWrapper>\r\n              {chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />}\r\n            </ExplorerWrapper>\r\n          </ExternalLink>}\r\n      </ButtonsRow>\r\n    </Row>;\n}\n","\"use strict\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { DeltaArrow } from \"components/Tokens/TokenDetails/Delta\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport styled, { css, useTheme } from \"lib/styled-components\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemedText } from \"theme/components\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { Flex, useMedia } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${breakpoints.xl}px) {\n    width: 100%;\n  }\n`;\nconst StatsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && \"-24px\"};\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`;\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${breakpoints.md}px) {\n    min-width: 150px;\n  }\n`;\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: column;\n  }\n`;\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`;\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst BalanceChartSide = styled.div`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => isLeft ? leftBarChartStyles : rightBarChartStyles}\n`;\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`;\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`;\nconst PoolBalanceTokenNames = ({ token, chainId }) => {\n  const media = useMedia();\n  const isLargeScreen = !media.xl;\n  const { formatNumber } = useFormatter();\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID;\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency;\n  const { defaultChainId } = useEnabledChains();\n  return <PoolBalanceTokenNamesContainer>\r\n      <Flex row alignItems=\"center\" gap=\"$spacing4\">\r\n        {!isLargeScreen && <CurrencyLogo currency={currency} size={20} />}\r\n        {formatNumber({\n    input: token.tvl,\n    type: NumberType.TokenQuantityStats\n  })}\r\n        <StyledLink\n    to={getTokenDetailsURL({\n      address: unwrappedToken.address,\n      chain: toGraphQLChain(chainId ?? defaultChainId)\n    })}\n  >\r\n          {unwrappedToken.symbol}\r\n        </StyledLink>\r\n      </Flex>\r\n    </PoolBalanceTokenNamesContainer>;\n};\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }) {\n  const media = useMedia();\n  const isLargeScreen = !media.xl;\n  const theme = useTheme();\n  const currency0 = useCurrency(poolData?.token0?.address, chainId);\n  const currency1 = useCurrency(poolData?.token1?.address, chainId);\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price;\n      const token0FullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: poolData?.tvlToken0 * poolData?.token0Price / fullWidth,\n        currency: currency0\n      };\n      const token1FullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: poolData?.tvlToken1 * poolData?.token1Price / fullWidth,\n        currency: currency1\n      };\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData];\n    } else {\n      return [void 0, void 0];\n    }\n  }, [currency0, currency1, isReversed, poolData]);\n  if (loading || !token0 || !token1 || !poolData) {\n    return <StatsWrapper>\r\n        <HeaderText>\r\n          <StatHeaderBubble />\r\n        </HeaderText>\r\n        {Array.from({ length: 4 }).map((_, i) => <Column gap=\"md\" key={`loading-info-row-${i}`}>\r\n            <DetailBubble />\r\n            <StatSectionBubble />\r\n          </Column>)}\r\n      </StatsWrapper>;\n  }\n  return <StatsWrapper loaded>\r\n      <HeaderText>\r\n        <Trans i18nKey=\"common.stats\" />\r\n      </HeaderText>\r\n      <StatItemColumn>\r\n        <ThemedText.BodySecondary>\r\n          <Trans i18nKey=\"pool.balances\" />\r\n        </ThemedText.BodySecondary>\r\n        <PoolBalanceSymbols>\r\n          <PoolBalanceTokenNames token={token0} chainId={chainId} />\r\n          <PoolBalanceTokenNames token={token1} chainId={chainId} />\r\n        </PoolBalanceSymbols>\r\n        {isLargeScreen && <Row data-testid=\"pool-balance-chart\">\r\n            <BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} />\r\n            <BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} />\r\n          </Row>}\r\n      </StatItemColumn>\r\n      {poolData?.tvlUSD && <StatItem\n    title={<Trans i18nKey=\"common.totalValueLocked\" />}\n    value={poolData.tvlUSD}\n    delta={poolData.tvlUSDChange}\n  />}\r\n      {poolData?.volumeUSD24H !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24volume\" />}\n    value={poolData.volumeUSD24H}\n    delta={poolData.volumeUSD24HChange}\n  />}\r\n      {poolData?.volumeUSD24H !== void 0 && poolData?.feeTier !== void 0 && <StatItem\n    title={<Trans i18nKey=\"stats.24fees\" />}\n    value={poolData.volumeUSD24H * (poolData.feeTier / 1e6)}\n  />}\r\n    </StatsWrapper>;\n}\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`;\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`;\nfunction StatItem({ title, value, delta }) {\n  const { formatNumber, formatDelta } = useFormatter();\n  return <StatItemColumn>\r\n      <ThemedText.BodySecondary>{title}</ThemedText.BodySecondary>\r\n      <StatsTextContainer>\r\n        <StatItemText>\r\n          {formatNumber({\n    input: value,\n    type: NumberType.FiatTokenStats\n  })}\r\n        </StatItemText>\r\n        {!!delta && <Flex row width=\"max-content\" py=\"$spacing4\" $lg={{ py: 0 }}>\r\n            <DeltaArrow delta={delta} formattedDelta={formatDelta(delta)} />\r\n            <ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary>\r\n          </Flex>}\r\n      </StatsTextContainer>\r\n    </StatItemColumn>;\n}\n","\"use strict\";\nexport const DEFAULT_ERC20_DECIMALS = 18;\n","\"use strict\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { INTERNAL_JSON_RPC_ERROR_CODE } from \"constants/misc\";\nimport { Interface } from \"ethers/lib/utils\";\nimport ERC20_ABI from \"uniswap/src/abis/erc20.json\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { arrayToSlices } from \"utils/arrays\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nexport const DEFAULT_GAS_LIMIT = 1e6;\nconst Erc20 = new Interface(ERC20_ABI);\nconst Erc20Bytes32 = new Interface(ERC20_ABI);\nasync function fetchChunk(multicall, chunk) {\n  try {\n    return (await multicall.callStatic.multicall(chunk)).returnData;\n  } catch (error) {\n    if (error.code === INTERNAL_JSON_RPC_ERROR_CODE || error.message?.indexOf(\"execution ran out of gas\") !== -1) {\n      if (chunk.length > 1) {\n        const half = Math.floor(chunk.length / 2);\n        return Promise.all([\n          fetchChunk(multicall, chunk.slice(0, half)),\n          fetchChunk(multicall, chunk.slice(half, chunk.length))\n        ]).then(([c0, c1]) => [...c0, ...c1]);\n      }\n    }\n    logger.debug(\"getTokensAsync\", \"fetchChunk\", \"Error fetching chunk\", { error, extra: { chunk } });\n    throw error;\n  }\n}\nfunction tryParseToken(address, chainId, data) {\n  try {\n    const [nameData, symbolData, decimalsData, nameDataBytes32, symbolDataBytes32] = data;\n    const name = nameData.success ? Erc20.decodeFunctionResult(\"name\", nameData.returnData)[0] : nameDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"name\", nameDataBytes32.returnData)[0] : void 0;\n    const symbol = symbolData.success ? Erc20.decodeFunctionResult(\"symbol\", symbolData.returnData)[0] : symbolDataBytes32.success ? Erc20Bytes32.decodeFunctionResult(\"symbol\", symbolDataBytes32.returnData)[0] : void 0;\n    const decimals = decimalsData.success ? parseInt(decimalsData.returnData) : DEFAULT_ERC20_DECIMALS;\n    return new Token(chainId, address, decimals, symbol, name);\n  } catch (error) {\n    logger.debug(\"getTokensAsync\", \"tryParseToken\", \"Failed to parse token\", { error, address, chainId });\n    return void 0;\n  }\n}\nfunction parseTokens(addresses, chainId, returnData) {\n  const tokenDataSlices = arrayToSlices(returnData, 5);\n  return tokenDataSlices.reduce((acc, slice, index) => {\n    const parsedToken = tryParseToken(addresses[index], chainId, slice);\n    if (parsedToken) {\n      acc[parsedToken.address] = parsedToken;\n    }\n    return acc;\n  }, {});\n}\nconst createCalls = (target, callData) => callData.map((callData2) => ({ target, callData: callData2, gasLimit: DEFAULT_GAS_LIMIT }));\nfunction createCallsForToken(address) {\n  return createCalls(address, [\n    Erc20.encodeFunctionData(\"name\"),\n    Erc20.encodeFunctionData(\"symbol\"),\n    Erc20.encodeFunctionData(\"decimals\"),\n    Erc20Bytes32.encodeFunctionData(\"name\"),\n    Erc20Bytes32.encodeFunctionData(\"symbol\")\n  ]);\n}\nconst TokenPromiseCache = {};\nexport async function getTokensAsync(addresses, chainId, multicall) {\n  if (addresses.length === 0) {\n    return {};\n  }\n  const formattedAddresses = [];\n  const calls = [];\n  const previouslyCalledTokens = [];\n  addresses.forEach((tokenAddress) => {\n    const key = buildCurrencyKey(chainId, tokenAddress);\n    const previousCall = TokenPromiseCache[key];\n    if (previousCall !== void 0) {\n      previouslyCalledTokens.push(previousCall);\n    } else {\n      const formattedAddress = isAddress(tokenAddress);\n      if (!formattedAddress) {\n        return;\n      }\n      formattedAddresses.push(formattedAddress);\n      calls.push(...createCallsForToken(formattedAddress));\n    }\n  });\n  const calledTokens = fetchChunk(multicall, calls).then((returnData) => parseTokens(addresses, chainId, returnData));\n  formattedAddresses.forEach(\n    (address) => TokenPromiseCache[buildCurrencyKey(chainId, address)] = calledTokens.then((tokenMap2) => tokenMap2[address])\n  );\n  const tokenMap = await calledTokens;\n  const resolvedPreviousTokens = await Promise.all(previouslyCalledTokens);\n  resolvedPreviousTokens.forEach((token) => token && (tokenMap[currencyKey(token)] = token));\n  return tokenMap;\n}\n","\"use strict\";\nexport function arrayToSlices(items, size) {\n  if (items.length % size !== 0) {\n    throw new Error(\"Input array length must be a multiple of desired output size\");\n  }\n  return Array.from({ length: Math.floor(items.length / size) }, (_v, i) => items.slice(i * size, i * size + size));\n}\n","\"use strict\";\nimport { MULTICALL_ADDRESSES, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES as V3NFT_ADDRESSES } from \"@uniswap/sdk-core\";\nimport NFTPositionManagerJSON from \"@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json\";\nimport MulticallJSON from \"@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { RPC_PROVIDERS } from \"constants/providers\";\nimport { toContractInput } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useMemo } from \"react\";\nimport {\n  useUniswapPricesQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useIsSupportedChainIdCallback } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { getContract } from \"utilities/src/contracts/getContract\";\nimport { currencyKey, currencyKeyFromGraphQL } from \"utils/currencyKey\";\nfunction useContractMultichain(addressMap, ABI, chainIds) {\n  const account = useAccount();\n  const { provider: walletProvider } = useWeb3React();\n  const isSupportedChain = useIsSupportedChainIdCallback();\n  return useMemo(() => {\n    const relevantChains = chainIds ?? Object.keys(addressMap).map((chainId) => parseInt(chainId)).filter((chainId) => isSupportedChain(chainId));\n    return relevantChains.reduce((acc, chainId) => {\n      const provider = walletProvider && account.chainId === chainId ? walletProvider : isSupportedChain(chainId) ? RPC_PROVIDERS[chainId] : void 0;\n      if (provider) {\n        acc[chainId] = getContract(addressMap[chainId] ?? \"\", ABI, provider);\n      }\n      return acc;\n    }, {});\n  }, [ABI, addressMap, chainIds, isSupportedChain, account.chainId, walletProvider]);\n}\nexport function useV3ManagerContracts(chainIds) {\n  return useContractMultichain(V3NFT_ADDRESSES, NFTPositionManagerJSON.abi, chainIds);\n}\nexport function useInterfaceMulticallContracts(chainIds) {\n  return useContractMultichain(MULTICALL_ADDRESSES, MulticallJSON.abi, chainIds);\n}\nexport function usePoolPriceMap(positions) {\n  const { defaultChainId } = useEnabledChains();\n  const contracts = useMemo(() => {\n    if (!positions || !positions.length) {\n      return [];\n    }\n    const contractMap = positions.reduce((acc, { pool: { token0, token1 } }) => {\n      acc[currencyKey(token0)] = toContractInput(token0, defaultChainId);\n      acc[currencyKey(token1)] = toContractInput(token1, defaultChainId);\n      return acc;\n    }, {});\n    return Object.values(contractMap);\n  }, [defaultChainId, positions]);\n  const { data, loading } = useUniswapPricesQuery({ variables: { contracts }, skip: !contracts.length });\n  const priceMap = useMemo(\n    () => data?.tokens?.reduce((acc, current) => {\n      if (current) {\n        acc[currencyKeyFromGraphQL(current)] = current.project?.markets?.[0]?.price?.value;\n      }\n      return acc;\n    }, {}) ?? {},\n    [data?.tokens]\n  );\n  return { priceMap, pricesLoading: loading && !data };\n}\n","\"use strict\";\nimport { getTokensAsync } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport { useInterfaceMulticallContracts } from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { atom, useAtom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\nimport ms from \"ms\";\nimport { useCallback } from \"react\";\nimport { deserializeToken, serializeToken } from \"uniswap/src/utils/currency\";\nimport { buildCurrencyKey, currencyKey } from \"utils/currencyKey\";\nconst POSITION_CACHE_EXPIRY = ms(`1m`);\nconst cachedPositionsAtom = atom({});\nexport function useCachedPositions(account) {\n  const [cachedPositions, setCachedPositions] = useAtom(cachedPositionsAtom);\n  const setPositionsAndStaleTimeout = useCallback(\n    (positions) => {\n      setCachedPositions((cache) => ({ ...cache, [account]: { result: positions, stale: false } }));\n      setTimeout(\n        () => setCachedPositions((cache) => {\n          if (positions === cache[account]?.result) {\n            return { ...cache, [account]: { result: positions, stale: true } };\n          } else {\n            return cache;\n          }\n        }),\n        POSITION_CACHE_EXPIRY\n      );\n    },\n    [account, setCachedPositions]\n  );\n  return [cachedPositions[account], setPositionsAndStaleTimeout];\n}\nconst poolAddressKey = (details, chainId) => `${chainId}-${details.token0}-${details.token1}-${details.fee}`;\nconst poolAddressCacheAtom = atomWithStorage(\"poolCache\", {});\nexport function usePoolAddressCache() {\n  const [cache, updateCache] = useAtom(poolAddressCacheAtom);\n  const get = useCallback(\n    (details, chainId) => cache[poolAddressKey(details, chainId)],\n    [cache]\n  );\n  const set = useCallback(\n    (details, chainId, address) => updateCache((c) => ({ ...c, [poolAddressKey(details, chainId)]: address })),\n    [updateCache]\n  );\n  return { get, set };\n}\nconst tokenCacheAtom = atomWithStorage(\"cachedAsyncTokens\", {});\nfunction useTokenCache() {\n  const [cache, setCache] = useAtom(tokenCacheAtom);\n  const get = useCallback(\n    (chainId, address) => {\n      const entry = cache[buildCurrencyKey(chainId, address)];\n      return entry ? deserializeToken(entry) : void 0;\n    },\n    [cache]\n  );\n  const set = useCallback(\n    (token) => {\n      if (token) {\n        setCache((cache2) => ({ ...cache2, [currencyKey(token)]: serializeToken(token) }));\n      }\n    },\n    [setCache]\n  );\n  return { get, set };\n}\nexport function useGetCachedTokens(chains) {\n  const multicallContracts = useInterfaceMulticallContracts(chains);\n  const tokenCache = useTokenCache();\n  const fetchRemoteTokens = useCallback(\n    async (addresses, chainId) => {\n      const fetched = await getTokensAsync(addresses, chainId, multicallContracts[chainId]);\n      Object.values(fetched).forEach(tokenCache.set);\n      return fetched;\n    },\n    [multicallContracts, tokenCache]\n  );\n  const getTokens = useCallback(\n    async (addresses, chainId) => {\n      const local = {};\n      const missing = /* @__PURE__ */ new Set();\n      addresses.forEach((address) => {\n        const cached = tokenCache.get(chainId, address);\n        cached ? local[address] = cached : missing.add(address);\n      });\n      const fetched = await fetchRemoteTokens([...missing], chainId);\n      return { ...local, ...fetched };\n    },\n    [fetchRemoteTokens, tokenCache]\n  );\n  return getTokens;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { CurrencyAmount, Token, V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport IUniswapV3PoolStateJSON from \"@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json\";\nimport { Pool, Position, computePoolAddress } from \"@uniswap/v3-sdk\";\nimport {\n  useCachedPositions,\n  useGetCachedTokens,\n  usePoolAddressCache\n} from \"components/AccountDrawer/MiniPortfolio/Pools/cache\";\nimport { DEFAULT_GAS_LIMIT } from \"components/AccountDrawer/MiniPortfolio/Pools/getTokensAsync\";\nimport {\n  useInterfaceMulticallContracts,\n  usePoolPriceMap,\n  useV3ManagerContracts\n} from \"components/AccountDrawer/MiniPortfolio/Pools/hooks\";\nimport { Interface } from \"ethers/lib/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { DEFAULT_ERC20_DECIMALS } from \"utilities/src/tokens/constants\";\nimport { currencyKey } from \"utils/currencyKey\";\nfunction createPositionInfo(owner, chainId, details, slot0, tokenA, tokenB) {\n  const pool = new Pool(tokenA, tokenB, details.fee, slot0.sqrtPriceX96.toString(), 0, slot0.tick);\n  const position = new Position({\n    pool,\n    liquidity: details.liquidity.toString(),\n    tickLower: details.tickLower,\n    tickUpper: details.tickUpper\n  });\n  const inRange = slot0.tick >= details.tickLower && slot0.tick < details.tickUpper;\n  const closed = details.liquidity.eq(0);\n  return { owner, chainId, pool, position, details, inRange, closed };\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nexport default function useMultiChainPositions(account) {\n  const { chains } = useEnabledChains();\n  const pms = useV3ManagerContracts(chains);\n  const multicalls = useInterfaceMulticallContracts(chains);\n  const getTokens = useGetCachedTokens(chains);\n  const poolAddressCache = usePoolAddressCache();\n  const [cachedPositions, setPositions] = useCachedPositions(account);\n  const positions = cachedPositions?.result;\n  const positionsFetching = useRef(false);\n  const positionsLoading = !cachedPositions?.result && positionsFetching.current;\n  const [feeMap, setFeeMap] = useState({});\n  const { priceMap, pricesLoading } = usePoolPriceMap(positions);\n  const fetchPositionFees = useCallback(\n    async (pm, positionIds, chainId) => {\n      const callData = positionIds.map(\n        (id) => pm.interface.encodeFunctionData(\"collect\", [\n          { tokenId: id, recipient: account, amount0Max: MAX_UINT128, amount1Max: MAX_UINT128 }\n        ])\n      );\n      const fees = (await pm.callStatic.multicall(callData)).reduce(\n        (acc, feeBytes, index) => {\n          const key = chainId.toString() + positionIds[index];\n          acc[key] = pm.interface.decodeFunctionResult(\"collect\", feeBytes);\n          return acc;\n        },\n        {}\n      );\n      setFeeMap((prev) => ({ ...prev, ...fees }));\n    },\n    [account]\n  );\n  const fetchPositionIds = useCallback(\n    async (pm, balance) => {\n      const callData = Array.from(\n        { length: balance.toNumber() },\n        (_, i) => pm.interface.encodeFunctionData(\"tokenOfOwnerByIndex\", [account, i])\n      );\n      return (await pm.callStatic.multicall(callData)).map((idByte) => BigNumber.from(idByte));\n    },\n    [account]\n  );\n  const fetchPositionDetails = useCallback(async (pm, positionIds) => {\n    const callData = positionIds.map((id) => pm.interface.encodeFunctionData(\"positions\", [id]));\n    return (await pm.callStatic.multicall(callData)).map(\n      (positionBytes, index) => ({\n        ...pm.interface.decodeFunctionResult(\"positions\", positionBytes),\n        tokenId: positionIds[index]\n      })\n    );\n  }, []);\n  const fetchPositionInfo = useCallback(\n    async (positionDetails, chainId, multicall) => {\n      const poolInterface = new Interface(IUniswapV3PoolStateJSON.abi);\n      const tokens = await getTokens(\n        positionDetails.flatMap((details) => [details.token0, details.token1]),\n        chainId\n      );\n      const calls = [];\n      const poolPairs = [];\n      positionDetails.forEach((details) => {\n        const tokenA = tokens[details.token0] ?? new Token(chainId, details.token0, DEFAULT_ERC20_DECIMALS);\n        const tokenB = tokens[details.token1] ?? new Token(chainId, details.token1, DEFAULT_ERC20_DECIMALS);\n        let poolAddress = poolAddressCache.get(details, chainId);\n        if (!poolAddress) {\n          const factoryAddress = V3_CORE_FACTORY_ADDRESSES[chainId];\n          poolAddress = computePoolAddress({\n            factoryAddress,\n            tokenA,\n            tokenB,\n            fee: details.fee,\n            chainId: getChainInfo(chainId).sdkId\n          });\n          poolAddressCache.set(details, chainId, poolAddress);\n        }\n        poolPairs.push([tokenA, tokenB]);\n        calls.push({\n          target: poolAddress,\n          callData: poolInterface.encodeFunctionData(\"slot0\"),\n          gasLimit: DEFAULT_GAS_LIMIT\n        });\n      }, []);\n      return (await multicall.callStatic.multicall(calls)).returnData.reduce((acc, result, i) => {\n        if (result.success) {\n          const slot0 = poolInterface.decodeFunctionResult(\"slot0\", result.returnData);\n          acc.push(createPositionInfo(account, chainId, positionDetails[i], slot0, ...poolPairs[i]));\n        } else {\n          logger.debug(\"useMultiChainPositions\", \"fetchPositionInfo\", \"slot0 fetch errored\", result);\n        }\n        return acc;\n      }, []);\n    },\n    [account, poolAddressCache, getTokens]\n  );\n  const fetchPositionsForChain = useCallback(\n    async (chainId) => {\n      if (!account || account.length === 0) {\n        return [];\n      }\n      try {\n        const pm = pms[chainId];\n        const multicall = multicalls[chainId];\n        const balance = await pm?.balanceOf(account);\n        if (!pm || !multicall || balance.lt(1)) {\n          return [];\n        }\n        const positionIds = await fetchPositionIds(pm, balance);\n        fetchPositionFees(pm, positionIds, chainId);\n        const postionDetails = await fetchPositionDetails(pm, positionIds);\n        return fetchPositionInfo(postionDetails, chainId, multicall);\n      } catch (error) {\n        const wrappedError = new Error(\"Failed to fetch positions for chain\", { cause: error });\n        logger.debug(\"useMultiChainPositions\", \"fetchPositionsForChain\", wrappedError.message, {\n          error: wrappedError,\n          chainId\n        });\n        return [];\n      }\n    },\n    [account, fetchPositionDetails, fetchPositionFees, fetchPositionIds, fetchPositionInfo, pms, multicalls]\n  );\n  const fetchAllPositions = useCallback(async () => {\n    positionsFetching.current = true;\n    const positions2 = (await Promise.all(chains.map(fetchPositionsForChain))).flat();\n    positionsFetching.current = false;\n    setPositions(positions2);\n  }, [chains, fetchPositionsForChain, setPositions]);\n  useEffect(() => {\n    if (positionsFetching.current || cachedPositions?.stale === false) {\n      return void 0;\n    } else if (document.hasFocus()) {\n      fetchAllPositions();\n    } else {\n      const onFocus = () => {\n        fetchAllPositions();\n        window.removeEventListener(\"focus\", onFocus);\n      };\n      window.addEventListener(\"focus\", onFocus);\n      return () => {\n        window.removeEventListener(\"focus\", onFocus);\n      };\n    }\n    return void 0;\n  }, [fetchAllPositions, positionsFetching, cachedPositions?.stale]);\n  const positionsWithFeesAndPrices = useMemo(\n    () => positions?.map((position) => {\n      const key = position.chainId.toString() + position.details.tokenId;\n      const fees = feeMap[key] ? [\n        // We parse away from SDK/ethers types so fees can be multiplied by primitive number prices\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token0, feeMap[key]?.[0].toString()).toExact()),\n        parseFloat(CurrencyAmount.fromRawAmount(position.pool.token1, feeMap[key]?.[1].toString()).toExact())\n      ] : void 0;\n      const prices = [priceMap[currencyKey(position.pool.token0)], priceMap[currencyKey(position.pool.token1)]];\n      return { ...position, fees, prices };\n    }),\n    [feeMap, positions, priceMap]\n  );\n  return { positions: positionsWithFeesAndPrices, loading: pricesLoading || positionsLoading };\n}\n","\"use strict\";\nimport useMultiChainPositions from \"components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions\";\nimport { Scrim } from \"components/AccountDrawer/Scrim\";\nimport { CurrencySelect } from \"components/CurrencyInputPanel/SwapCurrencyInputPanel\";\nimport { MobileBottomBar } from \"components/NavBar/MobileBottomBar\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport styled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useCallback, useReducer, useState } from \"react\";\nimport { Plus, X } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Button, Flex, Spacer, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { CoinConvert } from \"ui/src/components/icons/CoinConvert\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n`;\nconst SwapModalWrapper = styled(Column)`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  opacity: ${({ open }) => open ? \"1\" : \"0\"};\n  max-height: ${({ open }) => open ? \"100vh\" : \"0\"};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => open ? \"24px\" : \"0\"};\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  }\n\n  @media (max-width: ${breakpoints.xl}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`;\nconst PoolButton = ({ isOpen, icon, onPress, children, \"data-testid\": dataTestId }) => {\n  return <Button\n    onPress={onPress}\n    icon={icon}\n    variant={isOpen ? \"default\" : \"branded\"}\n    emphasis=\"secondary\"\n    data-testid={dataTestId}\n  >\r\n      {children}\r\n    </Button>;\n};\nfunction findMatchingPosition(positions, token0, token1, feeTier) {\n  return positions?.find(\n    (position) => (position?.details.token0.toLowerCase() === token0?.address || position?.details.token0.toLowerCase() === token1?.address) && (position?.details.token1.toLowerCase() === token0?.address || position?.details.token1.toLowerCase() === token1?.address) && position?.details.fee == feeTier && !position.closed\n  );\n}\nexport function PoolDetailsStatsButtons({\n  chainId,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  loading\n}) {\n  const account = useAccount();\n  const { t } = useTranslation();\n  const { positions: userOwnedPositions } = useMultiChainPositions(account.address ?? \"\");\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier);\n  const tokenId = position?.details.tokenId;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const currency0 = token0 && gqlToCurrency(token0);\n  const currency1 = token1 && gqlToCurrency(token1);\n  const currencyInfo0 = useCurrencyInfo(currency0 && currencyId(currency0));\n  const currencyInfo1 = useCurrencyInfo(currency1 && currencyId(currency1));\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      const currency0Address = currency0.isNative ? NATIVE_CHAIN_ID : currency0.address;\n      const currency1Address = currency1.isNative ? NATIVE_CHAIN_ID : currency1.address;\n      const chainUrlParam = getChainUrlParam(chainId ?? currency0.chainId);\n      if (tokenId) {\n        navigate(`/positions/${protocolVersion?.toLowerCase()}/${chainUrlParam}/${tokenId}`, {\n          state: { from: location.pathname }\n        });\n      } else {\n        const url = `/positions/create/${protocolVersion?.toLowerCase()}?currencyA=${currency0Address}&currencyB=${currency1Address}&chain=${chainUrlParam}`;\n        navigate(url, {\n          state: { from: location.pathname }\n        });\n      }\n    }\n  };\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false);\n  const media = useMedia();\n  const screenSizeLargerThanTablet = !media.xl;\n  const isMobile = media.md;\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  const [warningModalCurrencyInfo, setWarningModalCurrencyInfo] = useState();\n  const onWarningCardCtaPressed = useCallback((currencyInfo) => {\n    setWarningModalCurrencyInfo(currencyInfo);\n    setShowWarningModal(true);\n  }, []);\n  if (loading || !currency0 || !currency1) {\n    return <Flex row justifyContent=\"space-between\" data-testid=\"pdp-buttons-loading-skeleton\" mb=\"$spacing12\">\r\n        <LoadingBubble containerWidth=\"50%\" width=\"95%\" />\r\n        <Spacer size=\"$spacing6\" />\r\n        <LoadingBubble containerWidth=\"50%\" width=\"95%\" />\r\n      </Flex>;\n  }\n  return <Flex flexDirection=\"column\" gap=\"$gap24\">\r\n      <PoolButtonsWrapper isMobile={isMobile}>\r\n        <Flex row justifyContent=\"center\" gap={screenSizeLargerThanTablet ? \"$spacing12\" : \"$spacing8\"} width=\"100%\">\r\n          <PoolButton\n    icon={swapModalOpen ? <X size=\"$icon.20\" /> : <CoinConvert size=\"$icon.20\" />}\n    onPress={toggleSwapModalOpen}\n    isOpen={swapModalOpen}\n    data-testid={`pool-details-${swapModalOpen ? \"close\" : \"swap\"}-button`}\n  >\r\n            {swapModalOpen ? t(\"common.close\") : t(\"common.swap\")}\r\n          </PoolButton>\r\n          <PoolButton\n    icon={<Plus size=\"$icon.20\" />}\n    onPress={handleAddLiquidity}\n    data-testid=\"pool-details-add-liquidity-button\"\n  >\r\n            {t(\"common.addLiquidity\")}\r\n          </PoolButton>\r\n        </Flex>\r\n      </PoolButtonsWrapper>\r\n      <SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\">\r\n        <Swap\n    syncTabToUrl={false}\n    chainId={chainId}\n    initialInputCurrency={currency0}\n    initialOutputCurrency={currency1}\n  />\r\n        <TokenWarningCard currencyInfo={currencyInfo0} onPress={() => onWarningCardCtaPressed(currencyInfo0)} />\r\n        <TokenWarningCard currencyInfo={currencyInfo1} onPress={() => onWarningCardCtaPressed(currencyInfo1)} />\r\n        {warningModalCurrencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={warningModalCurrencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}\r\n      </SwapModalWrapper>\r\n      <Scrim\n    $open={swapModalOpen && !screenSizeLargerThanTablet}\n    $maxWidth={breakpoints.xl}\n    $zIndex={Z_INDEX.sticky}\n    onClick={toggleSwapModalOpen}\n  />\r\n    </Flex>;\n}\nfunction PoolButtonsWrapper({ children, isMobile }) {\n  const isTouchDevice = useIsTouchDevice();\n  const { direction: scrollDirection } = useScroll();\n  const Wrapper = isMobile ? MobileBottomBar : PoolDetailsStatsButtonsRow;\n  const wrapperProps = isMobile ? { hide: isTouchDevice && scrollDirection === ScrollDirection.DOWN } : {};\n  return <Wrapper {...wrapperProps}>{children}</Wrapper>;\n}\n","\"use strict\";\nimport { LiquidityPositionCard } from \"components/Liquidity/LiquidityPositionCard\";\nimport { getPositionUrl } from \"components/Liquidity/utils\";\nimport { Link } from \"react-router-dom\";\nimport { Flex } from \"ui/src\";\nexport function PoolDetailsPositionsTable({ positions }) {\n  return <Flex gap=\"$gap24\" width=\"100%\">\r\n      {positions?.map((position) => <Link key={position.poolId} style={{ textDecoration: \"none\" }} to={getPositionUrl(position)}>\r\n          <LiquidityPositionCard liquidityPosition={position} />\r\n        </Link>)}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery,\n  useV4PoolTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nexport var PoolTableTransactionType = /* @__PURE__ */ ((PoolTableTransactionType2) => {\n  PoolTableTransactionType2[\"BUY\"] = \"Buy\";\n  PoolTableTransactionType2[\"SELL\"] = \"Sell\";\n  PoolTableTransactionType2[\"REMOVE\"] = \"Remove\";\n  PoolTableTransactionType2[\"ADD\"] = \"Add\";\n  return PoolTableTransactionType2;\n})(PoolTableTransactionType || {});\nconst PoolTransactionDefaultQuerySize = 25;\nexport function usePoolTransactions(address, chainId, filter = [\n  \"Buy\" /* BUY */,\n  \"Sell\" /* SELL */,\n  \"Remove\" /* REMOVE */,\n  \"Add\" /* ADD */\n], token0, protocolVersion = ProtocolVersion.V3, first = PoolTransactionDefaultQuerySize) {\n  const { defaultChainId } = useEnabledChains();\n  const variables = { first, chain: toGraphQLChain(chainId ?? defaultChainId) };\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useV4PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      poolId: address\n    },\n    skip: protocolVersion !== ProtocolVersion.V4\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useV3PoolTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: protocolVersion !== ProtocolVersion.V3\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useV2PairTransactionsQuery({\n    variables: {\n      ...variables,\n      address\n    },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2\n  });\n  const loadingMore = useRef(false);\n  const { transactions, loading, fetchMore, error } = protocolVersion === ProtocolVersion.V4 ? { transactions: dataV4?.v4Pool?.transactions, loading: loadingV4, fetchMore: fetchMoreV4, error: errorV4 } : protocolVersion === ProtocolVersion.V3 ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 } : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 };\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMore.current) {\n        return;\n      }\n      loadingMore.current = true;\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMore.current = false;\n            return prev;\n          }\n          onComplete?.();\n          const mergedData = protocolVersion === ProtocolVersion.V4 ? {\n            v4Pool: {\n              ...fetchMoreResult.v4Pool,\n              transactions: [\n                ...prev.v4Pool?.transactions ?? [],\n                ...fetchMoreResult.v4Pool.transactions\n              ]\n            }\n          } : protocolVersion === ProtocolVersion.V3 ? {\n            v3Pool: {\n              ...fetchMoreResult.v3Pool,\n              transactions: [\n                ...prev.v3Pool?.transactions ?? [],\n                ...fetchMoreResult.v3Pool.transactions\n              ]\n            }\n          } : {\n            v2Pair: {\n              ...fetchMoreResult.v2Pair,\n              transactions: [\n                ...prev.v2Pair?.transactions ?? [],\n                ...fetchMoreResult.v2Pair.transactions\n              ]\n            }\n          };\n          loadingMore.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [fetchMore, transactions, protocolVersion]\n  );\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])?.map((tx) => {\n      if (!tx) {\n        return void 0;\n      }\n      const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const token0Address = token0?.address === NATIVE_CHAIN_ID ? WRAPPED_NATIVE_CURRENCY[chainId ?? UniverseChainId.Mainnet]?.address : token0?.address;\n      const isSell = tokenIn?.address?.toLowerCase() === token0Address?.toLowerCase();\n      const type = tx.type === PoolTransactionType.Swap ? isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */ : tx.type === PoolTransactionType.Remove ? \"Remove\" /* REMOVE */ : \"Add\" /* ADD */;\n      if (!filter.includes(type)) {\n        return void 0;\n      }\n      return {\n        timestamp: tx.timestamp,\n        transaction: tx.hash,\n        pool: {\n          token0: {\n            id: tx.token0.address ?? null,\n            symbol: tx.token0.symbol ?? \"\"\n          },\n          token1: {\n            id: tx.token1.address ?? null,\n            symbol: tx.token1.symbol ?? \"\"\n          }\n        },\n        maker: tx.account,\n        amount0: parseFloat(tx.token0Quantity),\n        amount1: parseFloat(tx.token1Quantity),\n        amountUSD: tx.usdValue.value,\n        type\n      };\n    }).filter((value) => value !== void 0);\n  }, [transactions, token0?.address, chainId, filter]);\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error\n    };\n  }, [filteredTransactions, loading, loadMore, error]);\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport { FilterHeaderRow, TableText, TimestampCell } from \"components/Table/styled\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport {\n  PoolTableTransactionType,\n  usePoolTransactions\n} from \"graphql/data/pools/usePoolTransactions\";\nimport { supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { Flex, Text, useMedia } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`;\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`;\nvar PoolTransactionColumn = /* @__PURE__ */ ((PoolTransactionColumn2) => {\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Timestamp\"] = 0] = \"Timestamp\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Type\"] = 1] = \"Type\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"MakerAddress\"] = 2] = \"MakerAddress\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"FiatValue\"] = 3] = \"FiatValue\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"InputAmount\"] = 4] = \"InputAmount\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"OutputAmount\"] = 5] = \"OutputAmount\";\n  return PoolTransactionColumn2;\n})(PoolTransactionColumn || {});\nconst PoolTransactionColumnWidth = {\n  [0 /* Timestamp */]: 80,\n  [1 /* Type */]: 90,\n  [2 /* MakerAddress */]: 125,\n  [3 /* FiatValue */]: 125,\n  [4 /* InputAmount */]: 125,\n  [5 /* OutputAmount */]: 125\n};\nfunction comparePoolTokens(tokenA, tokenB) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain);\n    return chainId && tokenA.id?.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase();\n  }\n  return tokenA.id?.toLowerCase() === tokenB?.address?.toLowerCase();\n}\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const chainId = useChainIdFromUrlParam() ?? UniverseChainId.Mainnet;\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.REMOVE,\n    PoolTableTransactionType.ADD\n  ]);\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chainId,\n    filter,\n    token0,\n    protocolVersion\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        size: PoolTransactionColumnWidth[0 /* Timestamp */],\n        header: () => <Cell justifyContent=\"flex-start\">\r\n            <Flex row gap=\"4px\">\r\n              <Text variant=\"body3\" color=\"$neutral1\">\r\n                <Trans i18nKey=\"common.time\" />\r\n              </Text>\r\n            </Flex>\r\n          </Cell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\">\r\n            <TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n        />\r\n          </Cell>\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text;\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = \"$statusSuccess\";\n            text = <span>\r\n                <Trans i18nKey=\"common.buy.label\" />\r\n                &nbsp;{token0?.symbol}\r\n              </span>;\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = \"$statusCritical\";\n            text = <span>\r\n                <Trans i18nKey=\"common.sell.label\" />\r\n                &nbsp;{token0?.symbol}\r\n              </span>;\n          } else {\n            color = row.type === PoolTableTransactionType.ADD ? \"$statusSuccess\" : \"$statusCritical\";\n            text = row.type === PoolTableTransactionType.ADD ? <Trans i18nKey=\"common.add.label\" /> : <Trans i18nKey=\"common.remove.label\" />;\n          }\n          return <TableText color={color}>{text}</TableText>;\n        },\n        {\n          id: \"swap-type\",\n          size: PoolTransactionColumnWidth[1 /* Type */],\n          header: () => <Cell justifyContent=\"flex-start\">\r\n              <FilterHeaderRow clickable={filterModalIsOpen} onPress={() => toggleFilterModal()} ref={filterAnchorRef}>\r\n                <Filter\n            allFilters={Object.values(PoolTableTransactionType)}\n            activeFilter={filter}\n            setFilters={setFilters}\n            isOpen={filterModalIsOpen}\n            toggleFilterModal={toggleFilterModal}\n            anchorRef={filterAnchorRef}\n          />\r\n                <Text variant=\"body3\" color=\"$neutral1\">\r\n                  <Trans i18nKey=\"common.type.label\" />\r\n                </Text>\r\n              </FilterHeaderRow>\r\n            </Cell>,\n          cell: (PoolTransactionTableType) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\">\r\n              {PoolTransactionTableType.getValue?.()}\r\n            </Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: \"fiat-value\",\n        maxSize: PoolTransactionColumnWidth[3 /* FiatValue */],\n        header: () => <Cell justifyContent=\"flex-end\" grow>\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              {activeLocalCurrency}\r\n            </Text>\r\n          </Cell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <TableText>{formatFiatPrice({ price: fiat.getValue?.() })}</TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1, {\n        id: \"input-amount\",\n        maxSize: PoolTransactionColumnWidth[4 /* InputAmount */],\n        header: () => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              {token0?.symbol}\r\n            </Text>\r\n          </Cell>,\n        cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <TableText>\r\n              {formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\r\n            </TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0, {\n        id: \"output-amount\",\n        maxSize: PoolTransactionColumnWidth[5 /* OutputAmount */],\n        header: () => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              {token1?.symbol}\r\n            </Text>\r\n          </Cell>,\n        cell: (outputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <TableText>\r\n              {formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\r\n            </TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: \"maker-address\",\n        maxSize: PoolTransactionColumnWidth[2 /* MakerAddress */],\n        header: () => <Cell justifyContent=\"flex-end\" grow>\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              <Trans i18nKey=\"common.wallet.label\" />\r\n            </Text>\r\n          </Cell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\" grow>\r\n            <StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>\r\n              <TableText>{shortenAddress(makerAddress.getValue?.(), 0)}</TableText>\r\n            </StyledExternalLink>\r\n          </Cell>\n      })\n    ];\n  }, [\n    activeLocalCurrency,\n    chainId,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    token0,\n    token1?.symbol\n  ]);\n  const media = useMedia();\n  return <TableWrapper data-testid=\"pool-details-transactions-table\">\r\n      <Table\n    columns={columns}\n    data={transactions}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxHeight={600}\n    defaultPinnedColumns={[\"timestamp\", \"swap-type\"]}\n    forcePinning={media.xxl}\n  />\r\n    </TableWrapper>;\n}\n","\"use strict\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { PoolDetailsPositionsTable } from \"components/Pools/PoolDetails/PoolDetailsPositionsTable\";\nimport { PoolDetailsTransactionsTable } from \"components/Pools/PoolDetails/PoolDetailsTransactionsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nvar PoolDetailsTableTabs = /* @__PURE__ */ ((PoolDetailsTableTabs2) => {\n  PoolDetailsTableTabs2[\"TRANSACTIONS\"] = \"transactions\";\n  PoolDetailsTableTabs2[\"POSITIONS\"] = \"positions\";\n  return PoolDetailsTableTabs2;\n})(PoolDetailsTableTabs || {});\nconst TableHeader = styled(ThemedText.HeadlineMedium)`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`;\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState(\"transactions\" /* TRANSACTIONS */);\n  const account = useAccount();\n  const { data } = useGetPositionsQuery({ address: account.address, poolId: poolAddress });\n  const positions = useMemo(\n    () => data?.positions.map((position) => parseRestPosition(position)).filter((position) => position !== void 0),\n    [data?.positions]\n  );\n  return <Column gap=\"lg\">\r\n      <Row gap=\"16px\">\r\n        <TableHeader\n    active={activeTable === \"transactions\" /* TRANSACTIONS */}\n    onClick={() => setActiveTable(\"transactions\" /* TRANSACTIONS */)}\n    disabled={!positions?.length}\n  >\r\n          <Trans i18nKey=\"common.transactions\" />\r\n        </TableHeader>\r\n        {Boolean(positions?.length) && <TableHeader\n    active={activeTable === \"positions\" /* POSITIONS */}\n    onClick={() => setActiveTable(\"positions\" /* POSITIONS */)}\n  >\r\n            <Trans i18nKey=\"pool.positions\" />\r\n            {` (${positions?.length})`}\r\n          </TableHeader>}\r\n      </Row>\r\n      {activeTable === \"transactions\" /* TRANSACTIONS */ ? <PoolDetailsTransactionsTable\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={protocolVersion}\n  /> : <PoolDetailsPositionsTable positions={positions} />}\r\n    </Column>;\n}\n","\"use strict\";\nimport { V2_BIPS } from \"graphql/data/pools/useTopPools\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport {\n  useV2PairQuery,\n  useV3PoolQuery,\n  useV4PoolQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nfunction calc24HVolChange(historicalVolume) {\n  if (!historicalVolume) {\n    return void 0;\n  }\n  const currentTime = (/* @__PURE__ */ new Date()).getTime();\n  const dayAgo = (currentTime - ms(\"1d\")) / 1e3;\n  const twoDaysAgo = (currentTime - ms(\"2d\")) / 1e3;\n  const volume24h = historicalVolume.filter((entry) => entry?.timestamp !== void 0 && entry.timestamp >= dayAgo).reduce((acc, cur) => acc + cur.value, 0);\n  const volume48h = historicalVolume.filter(\n    (entry) => entry?.timestamp !== void 0 && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n  ).reduce((acc, cur) => acc + cur.value, 0);\n  return (volume24h - volume48h) / volume48h * 100;\n}\nexport function usePoolData(poolIdOrAddress, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4\n  } = useV4PoolQuery({\n    variables: { chain, poolId: poolIdOrAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3\n  } = useV3PoolQuery({\n    variables: { chain, address: poolIdOrAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2\n  } = useV2PairQuery({\n    variables: { chain, address: poolIdOrAddress },\n    skip: !chainId,\n    errorPolicy: \"all\"\n  });\n  return useMemo(() => {\n    const anyError = Boolean(errorV4 || errorV3 || errorV2);\n    const anyLoading = Boolean(loadingV4 || loadingV3 || loadingV2);\n    const pool = dataV4?.v4Pool ?? dataV3?.v3Pool ?? dataV2?.v2Pair ?? void 0;\n    const feeTier = dataV4?.v4Pool?.feeTier ?? dataV3?.v3Pool?.feeTier ?? V2_BIPS;\n    const poolId = dataV4?.v4Pool?.poolId ?? dataV3?.v3Pool?.address ?? dataV2?.v2Pair?.address ?? poolIdOrAddress;\n    return {\n      data: pool ? {\n        idOrAddress: poolId,\n        txCount: pool.txCount,\n        protocolVersion: pool.protocolVersion,\n        token0: pool.token0,\n        tvlToken0: pool.token0Supply,\n        token0Price: pool.token0?.project?.markets?.[0]?.price?.value ?? pool.token0?.market?.price?.value,\n        token1: pool.token1,\n        tvlToken1: pool.token1Supply,\n        token1Price: pool.token1?.project?.markets?.[0]?.price?.value ?? pool.token1?.market?.price?.value,\n        feeTier,\n        volumeUSD24H: pool.volume24h?.value,\n        volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n        tvlUSD: pool.totalLiquidity?.value,\n        tvlUSDChange: pool.totalLiquidityPercentChange24h?.value,\n        hookAddress: \"hook\" in pool ? pool?.hook?.address : void 0,\n        rewardsCampaign: \"rewardsCampaign\" in pool ? pool.rewardsCampaign : void 0\n      } : void 0,\n      error: anyError,\n      loading: anyLoading\n    };\n  }, [\n    dataV2?.v2Pair,\n    dataV3?.v3Pool,\n    dataV4?.v4Pool,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadingV2,\n    loadingV3,\n    loadingV4,\n    poolIdOrAddress\n  ]);\n}\n","\"use strict\";\nexport const getPoolDetailPageTitle = (t, poolData) => {\n  const token0Symbol = poolData?.token0.symbol;\n  const token1Symbol = poolData?.token1.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle;\n  }\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { LpIncentivesPoolDetailsRewardsDistribution } from \"components/LpIncentives/LpIncentivesPoolDetailsRewardsDistribution\";\nimport ChartSection from \"components/Pools/PoolDetails/ChartSection\";\nimport { PoolDetailsApr } from \"components/Pools/PoolDetails/PoolDetailsApr\";\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from \"components/Pools/PoolDetails/PoolDetailsHeader\";\nimport { PoolDetailsLink } from \"components/Pools/PoolDetails/PoolDetailsLink\";\nimport { PoolDetailsStats } from \"components/Pools/PoolDetails/PoolDetailsStats\";\nimport { PoolDetailsStatsButtons } from \"components/Pools/PoolDetails/PoolDetailsStatsButtons\";\nimport { PoolDetailsTableTab } from \"components/Pools/PoolDetails/PoolDetailsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { usePoolData } from \"graphql/data/pools/usePoolData\";\nimport { calculateApr } from \"graphql/data/pools/useTopPools\";\nimport { gqlToCurrency, unwrapToken } from \"graphql/data/util\";\nimport { useColor } from \"hooks/useColor\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ExploreTab } from \"pages/Explore/constants\";\nimport { getPoolDetailPageTitle } from \"pages/PoolDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useEffect, useMemo, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { ThemeProvider } from \"theme\";\nimport { Flex } from \"ui/src\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants/trace\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nconst PageWrapper = styled(Row)`\n  padding: 0 20px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 80px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    padding: 48px 40px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n`;\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.xl}px) {\n    max-width: unset;\n  }\n`;\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`;\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${breakpoints.xl}px) and (min-width: ${breakpoints.md}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${breakpoints.md}px) {\n    padding: unset;\n  }\n`;\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`;\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`;\nfunction getUnwrappedPoolToken(poolData, chainId) {\n  return poolData?.token0 && poolData?.token1 && chainId ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)] : [void 0, void 0];\n}\nexport default function PoolDetailsPage() {\n  const { t } = useTranslation();\n  const { poolAddress } = useParams();\n  const urlChain = useChainIdFromUrlParam();\n  const chainInfo = urlChain ? getChainInfo(urlChain) : void 0;\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? \"\", chainInfo?.id);\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false);\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id);\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens;\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const poolApr = useMemo(\n    () => calculateApr(poolData?.volumeUSD24H, poolData?.tvlUSD, poolData?.feeTier),\n    [poolData?.volumeUSD24H, poolData?.tvlUSD, poolData?.feeTier]\n  );\n  const navigate = useNavigate();\n  const { darkMode, surface2, accent1 } = useTheme();\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const isInvalidPool = !poolAddress || !chainInfo;\n  const poolNotFound = !loading && !poolData || isInvalidPool;\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol;\n    const token1Symbol = poolData?.token1.symbol;\n    const poolName = `${token0Symbol}/${token1Symbol}`;\n    const chainName = chainInfo?.label ?? \"Ethereum\";\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`\n    };\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  const showRewardsDistribution = useMemo(() => {\n    return Boolean(\n      isLPIncentivesEnabled && poolData && poolData.rewardsCampaign?.boostedApr && poolData.rewardsCampaign.boostedApr > 0\n    );\n  }, [isLPIncentivesEnabled, poolData]);\n  useEffect(() => {\n    if (poolNotFound) {\n      navigate(`/explore/pools?type=${ExploreTab.Pools}&result=${ModalName.NotFound}`);\n    }\n  }, [poolNotFound, navigate]);\n  if (poolNotFound) {\n    return null;\n  }\n  return <ThemeProvider token0={color0 !== accent1 ? color0 : void 0} token1={color1 !== accent1 ? color1 : void 0}>\r\n      <Helmet>\r\n        <title>{getPoolDetailPageTitle(t, poolData)}</title>\r\n        {metatags.map((tag, index) => <meta key={index} {...tag} />)}\r\n      </Helmet>\r\n      <Trace\n    logImpression={!loading}\n    page={InterfacePageName.POOL_DETAILS_PAGE}\n    properties={{\n      poolAddress,\n      chainId: chainInfo?.id,\n      feeTier: poolData?.feeTier,\n      token0Address: poolData?.token0.address,\n      token1Address: poolData?.token1.address,\n      token0Symbol: poolData?.token0.symbol,\n      token1Symbol: poolData?.token1.symbol,\n      token0Name: poolData?.token0.name,\n      token1Name: poolData?.token1.name\n    }}\n  >\r\n        <PageWrapper>\r\n          <LeftColumn>\r\n            <Column gap=\"20px\">\r\n              <Column>\r\n                <PoolDetailsBreadcrumb\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    loading={loading}\n  />\r\n                <PoolDetailsHeader\n    chainId={chainInfo?.id}\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    hookAddress={poolData?.hookAddress}\n    protocolVersion={poolData?.protocolVersion}\n    rewardsApr={poolData?.rewardsCampaign?.boostedApr}\n    toggleReversed={toggleReversed}\n    loading={loading}\n  />\r\n              </Column>\r\n              <ChartSection\n    poolData={poolData}\n    loading={loading}\n    isReversed={isReversed}\n    chain={chainInfo?.backendChain.chain}\n  />\r\n            </Column>\r\n            <HR />\r\n            <PoolDetailsTableTab\n    poolAddress={poolAddress}\n    token0={token0}\n    token1={token1}\n    protocolVersion={poolData?.protocolVersion}\n  />\r\n          </LeftColumn>\r\n          <Flex gap=\"$spacing24\" width={360} $xl={{ width: \"100%\", mt: 44, minWidth: \"unset\" }}>\r\n            <Flex $xl={{ marginTop: -24 }}>\r\n              <PoolDetailsStatsButtons\n    chainId={chainInfo?.id}\n    token0={token0}\n    token1={token1}\n    feeTier={poolData?.feeTier}\n    protocolVersion={poolData?.protocolVersion}\n    loading={loading}\n  />\r\n            </Flex>\r\n            {poolData && <PoolDetailsApr\n    poolApr={poolApr}\n    rewardsApr={isLPIncentivesEnabled ? poolData?.rewardsCampaign?.boostedApr : void 0}\n  />}\r\n            {showRewardsDistribution && <LpIncentivesPoolDetailsRewardsDistribution rewardsCampaign={poolData?.rewardsCampaign} />}\r\n            <PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} />\r\n            <TokenDetailsWrapper>\r\n              <TokenDetailsHeader>\r\n                <Trans i18nKey=\"common.links\" />\r\n              </TokenDetailsHeader>\r\n              <LinksContainer>\r\n                {poolData?.protocolVersion !== ProtocolVersion.V4 && <PoolDetailsLink\n    address={poolAddress}\n    chainId={chainInfo?.id}\n    tokens={[token0, token1]}\n    loading={loading}\n  />}\r\n                <PoolDetailsLink\n    address={token0?.address}\n    chainId={chainInfo?.id}\n    tokens={[token0]}\n    loading={loading}\n  />\r\n                <PoolDetailsLink\n    address={token1?.address}\n    chainId={chainInfo?.id}\n    tokens={[token1]}\n    loading={loading}\n  />\r\n              </LinksContainer>\r\n            </TokenDetailsWrapper>\r\n          </Flex>\r\n        </PageWrapper>\r\n      </Trace>\r\n    </ThemeProvider>;\n}\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;"],"names":["ScrimBackground","styled","div","$zIndex","Z_INDEX","modalBackdrop","theme","scrim","$maxWidth","breakpoint","md","$open","transition","duration","medium","Scrim","props","fullWidth","width","useDeviceDimensions","useEffect","breakpoints","document","body","style","overflow","_cn4","_cn3","BarChartSide","percent","color","isLeft","Flex","height","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderRightWidth","borderRightColor","borderTopRightRadius","borderBottomRightRadius","borderLeftWidth","borderLeftColor","LpIncentivesPoolDetailsRewardsDistribution","rewardsCampaign","uniPrice","formatCurrencyAmount","useFormatter","price","useUSDCPrice","LP_INCENTIVES_REWARD_TOKEN","t","useTranslation","currentLanguage","useCurrentLanguage","rewardsPercent","useMemo","distributed","distributedRewards","JSBI","total","totalRewardAllocation","distributedNum","parseFloat","toString","totalNum","Math","min","timePercent","start","startTimestamp","end","endTimestamp","now","Date","distributedRewardsRaw","totalRewardAllocationRaw","distributedRewardsAmount","CurrencyAmount","fromRawAmount","totalRewardAllocationAmount","distributedRewardsFiat","quote","totalRewardAllocationFiat","formattedDistributedToken","amount","type","NumberType","TokenQuantityStats","formattedTotalToken","formattedDistributedFiat","FiatTokenStats","placeholder","formattedTotalFiat","daysRemaining","getDaysRemaining","diff","days","ms","ceil","dateRange","formatDateRange","locale","options","month","day","Intl","DateTimeFormat","format","className","Text","variant","symbol","_cn2","_cn","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","ChartTypeSelectorContainer","PDPChartTypeSelector","chartType","onChartTypeChange","disabledOption","ChartTypeDropdown","currentChartType","onSelectOption","usePDPChartState","poolData","tokenA","tokenB","isReversed","chain","protocolVersion","timePeriod","setTimePeriod","useState","TimePeriod","DAY","setChartType","isV2","ProtocolVersion","V2","isV3","V3","isV4","V4","variables","addressOrId","idOrAddress","toHistoryDuration","priceQuery","usePoolPriceChartData","token0","address","usePDPPriceChartData","volumeQuery","data","loading","usePoolVolumeHistoryQuery","skip","historicalVolume","v2Pair","v3Pool","v4Pool","entries","filter","amt","map","withUTCTimestamp","dataQuality","checkDataQuality","usePDPVolumeChartData","activeQuery","DataQuality","VALID","ChartSection","currencyA","currencyB","defaultChainId","useEnabledChains","media","useMedia","gqlToCurrency","token1","wrapped","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","selectedChartProps","feeTier","Number","chainId","fromGraphQLChain","poolId","hooks","hookAddress","version","parseProtocolVersion","RestProtocolVersion","tickSpacing","LiquidityChart","INVALID","errorText","Trans","i18nKey","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","filtered","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","value","TimePeriodDisplay","HOUR","selected","DISPLAYS","disabledChartOption","data-testid","ChartActionsContainer","SegmentedControl","selectedOption","time","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","ThemedText","HeadlineMedium","EllipsisStyle","formatPrice","primaryToken","referenceToken","params","PriceChartType","LINE","lastPrice","length","Chart","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","floor","close","decimals","priceDisplay","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","currentTick","formatNumber","displayValue0","tick","input","amount0Locked","displayValue1","amount1Locked","BodySmall","token","name","tickData","activeTick","useLiquidityBarData","useTheme","barData","tokenAColor","tokenBColor","highlightColor","surface3","activeTickProgress","activeRangePercentage","LoadingChart","LiquidityBarChartModel","TooltipBody","FeeAmount","LOWEST","activeRangeData","crosshair","displayPoint","display","price0","price1","paddingTop","PoolDetailsApr","poolApr","rewardsApr","formatPercent","showAprBreakdown","totalApr","rewardsAprPercent","Percent","round","BIPS_BASE","add","calculateTotalApr","toFixed","mt","LpIncentivesAprDisplay","lpIncentiveRewardApr","hideBackground","showTokenSymbol","DetailBubble","LoadingBubble","$height","$width","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ExternalLink","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","displayName","_cn9","_cn8","_cn7","_cn6","_cn5","StyledExternalLink","HeaderContainer","IconBubble","PoolDetailsBreadcrumb","poolAddress","chainUrlParam","getChainUrlParam","exploreOrigin","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","graphQLChain","toGraphQLChain","feePercent","StyledLink","getTokenDetailsURL","PoolDetailsBadge","$position","toLowerCase","href","getExplorerLink","ExplorerDataType","ADDRESS","ClickableTamaguiStyle","shortenAddress","TouchableArea","hoverable","onPress","testID","ReversedArrowsIcon","neutral2","ContractsDropdownRowContainer","Row","ContractsDropdownRow","tokens","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","NATIVE","TOKEN","gap","DoubleCurrencyLogo","CurrencyLogo","BodyPrimary","BodySecondary","ExternalLinkIcon","PoolDetailsHeaderActions","isTouchDevice","useIsTouchDevice","contractsModalIsOpen","toggleContractsModal","justify","DropdownSelector","isOpen","toggleOpen","menuLabel","UniverseChainId","Mainnet","EtherscanLogo","neutral1","ExplorerIcon","tooltipText","hideChevron","buttonStyle","ActionButtonStyle","dropdownStyle","minWidth","alignRight","ShareButton","utmSource","Link","ClickableStyle","PoolDetailsHeader","shouldColumnBreak","showRewards","useFeatureFlag","FeatureFlags","LpIncentives","Column","concatClassName","TokenName","xl","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","standard","TokenStandard","Native","navigate","useNavigate","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","containerWidth","align","onClick","MouseoverTooltip","disabled","forceShow","placement","TooltipSize","Max","text","HeaderText","StatsWrapper","surface2","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","css","rightBarChartStyles","BalanceChartSide","$color","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","isLargeScreen","unwrapToken","nativeOnChain","tvl","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","token0Price","tvlToken1","token1Price","token0FullData","token1FullData","tvlUSD","StatItem","title","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","Array","from","_","StatsTextContainer","StatItemText","formatDelta","DeltaArrow","formattedDelta","DEFAULT_ERC20_DECIMALS","DEFAULT_GAS_LIMIT","Erc20","Interface","ERC20_ABI","Erc20Bytes32","fetchChunk","multicall","chunk","callStatic","returnData","error","code","INTERNAL_JSON_RPC_ERROR_CODE","message","half","Promise","all","slice","then","c0","c1","logger","debug","extra","parseTokens","addresses","items","Error","_v","arrayToSlices","reduce","acc","index","parsedToken","nameData","symbolData","decimalsData","nameDataBytes32","symbolDataBytes32","success","decodeFunctionResult","parseInt","Token","tryParseToken","createCallsForToken","encodeFunctionData","callData2","callData","gasLimit","TokenPromiseCache","getTokensAsync","formattedAddresses","calls","previouslyCalledTokens","forEach","tokenAddress","buildCurrencyKey","previousCall","push","formattedAddress","calledTokens","tokenMap2","tokenMap","currencyKey","useContractMultichain","addressMap","ABI","chainIds","account","useAccount","provider","walletProvider","useWeb3React","isSupportedChain","useIsSupportedChainIdCallback","RPC_PROVIDERS","getContract","useInterfaceMulticallContracts","MULTICALL_ADDRESSES","MulticallJSON","POSITION_CACHE_EXPIRY","cachedPositionsAtom","atom","poolAddressKey","details","fee","poolAddressCacheAtom","atomWithStorage","tokenCacheAtom","useGetCachedTokens","chains","multicallContracts","tokenCache","cache","setCache","useAtom","get","entry","deserializeToken","set","cache2","serializeToken","useTokenCache","fetchRemoteTokens","fetched","values","getTokens","local","missing","Set","cached","MAX_UINT128","BigNumber","pow","sub","useMultiChainPositions","cachedPositions","pms","V3NFT_ADDRESSES","NFTPositionManagerJSON","multicalls","poolAddressCache","updateCache","c","usePoolAddressCache","setPositions","setCachedPositions","setPositionsAndStaleTimeout","positions","result","setTimeout","useCachedPositions","positionsFetching","useRef","positionsLoading","current","feeMap","setFeeMap","priceMap","pricesLoading","contracts","contractMap","pool","toContractInput","useUniswapPricesQuery","currencyKeyFromGraphQL","project","markets","usePoolPriceMap","fetchPositionFees","pm","positionIds","id","interface","tokenId","recipient","amount0Max","amount1Max","fees","feeBytes","fetchPositionIds","balance","toNumber","idByte","fetchPositionDetails","positionBytes","fetchPositionInfo","positionDetails","poolInterface","IUniswapV3PoolStateJSON","flatMap","poolPairs","factoryAddress","V3_CORE_FACTORY_ADDRESSES","computePoolAddress","getChainInfo","sdkId","slot0","owner","Pool","sqrtPriceX96","position","Position","liquidity","tickLower","tickUpper","inRange","closed","eq","createPositionInfo","fetchPositionsForChain","balanceOf","lt","postionDetails","wrappedError","cause","fetchAllPositions","positions2","flat","hasFocus","onFocus","window","removeEventListener","addEventListener","toExact","prices","PoolDetailsStatsButtonsRow","surface1","sticky","SwapModalWrapper","open","timing","ease","CurrencySelect","fixed","PoolButton","icon","children","dataTestId","Button","emphasis","PoolDetailsStatsButtons","userOwnedPositions","find","findMatchingPosition","location","useLocation","currencyInfo0","useCurrencyInfo","currencyId","currencyInfo1","handleAddLiquidity","currency0Address","currency1Address","state","pathname","url","swapModalOpen","toggleSwapModalOpen","useReducer","screenSizeLargerThanTablet","isMobile","showWarningModal","setShowWarningModal","closeWarningModal","warningModalCurrencyInfo","setWarningModalCurrencyInfo","onWarningCardCtaPressed","currencyInfo","PoolButtonsWrapper","X","CoinConvert","Plus","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","TokenWarningCard","TokenWarningModal","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","span","direction","scrollDirection","useScroll","Wrapper","MobileBottomBar","wrapperProps","hide","ScrollDirection","DOWN","PoolDetailsPositionsTable","textDecoration","getPositionUrl","LiquidityPositionCard","liquidityPosition","PoolTableTransactionType","PoolTableTransactionType2","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","supportedChainIdFromGQLChain","PoolDetailsTransactionsTable","useChainIdFromUrlParam","activeLocalCurrency","useAppFiatCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","s","filterAnchorRef","setFilters","BUY","SELL","REMOVE","ADD","transactions","loadMore","first","dataV4","dataV3","dataV2","loadingV4","errorV4","fetchMore","fetchMoreV4","useV4PoolTransactionsQuery","loadingV3","errorV3","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","onComplete","cursor","timestamp","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","token0Address","token0Quantity","isSell","PoolTransactionType","Remove","includes","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","justifyContent","cell","TimestampCell","getValue","link","TRANSACTION","TableText","FilterHeaderRow","clickable","Filter","allFilters","activeFilter","anchorRef","PoolTransactionTableType","maxSize","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","defaultPinnedColumns","forcePinning","xxl","TableHeader","active","PoolDetailsTableTab","activeTable","setActiveTable","useGetPositionsQuery","parseRestPosition","Boolean","calc24HVolChange","currentTime","getTime","dayAgo","twoDaysAgo","volume24h","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","PageWrapper","lg","LeftColumn","HR","hr","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","urlChain","poolIdOrAddress","useV4PoolQuery","errorPolicy","useV3PoolQuery","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","market","token1Supply","concat","totalLiquidity","totalLiquidityPercentChange24h","hook","usePoolData","x","getUnwrappedPoolToken","isLPIncentivesEnabled","calculateApr","darkMode","accent1","color0","useColor","color1","poolNotFound","metatagProperties","chainName","label","description","metatags","useDynamicMetatags","showRewardsDistribution","boostedApr","ExploreTab","Pools","ModalName","NotFound","ThemeProvider","Helmet","tag","meta","Trace","logImpression","page","InterfacePageName","POOL_DETAILS_PAGE","properties","token1Address","token0Name","token1Name","backendChain"],"sourceRoot":""}