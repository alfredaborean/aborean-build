{"version":3,"file":"static/js/7597.63e10a5a.chunk.js","mappings":"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","sources":["../packages/uniswap/src/features/passkey/utils.web.ts","webpack://@uniswap/interface/./src/components/RecoveryPhrase/Modal.tsx?c593","../packages/ui/src/components/icons/EyeSlash.tsx","components/RecoveryPhrase/Modal.tsx"],"sourcesContent":["import { Buffer } from 'buffer'\r\nimport { exportEncryptedSeedPhrase } from 'uniswap/src/features/passkey/embeddedWallet'\r\n\r\nexport async function exportSeedPhrase(): Promise<string | undefined> {\r\n  const keyPair = await window.crypto.subtle.generateKey(\r\n    {\r\n      name: 'RSA-OAEP',\r\n      modulusLength: 2048,\r\n      publicExponent: new Uint8Array([1, 0, 1]), // 65537\r\n      hash: 'SHA-256',\r\n    },\r\n    true, // extractable\r\n    ['encrypt', 'decrypt'],\r\n  )\r\n  // Export the public key in 'spki' format to match BE expectations\r\n  const publicKeySpki = await window.crypto.subtle.exportKey('spki', keyPair.publicKey)\r\n  const publicKeyBase64 = Buffer.from(publicKeySpki).toString('base64')\r\n  const encryptedSeedPhrase = await exportEncryptedSeedPhrase(publicKeyBase64)\r\n  if (!encryptedSeedPhrase) {\r\n    return undefined\r\n  }\r\n  const decryptedSeedPhrase = await window.crypto.subtle.decrypt(\r\n    {\r\n      name: 'RSA-OAEP',\r\n    },\r\n    keyPair.privateKey,\r\n    Buffer.from(encryptedSeedPhrase, 'base64'),\r\n  )\r\n  return new TextDecoder().decode(decryptedSeedPhrase)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [EyeSlash, AnimatedEyeSlash] = createIcon({\n  name: \"EyeSlash\",\n  getIcon: (props) => <Svg viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M16.5448 8.87234C16.9638 9.56568 16.9638 10.4342 16.5448 11.1276C15.6076 12.6895 13.5123 15.3333 9.99994 15.3333C9.43003 15.3333 8.89368 15.2609 8.3954 15.1352C8.22549 15.0925 8.17206 14.8747 8.29625 14.7512L9.74082 13.3067C9.8292 13.2183 9.93898 13.238 9.99994 13.238C11.7858 13.238 13.238 11.7851 13.238 9.99995C13.238 9.93899 13.2289 9.81858 13.2922 9.75534L15.3813 7.66624C15.478 7.56948 15.641 7.57946 15.7256 7.68689C16.0608 8.11051 16.3337 8.51653 16.5448 8.87234ZM17.2609 3.54664L3.54663 17.2609C3.43539 17.3722 3.28908 17.4285 3.14279 17.4285C2.99651 17.4285 2.8502 17.3729 2.73896 17.2609C2.51572 17.0377 2.51572 16.6758 2.73896 16.4525L5.56188 13.6296C4.59426 12.806 3.89244 11.856 3.45511 11.1268C3.03606 10.4335 3.03606 9.56493 3.45511 8.8716C4.39225 7.30969 6.48756 4.66587 9.99994 4.66587C11.3896 4.66587 12.5501 5.08256 13.5146 5.67684L16.4532 2.73823C16.6765 2.51499 17.0384 2.51499 17.2617 2.73823C17.4849 2.96147 17.4841 3.3234 17.2609 3.54664ZM7.34852 11.843L8.17813 11.0133C8.00899 10.7124 7.9047 10.3702 7.9047 9.99995C7.9047 9.73328 7.95799 9.48186 8.04941 9.24567C8.19418 9.36757 8.377 9.44377 8.58271 9.44377C9.05509 9.44377 9.44376 9.0551 9.44376 8.58272C9.44376 8.37701 9.36756 8.19419 9.24566 8.04943C9.48185 7.958 9.73327 7.90471 9.99994 7.90471C10.3702 7.90471 10.7131 8.009 11.0133 8.17815L11.8429 7.34853C11.3188 6.9813 10.6849 6.76185 9.99994 6.76185C8.21708 6.76185 6.76184 8.21709 6.76184 9.99995C6.76184 10.6857 6.98128 11.3188 7.34852 11.843Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { ModalContent } from \"components/NavBar/DownloadApp/Modal/Content\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { usePasskeyAuthWithHelpModal } from \"hooks/usePasskeyAuthWithHelpModal\";\nimport ms from \"ms\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { X } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { CopyHelper } from \"theme/components/CopyHelper\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Loader, Text, styled } from \"ui/src\";\nimport { EyeSlash } from \"ui/src/components/icons/EyeSlash\";\nimport { LockedDocument } from \"ui/src/components/icons/LockedDocument\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { exportSeedPhrase } from \"uniswap/src/features/passkey/utils\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useOnClickOutside } from \"utilities/src/react/hooks\";\nconst StyledX = styled(X, {\n  color: \"$neutral2\",\n  zIndex: 1,\n  ...ClickableTamaguiStyle\n});\nfunction Seed({ seed, position, revealed }) {\n  return seed ? revealed ? <Flex flexDirection=\"row\" gap=\"$gap8\">\r\n        <Text variant=\"body2\" lineHeight=\"24px\" color=\"$neutral2\" width=\"$gap16\">\r\n          {position}\r\n        </Text>\r\n        <Text variant=\"body2\" lineHeight=\"24px\">\r\n          {seed}\r\n        </Text>\r\n      </Flex> : <Flex\n    flexShrink={0}\n    width=\"100%\"\n    height=\"16px\"\n    mb=\"$padding8\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n  /> : <Loader.Box flexShrink={0} width=\"100%\" height=\"18px\" mb=\"$padding8\" />;\n}\nexport function RecoveryPhraseModal() {\n  const { t } = useTranslation();\n  const { isOpen, closeModal } = useModalState(ModalName.RecoveryPhrase);\n  const [seedPhrase, setSeedPhrase] = useState(void 0);\n  const [isRevealed, setIsRevealed] = useState(false);\n  const handleClose = () => {\n    closeModal();\n    setIsRevealed(false);\n    setSeedPhrase(void 0);\n  };\n  const seedPhraseContentRef = useRef(null);\n  useOnClickOutside(seedPhraseContentRef, () => setIsRevealed(false));\n  const { mutate: exportSeedPhraseWithHelpModal } = usePasskeyAuthWithHelpModal(\n    async () => {\n      return await exportSeedPhrase();\n    },\n    {\n      onSuccess: (seedPhrase2) => {\n        setSeedPhrase(seedPhrase2?.split(\" \"));\n      }\n    }\n  );\n  const handleReveal = () => {\n    setIsRevealed(true);\n    setTimeout(() => {\n      setIsRevealed(false);\n    }, ms(\"1m\"));\n  };\n  useEffect(() => {\n    if (isOpen) {\n      exportSeedPhraseWithHelpModal();\n    }\n  }, [exportSeedPhraseWithHelpModal, isOpen]);\n  return <Modal\n    position=\"relative\"\n    name={ModalName.RecoveryPhrase}\n    isModalOpen={isOpen}\n    onClose={handleClose}\n    maxWidth={464}\n  >\r\n      <Flex position=\"absolute\" top=\"32px\" right=\"32px\">\r\n        <StyledX onClick={handleClose} />\r\n      </Flex>\r\n      <ModalContent\n    title={t(\"setting.recoveryPhrase.title\")}\n    subtext={t(\"setting.recoveryPhrase.view.warning.message1\")}\n    header={<Flex p=\"$spacing12\" background=\"$surface3\" borderRadius=\"$rounded12\">\r\n            <LockedDocument size=\"$icon.24\" />\r\n          </Flex>}\n    maxWidth={void 0}\n  >\r\n        <Flex\n    p=\"$spacing32\"\n    gap=\"$spacing36\"\n    flexDirection=\"row\"\n    borderRadius=\"$rounded20\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface2\"\n    width=\"100%\"\n    position=\"relative\"\n    backgroundColor=\"$surface2\"\n    ref={seedPhraseContentRef}\n  >\r\n          {Array.from({ length: 3 }).map((_, i) => <Flex flexShrink={0} key={`recovery-phrase-cover-col-${i}`} gap=\"$gap16\" width=\"88px\">\r\n              {Array.from({ length: 4 }).map((_2, j) => {\n    const index = i * 4 + j + 1;\n    return <Seed\n      key={`recovery-phrase-item-${index}`}\n      seed={seedPhrase?.[index - 1]}\n      position={index}\n      revealed={isRevealed}\n    />;\n  })}\r\n            </Flex>)}\r\n          {!!seedPhrase && !isRevealed && <Flex\n    position=\"absolute\"\n    py=\"$padding8\"\n    px=\"10px\"\n    gap=\"$gap4\"\n    flexDirection=\"row\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface1\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface2\"\n    top=\"50%\"\n    left=\"50%\"\n    hoverStyle={{ opacity: 0.6 }}\n    cursor=\"pointer\"\n    userSelect=\"none\"\n    transform=\"translate(-50%, -50%)\"\n    onPress={handleReveal}\n  >\r\n              <EyeSlash minHeight={20} minWidth={20} color=\"$accent1\" />\r\n              <Text variant=\"buttonLabel3\" color=\"$accent1\">\r\n                {t(\"common.button.reveal\")}\r\n              </Text>\r\n            </Flex>}\r\n          {isRevealed && !!seedPhrase && <Flex\n    py=\"$padding8\"\n    px=\"10px\"\n    gap=\"$gap4\"\n    opacity={0.8}\n    borderRadius=\"$rounded20\"\n    background=\"$surface1\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"$surface3\"\n    position=\"absolute\"\n    left=\"50%\"\n    top=\"0\"\n    transform=\"translate(-50%, -50%)\"\n    zIndex={1}\n    hoverStyle={{ opacity: 0.6 }}\n    cursor=\"pointer\"\n    userSelect=\"none\"\n    onPress={() => {\n      setTimeout(() => {\n        setIsRevealed(false);\n      }, 500);\n    }}\n  >\r\n              <CopyHelper iconSize={20} iconPosition=\"left\" toCopy={seedPhrase?.join(\" \")}>\r\n                {t(\"common.button.copy\")}\r\n              </CopyHelper>\r\n            </Flex>}\r\n        </Flex>\r\n      </ModalContent>\r\n    </Modal>;\n}\n"],"names":["_exportSeedPhrase","apply","arguments","_buffer","require","_embeddedWallet","_asyncToGenerator2","default","keyPair","window","crypto","subtle","generateKey","name","modulusLength","publicExponent","Uint8Array","hash","publicKeySpki","exportKey","publicKey","publicKeyBase64","Buffer","from","toString","encryptedSeedPhrase","exportEncryptedSeedPhrase","decryptedSeedPhrase","decrypt","privateKey","TextDecoder","decode","EyeSlash","AnimatedEyeSlash","createIcon","getIcon","props","Svg","viewBox","fill","Path","d","_cn8","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","StyledX","styled","X","color","zIndex","ClickableTamaguiStyle","Seed","seed","position","revealed","div","className","Text","variant","lineHeight","width","Loader","Box","flexShrink","height","mb","RecoveryPhraseModal","seedPhrase","t","useTranslation","isOpen","closeModal","useModalState","ModalName","RecoveryPhrase","setSeedPhrase","useState","isRevealed","setIsRevealed","handleClose","seedPhraseContentRef","useRef","useOnClickOutside","mutate","exportSeedPhraseWithHelpModal","usePasskeyAuthWithHelpModal","exportSeedPhrase","onSuccess","seedPhrase2","split","useEffect","Modal","isModalOpen","onClose","maxWidth","onClick","ModalContent","title","subtext","header","LockedDocument","size","ref","Array","length","map","_","i","_2","j","index","handleReveal","setTimeout","ms","minHeight","minWidth","CopyHelper","iconSize","iconPosition","toCopy","join"],"sourceRoot":""}