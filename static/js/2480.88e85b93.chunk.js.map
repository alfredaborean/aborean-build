{"version":3,"file":"static/js/2480.88e85b93.chunk.js","mappings":"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","sources":["../packages/uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery.ts","../packages/uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery.ts","../packages/uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery.ts","webpack://@uniswap/interface/./src/components/Liquidity/FeeTierSearchModal.tsx?2b5b","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/EditStep.tsx?eab2","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/DynamicFeeTierSpeedbump.tsx?5fb4","webpack://@uniswap/interface/./src/components/PoolProgressIndicator/PoolProgressIndicator.tsx?7e2e","webpack://@uniswap/interface/./src/components/Charts/LiquidityRangeInput/LiquidityRangeInput.tsx?5bec","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/hooks/useTokenControlOptions.tsx?4b52","webpack://@uniswap/interface/./src/pages/Pool/Positions/create/RangeSelectionStep.tsx?cb9b","components/Liquidity/hooks/useDependentAmountFallback.ts","components/PercentInput.tsx","components/PoolProgressIndicator/PoolProgressIndicator.tsx","hooks/useV2Pairs.ts","pages/Pool/Positions/create/BaseQuoteFiatAmount.tsx","components/Liquidity/FeeTierSearchModal.tsx","pages/Pool/Positions/create/DynamicFeeTierSpeedbump.tsx","pages/Pool/Positions/create/ContextProviders.tsx","../packages/ui/src/components/icons/Edit.tsx","pages/Pool/Positions/create/EditStep.tsx","pages/Pool/Positions/create/PoolOutOfSyncError.tsx","components/Charts/LiquidityRangeInput/constants.ts","../packages/ui/src/components/icons/SearchMinus.tsx","../packages/ui/src/components/icons/SearchPlus.tsx","components/Charts/LiquidityRangeInput/LiquidityRangeInput.tsx","pages/Pool/Positions/create/PositionOutOfRangeError.tsx","pages/Pool/Positions/create/hooks/useTokenControlOptions.tsx","pages/Pool/Positions/create/RangeSelectionStep.tsx","pages/Pool/Positions/create/hooks/useLPSlippageValues.ts"],"sourcesContent":["import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { checkLpApproval } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { CheckApprovalLPRequest, CheckApprovalLPResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useCheckLpApprovalQuery({\r\n  params,\r\n  headers,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<CheckApprovalLPRequest, CheckApprovalLPResponse> & {\r\n  headers?: Record<string, string>\r\n}): UseQueryResult<CheckApprovalLPResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.lpApproval, params]\r\n\r\n  return useQuery<CheckApprovalLPResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await checkLpApproval(params, headers)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { createLpPosition } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { getTradeSettingsDeadline } from 'uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { CreateLPPositionRequest, CreateLPPositionResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useCreateLpPositionCalldataQuery({\r\n  params,\r\n  deadlineInMinutes,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<CreateLPPositionRequest, CreateLPPositionResponse> & {\r\n  deadlineInMinutes?: number\r\n}): UseQueryResult<CreateLPPositionResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.createLp, params]\r\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes)\r\n  const paramsWithDeadline = { ...params, deadline }\r\n\r\n  return useQuery<CreateLPPositionResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await createLpPosition(paramsWithDeadline)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { increaseLpPosition } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { getTradeSettingsDeadline } from 'uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { IncreaseLPPositionRequest, IncreaseLPPositionResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useIncreaseLpPositionCalldataQuery({\r\n  params,\r\n  deadlineInMinutes,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<IncreaseLPPositionRequest, IncreaseLPPositionResponse> & {\r\n  deadlineInMinutes?: number\r\n}): UseQueryResult<IncreaseLPPositionResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.increaseLp, params]\r\n\r\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes)\r\n\r\n  const paramsWithDeadline = { ...params, deadline }\r\n  return useQuery<IncreaseLPPositionResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await increaseLpPosition(paramsWithDeadline)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useCreateLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery\";\nimport { useIncreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function useIncreasePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useIncreaseLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useCreatePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useCreateLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useUpdatedAmountsFromDependentAmount({\n  token0,\n  token1,\n  dependentAmount,\n  exactField,\n  currencyAmounts,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  deposit0Disabled,\n  deposit1Disabled\n}) {\n  const dependentAmount0 = dependentAmount && exactField === PositionField.TOKEN1 && token0 ? CurrencyAmount.fromRawAmount(token0, dependentAmount) : void 0;\n  const dependentAmount0USDValue = useUSDCValue(dependentAmount0) ?? void 0;\n  const dependentAmount1 = dependentAmount && exactField === PositionField.TOKEN0 && token1 ? CurrencyAmount.fromRawAmount(token1, dependentAmount) : void 0;\n  const dependentAmount1USDValue = useUSDCValue(dependentAmount1) ?? void 0;\n  return useMemo(() => {\n    if (dependentAmount0) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN0: dependentAmount0?.toExact() ?? formattedAmounts?.TOKEN0\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN0: dependentAmount0USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN0: dependentAmount0 ?? currencyAmounts?.TOKEN0\n        },\n        updatedDeposit0Disabled: !dependentAmount0.greaterThan(0),\n        updatedDeposit1Disabled: deposit1Disabled\n      };\n    } else if (dependentAmount1) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN1: dependentAmount1?.toExact() ?? formattedAmounts?.TOKEN1\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN1: dependentAmount1USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN1: dependentAmount1 ?? currencyAmounts?.TOKEN1\n        },\n        updatedDeposit0Disabled: deposit0Disabled,\n        updatedDeposit1Disabled: !dependentAmount1.greaterThan(0)\n      };\n    }\n    return {\n      updatedFormattedAmounts: formattedAmounts,\n      updatedUSDAmounts: currencyAmountsUSDValue,\n      updatedCurrencyAmounts: currencyAmounts,\n      updatedDeposit0Disabled: deposit0Disabled,\n      updatedDeposit1Disabled: deposit1Disabled\n    };\n  }, [\n    dependentAmount0,\n    dependentAmount0USDValue,\n    dependentAmount1,\n    dependentAmount1USDValue,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled,\n    deposit1Disabled\n  ]);\n}\n","\"use strict\";\nimport { StyledInput, localeUsesComma } from \"components/NumericalInput\";\nimport { NumericalInputFontStyle } from \"pages/Swap/common/shared\";\nimport React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useCurrentLocale } from \"uniswap/src/features/language/hooks\";\nconst PercentInput = forwardRef(\n  ({ value, onUserInput, placeholder, testId, maxDecimals = 2, ...rest }, ref) => {\n    const inputRegexStr = `^\\\\d*(\\\\.\\\\d{0,${maxDecimals}})?$`;\n    const noDecimalRegexStr = \"^\\\\d*$\";\n    const inputRegex = RegExp(inputRegexStr);\n    const noDecimalRegex = RegExp(noDecimalRegexStr);\n    const locale = useCurrentLocale();\n    const enforcer = (nextUserInput) => {\n      const sanitizedInput = nextUserInput.replace(/,/g, \".\");\n      if (sanitizedInput === \"\" || (maxDecimals <= 0 ? noDecimalRegex : inputRegex).test(sanitizedInput)) {\n        onUserInput(sanitizedInput);\n      }\n    };\n    const formatValueWithLocale = (value2) => {\n      const [searchValue, replaceValue] = localeUsesComma(locale) ? [/\\./g, \",\"] : [/,/g, \".\"];\n      return value2.toString().replace(searchValue, replaceValue);\n    };\n    const valueFormattedWithLocale = formatValueWithLocale(value);\n    return <StyledInput\n      minLength={1}\n      maxLength={maxDecimals + 2}\n      {...rest}\n      ref={ref}\n      value={valueFormattedWithLocale}\n      data-testid={testId}\n      onChange={(event) => {\n        enforcer(event.target.value);\n      }}\n      inputMode=\"numeric\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      type=\"text\"\n      pattern={maxDecimals <= 0 ? noDecimalRegexStr : inputRegexStr}\n      placeholder={placeholder || \"0\"}\n      spellCheck=\"false\"\n    />;\n  }\n);\nPercentInput.displayName = \"Input\";\nconst MemoizedInput = React.memo(PercentInput);\nexport const StyledPercentInput = styled(MemoizedInput)`\n  max-height: 84px;\n  max-width: 100%;\n  width: ${({ $width }) => `${$width ?? 43}px`}; // this value is from the size of a 0 which is the default value\n  ${NumericalInputFontStyle}\n\n  ::placeholder {\n    opacity: 1;\n  }\n`;\n","\"use strict\";\nimport { Fragment } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text } from \"ui/src\";\nimport { assert } from \"utilities/src/errors\";\nexport function PoolProgressIndicator({\n  steps,\n  ...rest\n}) {\n  assert(steps.length > 0, \"PoolProgressIndicator: steps must have at least one step\");\n  return <Flex\n    width=\"100%\"\n    borderRadius=\"$rounded24\"\n    py=\"$padding8\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    p=\"$padding16\"\n    {...rest}\n  >\r\n      {steps.map((step, index) => <Fragment key={step.label + index}>\r\n          <Flex\n    row\n    gap=\"$gap12\"\n    alignItems=\"center\"\n    onPress={step.onPress}\n    {...step.onPress ? ClickableTamaguiStyle : {}}\n  >\r\n            <Flex\n    height=\"$spacing32\"\n    width=\"$spacing32\"\n    borderRadius=\"$roundedFull\"\n    backgroundColor={step.active ? \"$neutral1\" : \"$surface3\"}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n  >\r\n              <Text variant=\"subheading2\" color={step.active ? \"$surface1\" : \"$neutral2\"} userSelect=\"none\">\r\n                {index + 1}\r\n              </Text>\r\n            </Flex>\r\n            <Flex gap=\"$spacing2\">\r\n              <Text variant=\"body3\" color={step.active ? \"$neutral2\" : \"$neutral3\"} userSelect=\"none\">\r\n                <Trans i18nKey=\"common.step.number\" values={{ number: index + 1 }} />\r\n              </Text>\r\n              <Text variant=\"subheading2\" color={step.active ? \"$neutral1\" : \"$neutral2\"} userSelect=\"none\">\r\n                {step.label}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n          {index !== steps.length - 1 && <Flex\n    width=\"$spacing2\"\n    height=\"$spacing32\"\n    backgroundColor=\"$surface3\"\n    ml={15}\n    my=\"$spacing8\"\n    borderRadius=\"$roundedFull\"\n  />}\r\n        </Fragment>)}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { CurrencyAmount, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pair, computePairAddress } from \"@uniswap/v2-sdk\";\nimport { useMemo } from \"react\";\nimport { assume0xAddress } from \"utils/wagmi\";\nimport { useReadContracts } from \"wagmi\";\nexport var PairState = /* @__PURE__ */ ((PairState2) => {\n  PairState2[PairState2[\"LOADING\"] = 0] = \"LOADING\";\n  PairState2[PairState2[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PairState2[PairState2[\"EXISTS\"] = 2] = \"EXISTS\";\n  PairState2[PairState2[\"INVALID\"] = 3] = \"INVALID\";\n  return PairState2;\n})(PairState || {});\nexport function useV2Pairs(currencies) {\n  const chainId = currencies[0]?.[0]?.chainId;\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  );\n  const pairAddresses = useMemo(\n    () => tokens.map(([tokenA, tokenB]) => {\n      return tokenA && tokenB && tokenA.chainId === tokenB.chainId && !tokenA.equals(tokenB) && V2_FACTORY_ADDRESSES[tokenA.chainId] ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB }) : void 0;\n    }),\n    [tokens]\n  );\n  const { data, isLoading } = useReadContracts({\n    contracts: useMemo(() => {\n      return pairAddresses.map(\n        (pairAddress) => ({\n          address: assume0xAddress(pairAddress) ?? \"0x\",\n          // Edge case: if an address is undefined, we pass in a blank address to keep the result array the same length as pairAddresses\n          abi: [\n            {\n              constant: true,\n              inputs: [],\n              name: \"getReserves\",\n              outputs: [\n                {\n                  internalType: \"uint112\",\n                  name: \"reserve0\",\n                  type: \"uint112\"\n                },\n                {\n                  internalType: \"uint112\",\n                  name: \"reserve1\",\n                  type: \"uint112\"\n                },\n                {\n                  internalType: \"uint32\",\n                  name: \"blockTimestampLast\",\n                  type: \"uint32\"\n                }\n              ],\n              payable: false,\n              stateMutability: \"view\",\n              type: \"function\"\n            }\n          ],\n          functionName: \"getReserves\",\n          chainId\n        })\n      );\n    }, [pairAddresses, chainId])\n  });\n  return useMemo(() => {\n    if (isLoading) {\n      return Array.from({ length: pairAddresses.length }, () => [0 /* LOADING */, null]);\n    }\n    return data?.map(({ result }, i) => {\n      const tokenA = tokens[i][0];\n      const tokenB = tokens[i][1];\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) {\n        return [3 /* INVALID */, null];\n      }\n      if (!result) {\n        return [1 /* NOT_EXISTS */, null];\n      }\n      const [reserve0, reserve1] = result;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n      return [\n        2 /* EXISTS */,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        )\n      ];\n    }) ?? [];\n  }, [data, isLoading, pairAddresses.length, tokens]);\n}\nexport function useV2Pair(tokenA, tokenB) {\n  const inputs = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB]);\n  return useV2Pairs(inputs)[0];\n}\n","\"use strict\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Text } from \"ui/src\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function BaseQuoteFiatAmount({\n  price,\n  base,\n  quote,\n  variant\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const quoteCurrencyAmount = tryParseCurrencyAmount(price?.toFixed(), price?.quoteCurrency);\n  const usdPrice = useUSDCValue(quoteCurrencyAmount);\n  if (!price || !base || !quote) {\n    return null;\n  }\n  return <>\r\n      <Text variant={variant ?? \"body3\"} color=\"$neutral1\">\r\n        {formatPrice({ price, type: NumberType.TokenTx })} {quote?.symbol} = 1 {base?.symbol}\r\n      </Text>{\" \"}\r\n      <Text variant={variant ?? \"body3\"} color=\"$neutral2\">\r\n        (\r\n        {formatCurrencyAmount({\n    amount: usdPrice,\n    type: NumberType.FiatTokenPrice\n  })}\r\n        )\r\n      </Text>\r\n    </>;\n}\n","\"use strict\";\nimport { FeePoolSelectAction, LiquidityEventName } from \"@uniswap/analytics-events\";\nimport { MAX_FEE_TIER_DECIMALS, useAllFeeTierPoolData } from \"components/Liquidity/hooks\";\nimport { calculateTickSpacingFromFeeAmount, isDynamicFeeTier } from \"components/Liquidity/utils\";\nimport { LpIncentivesAprDisplay } from \"components/LpIncentives/LpIncentivesAprDisplay\";\nimport { StyledPercentInput } from \"components/PercentInput\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport ms from \"ms\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { NumericalInputMimic, NumericalInputSymbolContainer } from \"pages/Swap/common/shared\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport styled from \"styled-components\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Button, Flex, ModalCloseIcon, Text } from \"ui/src\";\nimport { BackArrow } from \"ui/src/components/icons/BackArrow\";\nimport { CheckCircleFilled } from \"ui/src/components/icons/CheckCircleFilled\";\nimport { Plus } from \"ui/src/components/icons/Plus\";\nimport { Search } from \"ui/src/components/icons/Search\";\nimport { useDynamicFontSizing } from \"ui/src/hooks/useDynamicFontSizing\";\nimport { AmountInput, numericInputRegex } from \"uniswap/src/components/CurrencyInputPanel/AmountInput\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nconst FeeTierPercentInput = styled(StyledPercentInput)`\n  flex-grow: 0;\n  text-align: end;\n  justify-content: flex-end;\n`;\nconst MAX_CHAR_PIXEL_WIDTH = 46;\nconst MAX_FONT_SIZE = 70;\nconst MIN_FONT_SIZE = 12;\nconst SMALLEST_BIP_AMOUNT = 1e-4;\nexport function FeeTierSearchModal() {\n  const { chainId } = useMultichainContext();\n  const {\n    positionState: { fee: selectedFee, protocolVersion, hook },\n    derivedPositionInfo,\n    setPositionState,\n    feeTierSearchModalOpen,\n    setFeeTierSearchModalOpen,\n    setDynamicFeeTierSpeedbumpData\n  } = useCreatePositionContext();\n  const onClose = () => {\n    setCreateFeeValue(\"\");\n    setCreateModeEnabled(false);\n    setFeeTierSearchModalOpen(false);\n  };\n  const { t } = useTranslation();\n  const trace = useTrace();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [createFeeValue, setCreateFeeValue] = useState(\"\");\n  const [createModeEnabled, setCreateModeEnabled] = useState(false);\n  const { formatNumberOrString, formatPercent } = useLocalizationContext();\n  const [autoDecrementing, setAutoDecrementing] = useState(false);\n  const [autoIncrementing, setAutoIncrementing] = useState(false);\n  const [holdDuration, setHoldDuration] = useState(0);\n  const hiddenObserver = useResizeObserver();\n  const withDynamicFeeTier = Boolean(hook);\n  const isLpIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const { feeTierData, hasExistingFeeTiers } = useAllFeeTierPoolData({\n    chainId,\n    protocolVersion,\n    currencies: derivedPositionInfo.currencies,\n    withDynamicFeeTier,\n    hook: hook ?? ZERO_ADDRESS\n  });\n  const showCreateModal = !withDynamicFeeTier && (createModeEnabled || !hasExistingFeeTiers);\n  useEffect(() => {\n    let interval;\n    let holdTimeout;\n    const baseInterval = 100;\n    let currentInterval = baseInterval;\n    if (autoDecrementing || autoIncrementing) {\n      holdTimeout = setTimeout(() => {\n        setHoldDuration((prev) => prev + 1);\n      }, ms(\"1s\"));\n      if (holdDuration >= 2) {\n        currentInterval = baseInterval / 2;\n      }\n      if (holdDuration >= 4) {\n        currentInterval = baseInterval / 4;\n      }\n      if (holdDuration >= 6) {\n        currentInterval = baseInterval / 8;\n      }\n      interval = setInterval(() => {\n        setCreateFeeValue((prev) => {\n          let newValue = parseFloat(prev);\n          if (autoDecrementing) {\n            if (!prev || prev === \"\") {\n              return \"0\";\n            }\n            newValue -= SMALLEST_BIP_AMOUNT;\n            if (newValue < 0) {\n              return \"0\";\n            }\n          } else if (autoIncrementing) {\n            if (!prev || prev === \"\") {\n              return SMALLEST_BIP_AMOUNT.toString();\n            }\n            newValue += SMALLEST_BIP_AMOUNT;\n            if (newValue > 100) {\n              return \"100\";\n            }\n          }\n          return newValue.toFixed(MAX_FEE_TIER_DECIMALS);\n        });\n      }, currentInterval);\n      return () => {\n        clearInterval(interval);\n        clearTimeout(holdTimeout);\n      };\n    }\n    return () => {\n      clearInterval(interval);\n      clearTimeout(holdTimeout);\n      setHoldDuration(0);\n    };\n  }, [autoDecrementing, autoIncrementing, holdDuration]);\n  const feeHundredthsOfBips = Math.round(parseFloat(createFeeValue) * 1e4);\n  const { onLayout, fontSize, onSetFontSize } = useDynamicFontSizing(MAX_CHAR_PIXEL_WIDTH, MAX_FONT_SIZE, MIN_FONT_SIZE);\n  useEffect(() => {\n    if (createFeeValue) {\n      onSetFontSize(createFeeValue);\n    } else {\n      onSetFontSize(\"0\");\n    }\n  }, [onSetFontSize, createFeeValue]);\n  return <Modal\n    name={ModalName.FeeTierSearch}\n    onClose={onClose}\n    isDismissible\n    isModalOpen={feeTierSearchModalOpen}\n    paddingX=\"$spacing8\"\n    paddingY=\"$spacing16\"\n    maxWidth={404}\n  >\r\n      <Flex width=\"100%\" gap=\"$gap20\">\r\n        <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$spacing4\" width=\"100%\">\r\n          {createModeEnabled && <Flex {...ClickableTamaguiStyle} onPress={() => setCreateModeEnabled(false)}>\r\n              <BackArrow size=\"$icon.24\" />\r\n            </Flex>}\r\n          <Text\n    variant=\"body2\"\n    flexGrow={1}\n    textAlign={showCreateModal || isMobileWeb ? \"center\" : \"left\"}\n    pl={showCreateModal ? 0 : 8}\n  >\r\n            {showCreateModal ? t(\"fee.tier.create\") : t(\"fee.tier.select\")}\r\n          </Text>\r\n          <ModalCloseIcon testId=\"LiquidityModalHeader-close\" onClose={onClose} />\r\n        </Flex>\r\n\r\n        {showCreateModal ? <Flex gap=\"$gap20\">\r\n            <Text variant=\"body2\" color=\"$neutral2\" textAlign=\"center\">\r\n              {t(\"fee.tier.create.description\")}\r\n            </Text>\r\n            <Flex row alignItems=\"center\" gap=\"$spacing28\" px=\"$spacing20\">\r\n              <Flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$roundedFull\"\n    userSelect=\"none\"\n    height=\"$spacing36\"\n    width=\"$spacing36\"\n    onPressIn={() => {\n      setAutoDecrementing(true);\n    }}\n    onPressOut={() => {\n      setAutoDecrementing(false);\n    }}\n    onPress={() => {\n      setCreateFeeValue((prev) => {\n        if (!prev || prev === \"\") {\n          return \"0\";\n        }\n        const newValue = parseFloat(prev) - SMALLEST_BIP_AMOUNT;\n        if (isNaN(newValue) || newValue < 0) {\n          return \"0\";\n        }\n        return newValue.toFixed(MAX_FEE_TIER_DECIMALS);\n      });\n    }}\n    {...ClickableTamaguiStyle}\n  >\r\n                <Text variant=\"heading3\" mb=\"$spacing4\">\r\n                  -\r\n                </Text>\r\n              </Flex>\r\n              <Flex flex={1} justifyContent=\"flex-end\">\r\n                <Flex row maxWidth=\"100%\" centered onLayout={onLayout} minHeight=\"84px\">\r\n                  <FeeTierPercentInput\n    value={createFeeValue}\n    onUserInput={(input) => {\n      if (parseFloat(input) > 100) {\n        setCreateFeeValue(\"100\");\n      } else {\n        setCreateFeeValue(input);\n      }\n    }}\n    placeholder=\"0\"\n    maxDecimals={MAX_FEE_TIER_DECIMALS}\n    $fontSize={fontSize}\n    $width={createFeeValue && hiddenObserver.width ? hiddenObserver.width + 1 : void 0}\n  />\r\n                  <NumericalInputSymbolContainer showPlaceholder={!createFeeValue} $fontSize={fontSize}>\r\n                    %\r\n                  </NumericalInputSymbolContainer>\r\n                  <NumericalInputMimic ref={hiddenObserver.ref} $fontSize={fontSize}>\r\n                    {createFeeValue}\r\n                  </NumericalInputMimic>\r\n                </Flex>\r\n              </Flex>\r\n              <Flex\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    backgroundColor=\"$surface3\"\n    borderRadius=\"$roundedFull\"\n    userSelect=\"none\"\n    height={36}\n    width={36}\n    onPressIn={() => {\n      setAutoIncrementing(true);\n    }}\n    onPressOut={() => {\n      setAutoIncrementing(false);\n    }}\n    onPress={() => {\n      setCreateFeeValue((prev) => {\n        if (!prev || prev === \"\") {\n          return SMALLEST_BIP_AMOUNT.toString();\n        }\n        const newValue = parseFloat(prev) + SMALLEST_BIP_AMOUNT;\n        if (newValue > 100) {\n          return \"100\";\n        }\n        return newValue.toFixed(MAX_FEE_TIER_DECIMALS);\n      });\n    }}\n    {...ClickableTamaguiStyle}\n  >\r\n                <Text variant=\"heading3\">+</Text>\r\n              </Flex>\r\n            </Flex>\r\n            {\n    /* TODO(WEB-4920): search existing fee tiers for a match and optionally show this, with real TVL value */\n  }\r\n            {\n    /* <Text variant=\"body2\" color=\"$neutral2\" textAlign=\"center\">\n      {t('fee.tier.alreadyExists', { formattedTVL: '$289.6K' })}\n    </Text> */\n  }\r\n            {\n    /* TODO(WEB-4920): search existing fee tiers for close matches and optionally similar list */\n  }\r\n            <Flex row>\r\n              <Button\n    variant=\"default\"\n    isDisabled={!createFeeValue || createFeeValue === \"\"}\n    onPress={() => {\n      setPositionState((prevState) => ({\n        ...prevState,\n        fee: {\n          feeAmount: feeHundredthsOfBips,\n          tickSpacing: calculateTickSpacingFromFeeAmount(feeHundredthsOfBips)\n        }\n      }));\n      sendAnalyticsEvent(LiquidityEventName.SELECT_LIQUIDITY_POOL_FEE_TIER, {\n        action: FeePoolSelectAction.SEARCH,\n        fee_tier: feeHundredthsOfBips,\n        is_new_fee_tier: Boolean(feeTierData[feeHundredthsOfBips]),\n        ...trace\n      });\n      onClose();\n    }}\n  >\r\n                {feeTierData[feeHundredthsOfBips] ? t(\"fee.tier.select.existing.button\") : t(\"fee.tier.create.button\")}\r\n              </Button>\r\n            </Flex>\r\n          </Flex> : <>\r\n            <Flex\n    row\n    alignItems=\"center\"\n    py=\"$padding12\"\n    px=\"$padding8\"\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded24\"\n    gap=\"$gap8\"\n    mx=\"$spacing8\"\n  >\r\n              <Search size={20} color=\"$neutral2\" />\r\n              <AmountInput\n    width=\"100%\"\n    autoFocus\n    alignSelf=\"stretch\"\n    backgroundColor=\"$transparent\"\n    borderRadius={0}\n    borderWidth=\"$none\"\n    textAlign=\"left\"\n    value={searchValue}\n    fontFamily=\"$subHeading\"\n    fontSize={18}\n    px=\"$none\"\n    py=\"$none\"\n    placeholder={t(\"fee.tier.search.short\")}\n    placeholderTextColor=\"$neutral3\"\n    onChangeText={(value) => {\n      if (value === \".\") {\n        setSearchValue(\"0.\");\n        return;\n      }\n      if (value.indexOf(\".\") !== -1 && value.indexOf(\".\", value.indexOf(\".\") + 1) !== -1) {\n        return;\n      }\n      if (!numericInputRegex.test(value)) {\n        setSearchValue(value.slice(0, -1));\n        return;\n      }\n      const newValue = parseFloat(value);\n      if (newValue > 100) {\n        setSearchValue(\"100\");\n        return;\n      }\n      setSearchValue(newValue >= 0 ? value : \"\");\n    }}\n  />\r\n            </Flex>\r\n            <Flex\n    width=\"100%\"\n    gap=\"$gap4\"\n    maxHeight={350}\n    overflow=\"scroll\"\n    px=\"$spacing16\"\n    className=\"scrollbar-hidden\"\n  >\r\n              {Object.values(feeTierData).filter((data) => data.formattedFee.includes(searchValue) || data.id && searchValue.includes(data.id)).map((pool) => <Flex\n    row\n    alignItems=\"center\"\n    gap=\"$spacing24\"\n    key={pool.id + pool.formattedFee}\n    py=\"$padding12\"\n    justifyContent=\"space-between\"\n    {...ClickableTamaguiStyle}\n    onPress={() => {\n      if (isDynamicFeeTier(pool.fee)) {\n        setDynamicFeeTierSpeedbumpData({\n          open: true,\n          wishFeeData: pool.fee\n        });\n      } else {\n        setPositionState((prevState) => ({\n          ...prevState,\n          fee: {\n            feeAmount: pool.fee.feeAmount,\n            tickSpacing: pool.fee.tickSpacing\n          }\n        }));\n      }\n      onClose();\n    }}\n  >\r\n                    <Flex>\r\n                      <Flex row alignItems=\"center\">\r\n                        <Text variant=\"subheading2\">{pool.formattedFee}</Text>\r\n                        {isLpIncentivesEnabled && pool.boostedApr !== void 0 && pool.boostedApr > 0 && <LpIncentivesAprDisplay lpIncentiveRewardApr={pool.boostedApr} isSmall ml=\"$spacing8\" />}\r\n                      </Flex>\r\n                      <Flex row gap=\"$gap12\" alignItems=\"center\">\r\n                        <Text variant=\"body3\" color=\"$neutral2\">\r\n                          {pool.totalLiquidityUsd === 0 ? \"0\" : formatNumberOrString({\n    value: pool.totalLiquidityUsd,\n    type: NumberType.FiatTokenStats\n  })}{\" \"}\r\n                          {t(\"common.totalValueLocked\")}\r\n                        </Text>\r\n                        <Text variant=\"body3\" color=\"$neutral2\">\r\n                          {pool.created ? t(\"fee.tier.percent.select\", { percentage: formatPercent(pool.percentage.toFixed()) }) : t(\"common.notCreated.label\")}\r\n                        </Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                    {pool.fee.feeAmount === selectedFee.feeAmount && <CheckCircleFilled size=\"$icon.24\" color=\"$accent3\" />}\r\n                  </Flex>)}\r\n            </Flex>\r\n            <Flex gap=\"$gap12\" alignItems=\"center\" $sm={{ pb: \"$spacing12\" }}>\r\n              <Text variant=\"body3\" color=\"$neutral2\">\r\n                {t(\"fee.tier.missing.description\")}\r\n              </Text>\r\n              <Button\n    emphasis=\"secondary\"\n    size=\"small\"\n    fill={false}\n    icon={<Plus size={16} color=\"$neutral1\" />}\n    onPress={() => setCreateModeEnabled(true)}\n  >\r\n                {t(\"fee.tier.create.button\")}\r\n              </Button>\r\n            </Flex>\r\n          </>}\r\n      </Flex>\r\n    </Modal>;\n}\n","\"use strict\";\nimport { DialogV2 } from \"components/Dialog/DialogV2\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport const DynamicFeeTierSpeedbump = () => {\n  const { setPositionState, dynamicFeeTierSpeedbumpData, setDynamicFeeTierSpeedbumpData } = useCreatePositionContext();\n  const { t } = useTranslation();\n  const handleCancel = () => {\n    setDynamicFeeTierSpeedbumpData({\n      open: false,\n      wishFeeData: dynamicFeeTierSpeedbumpData.wishFeeData\n    });\n  };\n  const handleConfirm = () => {\n    setPositionState((prevState) => ({\n      ...prevState,\n      fee: {\n        feeAmount: dynamicFeeTierSpeedbumpData.wishFeeData.feeAmount,\n        tickSpacing: dynamicFeeTierSpeedbumpData.wishFeeData.tickSpacing\n      }\n    }));\n    setDynamicFeeTierSpeedbumpData({\n      open: false,\n      wishFeeData: dynamicFeeTierSpeedbumpData.wishFeeData\n    });\n  };\n  if (!dynamicFeeTierSpeedbumpData.open) {\n    return null;\n  }\n  return <DialogV2\n    icon={<Flex\n      backgroundColor=\"$surface3\"\n      borderRadius=\"$rounded12\"\n      height=\"$spacing48\"\n      width=\"$spacing48\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      mb=\"$spacing4\"\n    >\r\n          <InfoCircleFilled size=\"$icon.24\" color=\"$neutral\" />\r\n        </Flex>}\n    isOpen={true}\n    title={t(\"fee.tier.dynamic.create\")}\n    subtext={t(\"fee.tier.dynamic.create.info\")}\n    onClose={handleCancel}\n    primaryButtonText={t(\"common.button.continue\")}\n    primaryButtonOnClick={handleConfirm}\n    primaryButtonVariant=\"default\"\n    secondaryButtonText={t(\"common.button.cancel\")}\n    secondaryButtonOnClick={handleCancel}\n    modalName={ModalName.DynamicFeeTierSpeedbump}\n    displayHelpCTA\n  />;\n};\n","\"use strict\";\nimport { FeeTierSearchModal } from \"components/Liquidity/FeeTierSearchModal\";\nimport { useCreatePositionDependentAmountFallback } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport {\n  CreatePositionContext,\n  CreateTxContext,\n  DEFAULT_DEPOSIT_STATE,\n  DEFAULT_PRICE_RANGE_STATE,\n  DepositContext,\n  PriceRangeContext,\n  useCreatePositionContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { DynamicFeeTierSpeedbump } from \"pages/Pool/Positions/create/DynamicFeeTierSpeedbump\";\nimport {\n  useDerivedDepositInfo,\n  useDerivedPositionInfo,\n  useDerivedPriceRangeInfo\n} from \"pages/Pool/Positions/create/hooks\";\nimport {\n  DEFAULT_POSITION_STATE,\n  PositionFlowStep\n} from \"pages/Pool/Positions/create/types\";\nimport {\n  generateAddLiquidityApprovalParams,\n  generateCreateCalldataQueryParams,\n  generateCreatePositionTxRequest\n} from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useAccountMeta, useUniswapContext } from \"uniswap/src/contexts/UniswapContext\";\nimport { useCheckLpApprovalQuery } from \"uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery\";\nimport { useCreateLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery\";\nimport { toSupportedChainId } from \"uniswap/src/features/chains/utils\";\nimport { useTransactionGasFee, useUSDCurrencyAmountOfGasFee } from \"uniswap/src/features/gas/hooks\";\nimport { InterfaceEventNameLocal } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { getErrorMessageToDisplay, parseErrorMessageTitle } from \"uniswap/src/features/transactions/liquidity/utils\";\nimport { useTransactionSettingsContext } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionStepType } from \"uniswap/src/features/transactions/steps/types\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function CreatePositionContextProvider({\n  children,\n  initialState = {}\n}) {\n  const [positionState, setPositionState] = useState({ ...DEFAULT_POSITION_STATE, ...initialState });\n  const [step, setStep] = useState(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  const [currentTransactionStep, setCurrentTransactionStep] = useState();\n  const derivedPositionInfo = useDerivedPositionInfo(positionState);\n  const [feeTierSearchModalOpen, setFeeTierSearchModalOpen] = useState(false);\n  const [dynamicFeeTierSpeedbumpData, setDynamicFeeTierSpeedbumpData] = useState({\n    open: false,\n    wishFeeData: DEFAULT_POSITION_STATE.fee\n  });\n  const reset = useCallback(() => {\n    setPositionState({\n      ...DEFAULT_POSITION_STATE,\n      ...initialState\n    });\n    setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  }, [initialState]);\n  useEffect(() => {\n    if (initialState.currencyInputs) {\n      setPositionState((prevState) => ({\n        ...prevState,\n        currencyInputs: { ...prevState.currencyInputs, ...initialState.currencyInputs }\n      }));\n    }\n  }, [initialState.currencyInputs]);\n  return <CreatePositionContext.Provider\n    value={{\n      reset,\n      step,\n      setStep,\n      positionState,\n      setPositionState,\n      derivedPositionInfo,\n      feeTierSearchModalOpen,\n      currentTransactionStep,\n      setCurrentTransactionStep,\n      setFeeTierSearchModalOpen,\n      dynamicFeeTierSpeedbumpData,\n      setDynamicFeeTierSpeedbumpData\n    }}\n  >\r\n      {children}\r\n      <FeeTierSearchModal />\r\n      <DynamicFeeTierSpeedbump />\r\n    </CreatePositionContext.Provider>;\n}\nexport function PriceRangeContextProvider({ children }) {\n  const { positionState } = useCreatePositionContext();\n  const initialPosition = positionState.initialPosition;\n  const fullRange = initialPosition?.isOutOfRange ? false : true;\n  const [priceRangeState, setPriceRangeState] = useState({ ...DEFAULT_PRICE_RANGE_STATE, fullRange });\n  const reset = useCallback(() => {\n    setPriceRangeState(DEFAULT_PRICE_RANGE_STATE);\n  }, []);\n  useEffect(() => {\n    setPriceRangeState({ ...DEFAULT_PRICE_RANGE_STATE, fullRange });\n  }, [fullRange]);\n  useEffect(() => {\n    setPriceRangeState((prevState) => {\n      if (prevState.fullRange) {\n        return { ...prevState, fullRange, minPrice: \"\", maxPrice: \"\" };\n      } else {\n        return { ...prevState, fullRange: false, minPrice: void 0, maxPrice: void 0 };\n      }\n    });\n  }, [priceRangeState.priceInverted, fullRange]);\n  const derivedPriceRangeInfo = useDerivedPriceRangeInfo(priceRangeState);\n  return <PriceRangeContext.Provider value={{ reset, priceRangeState, setPriceRangeState, derivedPriceRangeInfo }}>\r\n      {children}\r\n    </PriceRangeContext.Provider>;\n}\nexport function DepositContextProvider({ children }) {\n  const [depositState, setDepositState] = useState(DEFAULT_DEPOSIT_STATE);\n  const derivedDepositInfo = useDerivedDepositInfo(depositState);\n  const { derivedPriceRangeInfo } = usePriceRangeContext();\n  useEffect(() => {\n    if (derivedPriceRangeInfo.deposit1Disabled) {\n      setDepositState((prev) => ({ ...prev, exactField: PositionField.TOKEN0 }));\n    } else if (derivedPriceRangeInfo.deposit0Disabled) {\n      setDepositState((prev) => ({ ...prev, exactField: PositionField.TOKEN1 }));\n    }\n  }, [derivedPriceRangeInfo?.deposit0Disabled, derivedPriceRangeInfo?.deposit1Disabled]);\n  const reset = useCallback(() => {\n    setDepositState(DEFAULT_DEPOSIT_STATE);\n  }, []);\n  return <DepositContext.Provider value={{ reset, depositState, setDepositState, derivedDepositInfo }}>\r\n      {children}\r\n    </DepositContext.Provider>;\n}\nexport function CreateTxContextProvider({ children }) {\n  const account = useAccountMeta();\n  const { derivedPositionInfo, positionState, currentTransactionStep } = useCreatePositionContext();\n  const { derivedDepositInfo, depositState } = useDepositContext();\n  const { priceRangeState, derivedPriceRangeInfo } = usePriceRangeContext();\n  const { customDeadline, customSlippageTolerance } = useTransactionSettingsContext();\n  const generatePermitAsTransaction = useUniswapContext().getGeneratePermitAsTransaction?.(\n    derivedPositionInfo.currencies[0]?.chainId\n  );\n  const hasError = Boolean(derivedDepositInfo.error);\n  const [hasCreateErrorResponse, setHasCreateErrorResponse] = useState(false);\n  const addLiquidityApprovalParams = useMemo(() => {\n    return generateAddLiquidityApprovalParams({\n      account,\n      positionState,\n      derivedPositionInfo,\n      derivedDepositInfo,\n      generatePermitAsTransaction\n    });\n  }, [account, derivedDepositInfo, derivedPositionInfo, positionState, generatePermitAsTransaction]);\n  const {\n    data: approvalCalldata,\n    error: approvalError,\n    isLoading: approvalLoading,\n    refetch: approvalRefetch\n  } = useCheckLpApprovalQuery({\n    params: addLiquidityApprovalParams,\n    staleTime: 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: !!addLiquidityApprovalParams && !hasError && !hasCreateErrorResponse\n  });\n  if (approvalError) {\n    const message = parseErrorMessageTitle(approvalError, { defaultTitle: \"unknown CheckLpApprovalQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"CreateTxContextProvider\",\n        function: \"useEffect\"\n      }\n    });\n  }\n  const gasFeeToken0USD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[0]?.chainId,\n    approvalCalldata?.gasFeeToken0Approval\n  );\n  const gasFeeToken1USD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[1]?.chainId,\n    approvalCalldata?.gasFeeToken1Approval\n  );\n  const gasFeeToken0PermitUSD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[0]?.chainId,\n    approvalCalldata?.gasFeeToken0Permit\n  );\n  const gasFeeToken1PermitUSD = useUSDCurrencyAmountOfGasFee(\n    derivedPositionInfo.currencies?.[1]?.chainId,\n    approvalCalldata?.gasFeeToken1Permit\n  );\n  const createCalldataQueryParams = useMemo(() => {\n    return generateCreateCalldataQueryParams({\n      account,\n      approvalCalldata,\n      positionState,\n      derivedPositionInfo,\n      priceRangeState,\n      derivedPriceRangeInfo,\n      derivedDepositInfo,\n      independentField: depositState.exactField,\n      slippageTolerance: customSlippageTolerance\n    });\n  }, [\n    account,\n    approvalCalldata,\n    derivedDepositInfo,\n    derivedPositionInfo,\n    derivedPriceRangeInfo,\n    positionState,\n    priceRangeState,\n    depositState.exactField,\n    customSlippageTolerance\n  ]);\n  const isUserCommittedToCreate = currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransaction || currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransactionAsync;\n  const isQueryEnabled = !isUserCommittedToCreate && !hasError && !approvalLoading && !approvalError && Boolean(approvalCalldata) && Boolean(createCalldataQueryParams);\n  const {\n    data: createCalldata,\n    error: createError,\n    refetch: createRefetch\n  } = useCreateLpPositionCalldataQuery({\n    params: createCalldataQueryParams,\n    deadlineInMinutes: customDeadline,\n    refetchInterval: hasCreateErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled\n  });\n  useEffect(() => {\n    setHasCreateErrorResponse(!!createError);\n  }, [createError, createCalldataQueryParams, addLiquidityApprovalParams]);\n  if (createError) {\n    const message = parseErrorMessageTitle(createError, { defaultTitle: \"unknown CreateLpPositionCalldataQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"CreateTxContextProvider\",\n        function: \"useEffect\"\n      }\n    });\n    sendAnalyticsEvent(InterfaceEventNameLocal.CreatePositionFailed, {\n      message\n    });\n  }\n  const dependentAmountFallback = useCreatePositionDependentAmountFallback(\n    createCalldataQueryParams,\n    isQueryEnabled && Boolean(createError)\n  );\n  const actualGasFee = createCalldata?.gasFee;\n  const needsApprovals = !!(approvalCalldata?.token0Approval || approvalCalldata?.token1Approval || approvalCalldata?.token0Cancel || approvalCalldata?.token1Cancel || approvalCalldata?.token0PermitTransaction || approvalCalldata?.token1PermitTransaction);\n  const { value: calculatedGasFee } = useTransactionGasFee(\n    createCalldata?.create,\n    !!actualGasFee || needsApprovals\n  );\n  const increaseGasFeeUsd = useUSDCurrencyAmountOfGasFee(\n    toSupportedChainId(createCalldata?.create?.chainId) ?? void 0,\n    actualGasFee || calculatedGasFee\n  );\n  const totalGasFee = useMemo(() => {\n    const fees = [gasFeeToken0USD, gasFeeToken1USD, increaseGasFeeUsd, gasFeeToken0PermitUSD, gasFeeToken1PermitUSD];\n    return fees.reduce((total, fee) => {\n      if (fee && total) {\n        return total.add(fee);\n      }\n      return total || fee;\n    });\n  }, [gasFeeToken0USD, gasFeeToken1USD, increaseGasFeeUsd, gasFeeToken0PermitUSD, gasFeeToken1PermitUSD]);\n  const validatedValue = useMemo(() => {\n    const txInfo = generateCreatePositionTxRequest({\n      approvalCalldata,\n      createCalldata,\n      createCalldataQueryParams,\n      derivedPositionInfo,\n      derivedDepositInfo\n    });\n    return {\n      txInfo,\n      gasFeeEstimateUSD: totalGasFee,\n      error: getErrorMessageToDisplay({ approvalError, calldataError: createError }),\n      refetch: approvalError ? approvalRefetch : createError ? createRefetch : void 0,\n      // in some cases there is an error with create but createCalldata still has a cached value\n      dependentAmount: createError && dependentAmountFallback ? dependentAmountFallback : createCalldata?.dependentAmount\n    };\n  }, [\n    approvalCalldata,\n    createCalldata,\n    createCalldataQueryParams,\n    derivedPositionInfo,\n    derivedDepositInfo,\n    approvalError,\n    createError,\n    approvalRefetch,\n    createRefetch,\n    totalGasFee,\n    dependentAmountFallback\n  ]);\n  return <CreateTxContext.Provider value={validatedValue}>{children}</CreateTxContext.Provider>;\n}\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Edit, AnimatedEdit] = createIcon({\n  name: \"Edit\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M16 21.75H6C3.582 21.75 2.25 20.418 2.25 18V7.99998C2.25 5.58198 3.582 4.24998 6 4.24998H9C9.414 4.24998 9.75 4.58598 9.75 4.99998C9.75 5.41398 9.414 5.74998 9 5.74998H6C4.423 5.74998 3.75 6.42298 3.75 7.99998V18C3.75 19.577 4.423 20.25 6 20.25H16C17.577 20.25 18.25 19.577 18.25 18V15C18.25 14.586 18.586 14.25 19 14.25C19.414 14.25 19.75 14.586 19.75 15V18C19.75 20.418 18.418 21.75 16 21.75ZM20.58 5.02997L18.97 3.41999C18.4 2.85999 17.49 2.85997 16.92 3.42997L15.57 4.78998L19.21 8.42997L20.57 7.07996C21.14 6.50996 21.14 5.59997 20.58 5.02997ZM14.51 5.84998L8 12.39V16H11.61L18.15 9.48997L14.51 5.84998Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport CreatingPoolInfo from \"components/CreatingPoolInfo/CreatingPoolInfo\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { getProtocolVersionLabel } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport {\n  useCreatePositionContext,\n  useDepositContext,\n  usePriceRangeContext\n} from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { DisplayCurrentPrice } from \"pages/Pool/Positions/create/RangeSelectionStep\";\nimport { Container } from \"pages/Pool/Positions/create/shared\";\nimport { PositionFlowStep } from \"pages/Pool/Positions/create/types\";\nimport { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Text, useMedia } from \"ui/src\";\nimport { Edit } from \"ui/src/components/icons/Edit\";\nimport { iconSizes } from \"ui/src/theme\";\nconst EditStep = ({ children, onClick, ...rest }) => {\n  const { t } = useTranslation();\n  return <Container row gap=\"$gap24\" justifyContent=\"space-between\" alignItems=\"center\" {...rest}>\r\n      {children}\r\n      <Flex row>\r\n        <Button\n    maxWidth=\"fit-content\"\n    emphasis=\"secondary\"\n    size=\"small\"\n    onPress={onClick}\n    icon={<Edit size=\"$icon.20\" />}\n  >\r\n          {t(\"common.edit.button\")}\r\n        </Button>\r\n      </Flex>\r\n    </Container>;\n};\nexport const EditSelectTokensStep = (props) => {\n  const { setStep, derivedPositionInfo, positionState } = useCreatePositionContext();\n  const { reset: resetPriceRangeState } = usePriceRangeContext();\n  const { reset: resetDepositState } = useDepositContext();\n  const { creatingPoolOrPair, currencies, protocolVersion, defaultInitialPrice } = derivedPositionInfo;\n  const { fee, hook } = positionState;\n  const [token0, token1] = currencies;\n  const versionLabel = getProtocolVersionLabel(protocolVersion);\n  const media = useMedia();\n  const handleEdit = useCallback(() => {\n    resetPriceRangeState();\n    resetDepositState();\n    setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n  }, [resetDepositState, resetPriceRangeState, setStep]);\n  return <EditStep onClick={handleEdit} {...props}>\r\n      <Flex gap=\"$gap12\" width=\"100%\">\r\n        <Flex row gap=\"$gap12\">\r\n          <DoubleCurrencyLogo currencies={[token0, token1]} size={media.md ? iconSizes.icon44 : iconSizes.icon32} />\r\n          <Flex row gap=\"$gap12\" $md={{ flexDirection: \"column\", gap: \"$gap4\" }}>\r\n            <Flex row gap=\"$gap8\" alignItems=\"center\">\r\n              <Text variant=\"subheading1\">{token0?.symbol}</Text>\r\n              <Text variant=\"subheading1\">/</Text>\r\n              <Text variant=\"subheading1\">{token1?.symbol}</Text>\r\n            </Flex>\r\n            <Flex row gap={2} alignItems=\"center\">\r\n              <LiquidityPositionInfoBadges\n    size=\"small\"\n    versionLabel={versionLabel}\n    v4hook={hook}\n    feeTier={fee.feeAmount}\n  />\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n        {creatingPoolOrPair ? <CreatingPoolInfo /> : derivedPositionInfo.protocolVersion === ProtocolVersion.V2 ? <DisplayCurrentPrice price={defaultInitialPrice} /> : null}\r\n      </Flex>\r\n    </EditStep>;\n};\n","\"use strict\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { useTranslation } from \"react-i18next\";\nexport function PoolOutOfSyncError() {\n  const { t } = useTranslation();\n  const {\n    derivedPositionInfo: { isPoolOutOfSync, refetchPoolData }\n  } = useCreatePositionContext();\n  if (!isPoolOutOfSync) {\n    return null;\n  }\n  return <ErrorCallout\n    isWarning\n    errorMessage={true}\n    description={t(\"pool.liquidity.outOfSync.message\")}\n    title={t(\"pool.liquidity.outOfSync\")}\n    action={t(\"pool.refresh.prices\")}\n    onPress={refetchPoolData}\n  />;\n}\n","\"use strict\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nconst RIGHT_AXIS_WIDTH = 64;\nconst CHART_CONTAINER_WIDTH = 452 + RIGHT_AXIS_WIDTH;\nconst LIQUIDITY_CHART_WIDTH = 68;\nconst INTER_CHART_PADDING = 12;\nconst CHART_HEIGHT = 164;\nconst BOTTOM_AXIS_HEIGHT = 28;\nconst loadedPriceChartWidth = CHART_CONTAINER_WIDTH - LIQUIDITY_CHART_WIDTH - INTER_CHART_PADDING - RIGHT_AXIS_WIDTH;\nconst desktopSizes = {\n  rightAxisWidth: RIGHT_AXIS_WIDTH,\n  chartContainerWidth: CHART_CONTAINER_WIDTH,\n  liquidityChartWidth: LIQUIDITY_CHART_WIDTH,\n  interChartPadding: INTER_CHART_PADDING,\n  chartHeight: CHART_HEIGHT,\n  bottomAxisHeight: BOTTOM_AXIS_HEIGHT,\n  loadedPriceChartWidth\n};\nconst mobileSizes = {\n  rightAxisWidth: 0,\n  chartContainerWidth: 290,\n  liquidityChartWidth: 48,\n  interChartPadding: 0,\n  chartHeight: CHART_HEIGHT,\n  bottomAxisHeight: BOTTOM_AXIS_HEIGHT,\n  loadedPriceChartWidth: 290\n};\nexport function useRangeInputSizes(parentWidth) {\n  return isMobileWeb ? {\n    ...mobileSizes,\n    chartContainerWidth: parentWidth ?? mobileSizes.chartContainerWidth,\n    loadedPriceChartWidth: parentWidth ?? mobileSizes.loadedPriceChartWidth\n  } : desktopSizes;\n}\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [SearchMinus, AnimatedSearchMinus] = createIcon({\n  name: \"SearchMinus\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M14.3534 13.6467L11.44 10.7333C12.2066 9.81334 12.6667 8.62667 12.6667 7.33333C12.6667 4.38667 10.28 2 7.33333 2C4.38667 2 2 4.38667 2 7.33333C2 10.28 4.38667 12.6667 7.33333 12.6667C8.62667 12.6667 9.81332 12.2067 10.7333 11.44L13.6466 14.3533C13.7466 14.4533 13.8733 14.5 14 14.5C14.1267 14.5 14.2534 14.4533 14.3534 14.3533C14.5467 14.16 14.5467 13.84 14.3534 13.6467ZM9.33333 7.83333H5.33333C5.06 7.83333 4.83333 7.60667 4.83333 7.33333C4.83333 7.06 5.06 6.83333 5.33333 6.83333H9.33333C9.60667 6.83333 9.83333 7.06 9.83333 7.33333C9.83333 7.60667 9.60667 7.83333 9.33333 7.83333Z\"\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [SearchPlus, AnimatedSearchPlus] = createIcon({\n  name: \"SearchPlus\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M14.3534 13.6467L11.44 10.7333C12.2066 9.81334 12.6667 8.62667 12.6667 7.33333C12.6667 4.38667 10.28 2 7.33333 2C4.38667 2 2 4.38667 2 7.33333C2 10.28 4.38667 12.6667 7.33333 12.6667C8.62667 12.6667 9.81332 12.2067 10.7333 11.44L13.6466 14.3533C13.7466 14.4533 13.8733 14.5 14 14.5C14.1267 14.5 14.2534 14.4533 14.3534 14.3533C14.5467 14.16 14.5467 13.84 14.3534 13.6467ZM9.33333 7.83333H7.83333V9.33333C7.83333 9.60667 7.60667 9.83333 7.33333 9.83333C7.06 9.83333 6.83333 9.60667 6.83333 9.33333V7.83333H5.33333C5.06 7.83333 4.83333 7.60667 4.83333 7.33333C4.83333 7.06 5.06 6.83333 5.33333 6.83333H6.83333V5.33333C6.83333 5.06 7.06 4.83333 7.33333 4.83333C7.60667 4.83333 7.83333 5.06 7.83333 5.33333V6.83333H9.33333C9.60667 6.83333 9.83333 7.06 9.83333 7.33333C9.83333 7.60667 9.60667 7.83333 9.33333 7.83333Z\"\n    fill=\"currentColor\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { ActiveLiquidityChart } from \"components/Charts/ActiveLiquidityChart/ActiveLiquidityChart\";\nimport { Chart } from \"components/Charts/ChartModel\";\nimport { LPPriceChartModel } from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { useRangeInputSizes } from \"components/Charts/LiquidityRangeInput/constants\";\nimport { useDensityChartData } from \"components/Charts/LiquidityRangeInput/hooks\";\nimport { ChartErrorView } from \"components/Charts/LoadingState\";\nimport { getCandlestickPriceBounds } from \"components/Charts/PriceChart/utils\";\nimport { PriceChartType } from \"components/Charts/utils\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport {\n  getCurrencyAddressWithWrap,\n  getCurrencyWithWrap,\n  getSortedCurrenciesTupleWithWrap\n} from \"pages/Pool/Positions/create/utils\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport {\n  Button,\n  Flex,\n  SegmentedControl,\n  Shine,\n  Text,\n  TouchableArea,\n  useSporeColors\n} from \"ui/src\";\nimport { HorizontalDensityChart } from \"ui/src/components/icons/HorizontalDensityChart\";\nimport { LoadingPriceCurve } from \"ui/src/components/icons/LoadingPriceCurve\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { RotateLeft } from \"ui/src/components/icons/RotateLeft\";\nimport { SearchMinus } from \"ui/src/components/icons/SearchMinus\";\nimport { SearchPlus } from \"ui/src/components/icons/SearchPlus\";\nimport { HistoryDuration } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nconst MIN_DATA_POINTS = 5;\nconst PlusMinusButton = ({ children, ...props }) => {\n  return <TouchableArea\n    {...props}\n    animation=\"100ms\"\n    backgroundColor=\"$transparent\"\n    hoverStyle={{ backgroundColor: \"$transparent\", opacity: 0.8 }}\n    pressStyle={{ backgroundColor: \"$surface3\", opacity: 0.8 }}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    p=\"$spacing8\"\n  >\r\n      {children}\r\n    </TouchableArea>;\n};\nexport function LiquidityRangeInput({\n  quoteCurrency,\n  baseCurrency,\n  feeTier,\n  tickSpacing,\n  protocolVersion,\n  poolId,\n  hook,\n  minPrice,\n  maxPrice,\n  setMinPrice,\n  setMaxPrice,\n  disableBrushInteraction = false,\n  setFallbackRangePrices\n}) {\n  const chainInfo = getChainInfo(quoteCurrency.chainId);\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const sortedCurrencies = getSortedCurrenciesTupleWithWrap(quoteCurrency, baseCurrency, protocolVersion);\n  const baseCurrencyMaybeWrapped = getCurrencyWithWrap(baseCurrency, protocolVersion);\n  const isReversed = baseCurrencyMaybeWrapped?.equals(sortedCurrencies[0]) ?? false;\n  const [selectedHistoryDuration, setSelectedHistoryDuration] = useState(HistoryDuration.Month);\n  const priceData = usePoolPriceChartData(\n    // If the Pool doesn't exist, the poolId is undefined and we skip this query.\n    {\n      addressOrId: poolId,\n      chain: chainInfo.backendChain.chain,\n      duration: selectedHistoryDuration,\n      isV4: protocolVersion === ProtocolVersion.V4,\n      isV3: protocolVersion === ProtocolVersion.V3,\n      isV2: false\n    },\n    quoteCurrency,\n    protocolVersion,\n    getCurrencyAddressWithWrap(sortedCurrencies[0], protocolVersion)\n  );\n  const [boundaryPrices, setBoundaryPrices] = useState();\n  const [zoomFactor, setZoomFactor] = useState(1);\n  const { dataMin, dataMax } = useMemo(() => {\n    const { min: dataMin2, max: dataMax2 } = getCandlestickPriceBounds(priceData.entries);\n    return { dataMin: dataMin2, dataMax: dataMax2 };\n  }, [priceData.entries]);\n  const [midPrice, setMidPrice] = useState();\n  const [showDiffIndicators, setShowDiffIndicators] = useState(false);\n  useEffect(() => {\n    if (priceData.entries.length > 0) {\n      setMidPrice(priceData.entries[priceData.entries.length - 1]?.value);\n    }\n  }, [priceData.entries]);\n  const scrollIncrement = (dataMax - dataMin) / 10;\n  const { minVisiblePrice, maxVisiblePrice } = useMemo(() => {\n    if (!midPrice) {\n      return {\n        minVisiblePrice: dataMin,\n        maxVisiblePrice: dataMax\n      };\n    }\n    const mostRecentPrice = priceData.entries[priceData.entries.length - 1]?.value;\n    const maxSpread = Math.max(mostRecentPrice - dataMin, dataMax - mostRecentPrice);\n    const initialRange = 2 * maxSpread;\n    const newRange = initialRange / zoomFactor;\n    return {\n      minVisiblePrice: midPrice - newRange / 2,\n      maxVisiblePrice: midPrice + newRange / 2\n    };\n  }, [dataMax, dataMin, midPrice, priceData.entries, zoomFactor]);\n  const containerRef = useRef(null);\n  const sizes = useRangeInputSizes(containerRef.current?.clientWidth);\n  const priceChartParams = useMemo(() => {\n    return {\n      data: priceData.entries,\n      stale: priceData.dataQuality === DataQuality.STALE,\n      type: PriceChartType.LINE,\n      height: sizes.chartHeight,\n      color: colors.accent1.val,\n      colors,\n      currentPriceLineColor: colors.neutral2.val,\n      showXAxis: true,\n      minVisiblePrice,\n      maxVisiblePrice,\n      setBoundaryPrices,\n      isReversed,\n      disableExtendedTimeScale: !isMobileWeb,\n      allowScrollInteractions: false,\n      priceScaleMargins: {\n        top: 0,\n        bottom: 0\n      }\n    };\n  }, [\n    priceData.entries,\n    priceData.dataQuality,\n    sizes.chartHeight,\n    colors,\n    minVisiblePrice,\n    maxVisiblePrice,\n    isReversed\n  ]);\n  const { formattedData, isLoading: liquidityDataLoading } = useDensityChartData({\n    poolId,\n    currencyA: sortedCurrencies[0],\n    currencyB: sortedCurrencies[1],\n    invertPrices: !isReversed,\n    version: protocolVersion,\n    feeAmount: Number(feeTier),\n    tickSpacing,\n    hooks: hook ?? ZERO_ADDRESS\n  });\n  const sortedFormattedData = useMemo(() => {\n    if (!formattedData) {\n      return void 0;\n    }\n    const uniqueTicksMap = /* @__PURE__ */ new Map();\n    formattedData.forEach((entry) => {\n      uniqueTicksMap.set(entry.tick, entry);\n    });\n    return Array.from(uniqueTicksMap.values()).sort((a, b) => a.price0 - b.price0);\n  }, [formattedData]);\n  const timePeriodOptions = useMemo(() => {\n    const options = [\n      [\n        HistoryDuration.Day,\n        t(\"token.priceExplorer.timeRangeLabel.day\"),\n        t(\"token.priceExplorer.timeRangeLabel.day.verbose\")\n      ],\n      [\n        HistoryDuration.Week,\n        t(\"token.priceExplorer.timeRangeLabel.week\"),\n        t(\"token.priceExplorer.timeRangeLabel.week.verbose\")\n      ],\n      [\n        HistoryDuration.Month,\n        t(\"token.priceExplorer.timeRangeLabel.month\"),\n        t(\"token.priceExplorer.timeRangeLabel.month.verbose\")\n      ],\n      [\n        HistoryDuration.Year,\n        t(\"token.priceExplorer.timeRangeLabel.year\"),\n        t(\"token.priceExplorer.timeRangeLabel.year.verbose\")\n      ],\n      [HistoryDuration.Max, t(\"token.priceExplorer.timeRangeLabel.all\")]\n    ].map((timePeriod) => ({\n      value: timePeriod[0],\n      display: <Text variant=\"buttonLabel3\">{timePeriod[1]}</Text>,\n      verboseDisplay: <Text variant=\"buttonLabel3\">{timePeriod[2] ?? timePeriod[1]}</Text>\n    }));\n    return {\n      options,\n      selected: selectedHistoryDuration\n    };\n  }, [selectedHistoryDuration, t]);\n  const [createDropdownOpen, setCreateDropdownOpen] = useState(false);\n  const showChartErrorView = !priceData.loading && priceData.entries.length < MIN_DATA_POINTS || !liquidityDataLoading && !sortedFormattedData || !liquidityDataLoading && sortedFormattedData && sortedFormattedData.length < MIN_DATA_POINTS;\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container && !disableBrushInteraction) {\n      let lastCall = 0;\n      const throttleDelayMs = 50;\n      const listener = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const now = Date.now();\n        if (now - lastCall >= throttleDelayMs) {\n          lastCall = now;\n          if (event.deltaY < 0) {\n            setMidPrice((prevMidPrice) => prevMidPrice ? prevMidPrice + scrollIncrement : void 0);\n          } else if (event.deltaY > 0 && minVisiblePrice > 0) {\n            setMidPrice((prevMidPrice) => prevMidPrice ? prevMidPrice - scrollIncrement : void 0);\n          }\n        }\n      };\n      container.addEventListener(\"wheel\", listener);\n      return () => {\n        container.removeEventListener(\"wheel\", listener);\n      };\n    }\n    return void 0;\n  }, [disableBrushInteraction, midPrice, minVisiblePrice, scrollIncrement]);\n  useEffect(() => {\n    if (showChartErrorView && !disableBrushInteraction && minPrice === void 0 && maxPrice === void 0) {\n      setFallbackRangePrices();\n    }\n    return void 0;\n  }, [showChartErrorView, disableBrushInteraction, minPrice, maxPrice, setFallbackRangePrices]);\n  return <Flex\n    gap=\"$gap8\"\n    overflow=\"hidden\"\n    ref={containerRef}\n    onMouseEnter={() => {\n      setShowDiffIndicators(true);\n    }}\n    onMouseLeave={() => {\n      setShowDiffIndicators(false);\n    }}\n  >\r\n      <Flex height={sizes.chartHeight + sizes.bottomAxisHeight} width={sizes.chartContainerWidth} overflow=\"hidden\">\r\n        {showChartErrorView && <ChartErrorView>\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {t(\"position.setRange.inputsBelow\")}\r\n            </Text>\r\n          </ChartErrorView>}\r\n        <Flex\n    width={showChartErrorView ? sizes.chartContainerWidth : sizes.loadedPriceChartWidth}\n    height={sizes.chartHeight + sizes.bottomAxisHeight}\n    overflow=\"hidden\"\n    zIndex={1}\n  >\r\n          {(priceData.loading || showChartErrorView) && (!priceData.entries || priceData.entries.length === 0) && <Shine height={sizes.chartHeight} disabled={showChartErrorView} zIndex={0}>\r\n              <LoadingPriceCurve\n    size={showChartErrorView ? sizes.chartContainerWidth : sizes.loadedPriceChartWidth}\n    color=\"$neutral2\"\n  />\r\n            </Shine>}\r\n          {showChartErrorView ? null : <Chart\n    Model={LPPriceChartModel}\n    params={priceChartParams}\n    height={sizes.chartHeight + sizes.bottomAxisHeight}\n  />}\r\n        </Flex>\r\n        <Flex\n    width={sizes.chartContainerWidth}\n    height={sizes.chartHeight}\n    position=\"absolute\"\n    right={0}\n    top={0}\n    pointerEvents=\"none\"\n    zIndex={2}\n  >\r\n          {(liquidityDataLoading || priceData.loading) && <Shine\n    position=\"absolute\"\n    right={sizes.rightAxisWidth}\n    top={0}\n    overflow=\"hidden\"\n    justifyContent=\"flex-end\"\n    height={sizes.chartHeight}\n    width={sizes.chartHeight}\n  >\r\n              <HorizontalDensityChart color=\"$neutral2\" size={sizes.chartHeight} />\r\n            </Shine>}\r\n          {sortedFormattedData && !liquidityDataLoading && !priceData.loading && boundaryPrices && !showChartErrorView && <ActiveLiquidityChart\n    data={{\n      series: sortedFormattedData,\n      current: priceData.entries[priceData.entries.length - 1]?.value,\n      min: boundaryPrices[0],\n      max: boundaryPrices[1]\n    }}\n    disableBrushInteraction={disableBrushInteraction}\n    showDiffIndicators={showDiffIndicators}\n    brushDomain={minPrice && maxPrice ? [minPrice, maxPrice] : void 0}\n    dimensions={{\n      width: sizes.chartContainerWidth,\n      height: sizes.chartHeight,\n      contentWidth: sizes.liquidityChartWidth,\n      axisLabelPaneWidth: sizes.rightAxisWidth\n    }}\n    onBrushDomainChange={function(domain, mode) {\n      if (domain[0] < 0) {\n        return;\n      }\n      const rejectAutoRangeSuggestion = minPrice !== void 0 && maxPrice !== void 0 && minPrice >= 0 && maxPrice >= 0;\n      if (!mode && rejectAutoRangeSuggestion) {\n        return;\n      }\n      setMinPrice(domain[0]);\n      setMaxPrice(domain[1]);\n    }}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    isMobile={isMobileWeb}\n  />}\r\n        </Flex>\r\n      </Flex>\r\n      <Flex\n    row\n    alignItems=\"center\"\n    gap=\"$gap8\"\n    $lg={{ justifyContent: \"space-between\" }}\n    $sm={{ row: false, alignItems: \"flex-start\" }}\n  >\r\n        <Flex row alignItems=\"center\" gap=\"$gap8\" $sm={{ row: false, alignItems: \"flex-start\" }}>\r\n          {isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth=\"$spacing1\"\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >\r\n                  {timePeriodOptions.options.find((p) => p.value === timePeriodOptions.selected)?.display}\r\n                  <RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" />\r\n                </Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{ width: 160 }}\n    hideChevron\n    isOpen={createDropdownOpen}\n    adaptToSheet\n    toggleOpen={() => {\n      setCreateDropdownOpen((prev) => !prev);\n    }}\n  >\r\n              {timePeriodOptions.options.map((p) => <Flex\n    key={p.value}\n    width=\"100%\"\n    height={32}\n    row\n    alignItems=\"center\"\n    justifyContent=\"flex-start\"\n    p=\"$padding12\"\n    onPress={() => {\n      setSelectedHistoryDuration(p.value);\n      setZoomFactor(1);\n      setBoundaryPrices(void 0);\n    }}\n  >\r\n                  {p.verboseDisplay}\r\n                </Flex>)}\r\n            </DropdownSelector> : <SegmentedControl\n    options={timePeriodOptions.options}\n    selectedOption={timePeriodOptions.selected}\n    onSelectOption={(option) => {\n      setSelectedHistoryDuration(option);\n      setZoomFactor(1);\n      setBoundaryPrices(void 0);\n    }}\n  />}\r\n          <Flex row centered borderRadius=\"$roundedFull\">\r\n            <PlusMinusButton\n    borderTopLeftRadius=\"$roundedFull\"\n    borderBottomLeftRadius=\"$roundedFull\"\n    onPress={() => {\n      setZoomFactor((prevZoomFactor) => prevZoomFactor * 1.2);\n    }}\n  >\r\n              <SearchPlus size={16} color=\"$neutral1\" />\r\n            </PlusMinusButton>\r\n            <PlusMinusButton\n    borderTopRightRadius=\"$roundedFull\"\n    borderBottomRightRadius=\"$roundedFull\"\n    onPress={() => {\n      setZoomFactor((prevZoomFactor) => prevZoomFactor / 1.2);\n    }}\n  >\r\n              <SearchMinus size={16} color=\"$neutral1\" />\r\n            </PlusMinusButton>\r\n          </Flex>\r\n        </Flex>\r\n        <Button\n    emphasis=\"tertiary\"\n    size=\"small\"\n    fill={false}\n    backgroundColor=\"$transparent\"\n    onPress={() => {\n      setSelectedHistoryDuration(HistoryDuration.Month);\n      setZoomFactor(1);\n      setMinPrice(void 0);\n      setMaxPrice(void 0);\n      setMidPrice(priceData.entries[priceData.entries.length - 1]?.value);\n    }}\n    icon={isMobileWeb ? <RotateLeft /> : void 0}\n  >\r\n          {isMobileWeb ? null : t(\"common.button.reset\")}\r\n        </Button>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { PositionStatus } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport function PositionOutOfRangeError({ positionInfo }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  if (positionInfo?.status !== PositionStatus.OUT_OF_RANGE) {\n    return null;\n  }\n  return <ErrorCallout\n    isWarning\n    errorMessage={true}\n    description={t(\"position.provide.outOfRange.description\")}\n    title={t(\"position.provide.outOfRange.title\")}\n    action={t(\"position.provide.outOfRange.closePosition\")}\n    onPress={() => dispatch(setOpenModal({ name: ModalName.RemoveLiquidity, initialState: positionInfo }))}\n    pressIcon={null}\n  />;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { useMemo } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nexport function useTokenControlOptions(currencies, size) {\n  const [token0, token1] = currencies;\n  const controlOptions = useMemo(() => {\n    return [\n      {\n        value: token0?.symbol ?? \"\",\n        display: <Flex row alignItems=\"center\" gap={size === \"small\" ? \"$spacing6\" : \"$gap8\"}>\r\n            {token0 && <PortfolioLogo chainId={token0.chainId} currencies={[token0]} size={size === \"small\" ? 16 : 20} />}\r\n            <Text variant=\"buttonLabel3\">{token0?.symbol}</Text>\r\n          </Flex>\n      },\n      {\n        value: token1?.symbol ?? \"\",\n        display: <Flex row alignItems=\"center\" gap={size === \"small\" ? \"$spacing6\" : \"$gap8\"}>\r\n            {token1 && <PortfolioLogo chainId={token1.chainId} currencies={[token1]} size={size === \"small\" ? 16 : 20} />}\r\n            <Text variant=\"buttonLabel3\">{token1?.symbol}</Text>\r\n          </Flex>\n      }\n    ];\n  }, [token0, token1, size]);\n  return controlOptions;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { LiquidityRangeInput } from \"components/Charts/LiquidityRangeInput/LiquidityRangeInput\";\nimport { BaseQuoteFiatAmount } from \"pages/Pool/Positions/create/BaseQuoteFiatAmount\";\nimport { useCreatePositionContext, usePriceRangeContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { PoolOutOfSyncError } from \"pages/Pool/Positions/create/PoolOutOfSyncError\";\nimport { PositionOutOfRangeError } from \"pages/Pool/Positions/create/PositionOutOfRangeError\";\nimport { useTokenControlOptions } from \"pages/Pool/Positions/create/hooks/useTokenControlOptions\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Minus, Plus } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useRangeHopCallbacks } from \"state/mint/v3/hooks\";\nimport { tryParsePrice } from \"state/mint/v3/utils\";\nimport { AnimatePresence, Button, Flex, SegmentedControl, Text, TouchableArea, useMedia, useSporeColors } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { fonts, zIndexes } from \"ui/src/theme\";\nimport { AmountInput, numericInputRegex } from \"uniswap/src/components/CurrencyInputPanel/AmountInput\";\nimport { WarningSeverity } from \"uniswap/src/components/modals/WarningModal/types\";\nimport { TestID } from \"uniswap/src/test/fixtures/testIDs\";\nvar RangeSelectionInput = /* @__PURE__ */ ((RangeSelectionInput2) => {\n  RangeSelectionInput2[RangeSelectionInput2[\"MIN\"] = 0] = \"MIN\";\n  RangeSelectionInput2[RangeSelectionInput2[\"MAX\"] = 1] = \"MAX\";\n  return RangeSelectionInput2;\n})(RangeSelectionInput || {});\nvar RangeSelection = /* @__PURE__ */ ((RangeSelection2) => {\n  RangeSelection2[\"FULL\"] = \"FULL\";\n  RangeSelection2[\"CUSTOM\"] = \"CUSTOM\";\n  return RangeSelection2;\n})(RangeSelection || {});\nexport function DisplayCurrentPrice({ price, isLoading }) {\n  return <Flex gap=\"$gap4\" row alignItems=\"center\" $md={{ row: false, alignItems: \"flex-start\" }}>\r\n      {isLoading ? <Text variant=\"body3\" color=\"$neutral2\">\r\n          <Trans i18nKey=\"common.marketPrice.fetching\" />\r\n        </Text> : price ? <>\r\n          <Text variant=\"body3\" color=\"$neutral2\">\r\n            <Trans i18nKey=\"common.marketPrice.label\" />\r\n          </Text>\r\n          <BaseQuoteFiatAmount price={price} base={price?.baseCurrency} quote={price?.quoteCurrency} />\r\n        </> : <Flex row alignItems=\"center\" gap=\"$spacing4\">\r\n          <AlertTriangleFilled size={16} color=\"$neutral2\" />\r\n          <Text variant=\"body3\" color=\"$neutral2\">\r\n            <Trans i18nKey=\"common.marketPrice.unavailable\" />\r\n          </Text>\r\n        </Flex>}\r\n    </Flex>;\n}\nconst InitialPriceInput = () => {\n  const [otherCurrencyPrice, setOtherCurrencyPrice] = useState();\n  const media = useMedia();\n  const colors = useSporeColors();\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const { derivedPriceRangeInfo } = usePriceRangeContext();\n  const {\n    priceRangeState: { initialPrice, priceInverted, isInitialPriceDirty },\n    setPriceRangeState\n  } = usePriceRangeContext();\n  const { defaultInitialPrice, isDefaultInitialPriceLoading } = derivedPositionInfo;\n  const { priceDifference } = derivedPriceRangeInfo;\n  const formattedDefaultInitialPrice = useMemo(() => {\n    if (!defaultInitialPrice) {\n      return \"\";\n    }\n    return priceInverted ? defaultInitialPrice?.invert().toSignificant(8) : defaultInitialPrice?.toSignificant(8);\n  }, [defaultInitialPrice, priceInverted]);\n  useEffect(() => {\n    if (formattedDefaultInitialPrice && !isInitialPriceDirty) {\n      setPriceRangeState((prevState) => ({\n        ...prevState,\n        initialPrice: formattedDefaultInitialPrice\n      }));\n    }\n  }, [formattedDefaultInitialPrice, isInitialPriceDirty, setPriceRangeState]);\n  useEffect(() => {\n    try {\n      const base = priceInverted ? derivedPositionInfo.currencies[1] : derivedPositionInfo.currencies[0];\n      const quote = priceInverted ? derivedPositionInfo.currencies[0] : derivedPositionInfo.currencies[1];\n      if (initialPrice && base && quote) {\n        const parsedPrice = tryParsePrice(base, quote, initialPrice);\n        setOtherCurrencyPrice(parsedPrice?.invert().toSignificant(8));\n      }\n    } catch (error) {\n      setOtherCurrencyPrice(void 0);\n    }\n  }, [derivedPositionInfo.currencies, initialPrice, priceInverted]);\n  const [token0, token1] = derivedPositionInfo.currencies;\n  const [initialPriceBaseToken, initialPriceQuoteToken] = getInvertedTuple(\n    derivedPositionInfo.currencies,\n    priceInverted\n  );\n  const controlOptions = useTokenControlOptions([token0, token1], \"large\");\n  const handleSelectInitialPriceBaseToken = useCallback(\n    (option) => {\n      if (option === token0?.symbol) {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          priceInverted: false,\n          initialPrice: otherCurrencyPrice ?? \"\"\n        }));\n      } else {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          priceInverted: true,\n          initialPrice: otherCurrencyPrice ?? \"\"\n        }));\n      }\n    },\n    [token0?.symbol, otherCurrencyPrice, setPriceRangeState]\n  );\n  const handleUseMarketPrice = useCallback(() => {\n    setPriceRangeState((prevState) => ({\n      ...prevState,\n      initialPrice: formattedDefaultInitialPrice\n    }));\n  }, [formattedDefaultInitialPrice, setPriceRangeState]);\n  return <Flex gap=\"$spacing12\">\r\n      <Flex row justifyContent=\"space-between\">\r\n        <Flex shrink gap=\"$spacing4\">\r\n          <Text flex={1} variant=\"subheading1\">\r\n            <Trans i18nKey=\"position.initialPrice.set\" />\r\n          </Text>\r\n          <Text variant=\"body3\" color=\"$neutral2\">\r\n            <Trans i18nKey=\"position.initialPrice.info\" />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Flex gap=\"$spacing4\">\r\n        <Flex\n    backgroundColor=\"$surface2\"\n    p=\"$spacing16\"\n    gap=\"$spacing6\"\n    borderTopLeftRadius=\"$rounded16\"\n    borderTopRightRadius=\"$rounded16\"\n  >\r\n          <Flex row alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              <Trans i18nKey=\"position.initialPrice\" />\r\n            </Text>\r\n            {media.sm && <SegmentedControl\n    options={controlOptions}\n    selectedOption={initialPriceBaseToken?.symbol ?? \"\"}\n    onSelectOption={handleSelectInitialPriceBaseToken}\n    size=\"smallThumbnail\"\n  />}\r\n          </Flex>\r\n          <Flex row alignItems=\"center\" justifyContent=\"space-between\">\r\n            <AmountInput\n    backgroundColor=\"$transparent\"\n    borderWidth=\"$none\"\n    borderRadius=\"$none\"\n    fontFamily=\"$heading\"\n    color={priceDifference?.warning === WarningSeverity.Medium ? \"$statusWarning\" : priceDifference?.warning === WarningSeverity.High ? \"$statusCritical\" : \"$neutral1\"}\n    fontSize={fonts.heading2.fontSize}\n    fontWeight={fonts.heading2.fontWeight}\n    lineHeight={fonts.heading2.lineHeight}\n    overflow=\"visible\"\n    placeholder=\"0\"\n    placeholderTextColor={colors.neutral3.val}\n    px=\"$none\"\n    py=\"$none\"\n    value={initialPrice}\n    onChangeText={(text) => setPriceRangeState((prev) => ({\n      ...prev,\n      initialPrice: text,\n      isInitialPriceDirty: true\n    }))}\n  />\r\n            {!media.sm && <SegmentedControl\n    options={controlOptions}\n    selectedOption={initialPriceBaseToken?.symbol ?? \"\"}\n    onSelectOption={handleSelectInitialPriceBaseToken}\n    size=\"largeThumbnail\"\n  />}\r\n          </Flex>\r\n          <Flex row $sm={{ row: false, alignItems: \"flex-start\" }} alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text variant=\"body2\" color=\"$neutral2\" $md={{ variant: \"body3\" }} flexShrink={0}>\r\n              {initialPriceQuoteToken?.symbol} = 1 {initialPriceBaseToken?.symbol}\r\n            </Text>\r\n            <AnimatePresence>\r\n              {priceDifference?.warning && <Flex\n    row\n    alignItems=\"center\"\n    gap=\"$spacing4\"\n    animation=\"fast\"\n    exitStyle={{ opacity: 0 }}\n    enterStyle={{ opacity: 0 }}\n  >\r\n                  <AlertTriangleFilled\n    size={16}\n    color={priceDifference.warning === WarningSeverity.Medium ? \"$statusWarning\" : \"$statusCritical\"}\n  />\r\n\r\n                  <Text\n    variant=\"body3\"\n    color={priceDifference.warning === WarningSeverity.Medium ? \"$statusWarning\" : \"$statusCritical\"}\n  >\r\n                    {priceDifference.value < 0 ? <Trans\n    i18nKey=\"position.initialPrice.difference.negative\"\n    values={{ value: priceDifference.absoluteValue }}\n  /> : <Trans\n    i18nKey=\"position.initialPrice.difference.positive\"\n    values={{ value: priceDifference.absoluteValue }}\n  />}\r\n                  </Text>\r\n                </Flex>}\r\n            </AnimatePresence>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\n    row\n    backgroundColor=\"$surface2\"\n    py=\"$spacing12\"\n    px=\"$spacing16\"\n    borderBottomLeftRadius=\"$rounded16\"\n    borderBottomRightRadius=\"$rounded16\"\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\r\n          <DisplayCurrentPrice\n    isLoading={isDefaultInitialPriceLoading}\n    price={priceInverted ? defaultInitialPrice?.invert() : defaultInitialPrice}\n  />\r\n          {defaultInitialPrice && <Flex>\r\n              <Button\n    isDisabled={priceDifference?.absoluteValue ? priceDifference.absoluteValue === 0 : !!initialPrice}\n    variant=\"default\"\n    emphasis=\"secondary\"\n    size=\"xxsmall\"\n    py=\"$spacing12\"\n    px=\"$spacing8\"\n    onPress={handleUseMarketPrice}\n  >\r\n                <Trans i18nKey=\"position.initialPrice.useMarketPrice\" />\r\n              </Button>\r\n            </Flex>}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>;\n};\nfunction RangeControl({ value, active }) {\n  return <Text color={active ? \"$neutral1\" : \"$neutral2\"} userSelect=\"none\" variant=\"buttonLabel3\">\r\n      {value}\r\n    </Text>;\n}\nfunction numericInputEnforcerWithInfinity(value) {\n  return !value || numericInputRegex.test(value) || value === \"\\u221E\";\n}\nfunction RangeInput({\n  value,\n  input,\n  decrement,\n  increment,\n  showIncrementButtons = true,\n  isInvalid = false\n}) {\n  const colors = useSporeColors();\n  const { t } = useTranslation();\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const {\n    priceRangeState: { priceInverted },\n    setPriceRangeState\n  } = usePriceRangeContext();\n  const [typedValue, setTypedValue] = useState(\"\");\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(derivedPositionInfo.currencies, priceInverted);\n  const [displayUserTypedValue, setDisplayUserTypedValue] = useState(false);\n  const handlePriceRangeInput = useCallback(\n    (input2, value2) => {\n      if (input2 === 0 /* MIN */) {\n        setPriceRangeState((prev) => ({ ...prev, minPrice: value2, fullRange: false }));\n      } else {\n        setPriceRangeState((prev) => ({ ...prev, maxPrice: value2, fullRange: false }));\n      }\n      setTypedValue(value2);\n      setDisplayUserTypedValue(true);\n    },\n    [setPriceRangeState]\n  );\n  const handleDecrement = useCallback(() => {\n    handlePriceRangeInput(input, decrement());\n    setDisplayUserTypedValue(false);\n  }, [decrement, handlePriceRangeInput, input]);\n  const handleIncrement = useCallback(() => {\n    handlePriceRangeInput(input, increment());\n    setDisplayUserTypedValue(false);\n  }, [handlePriceRangeInput, increment, input]);\n  return <Flex\n    row\n    flex={1}\n    position=\"relative\"\n    backgroundColor=\"$surface2\"\n    borderTopLeftRadius={derivedPositionInfo.creatingPoolOrPair && input === 0 /* MIN */ ? \"$rounded20\" : \"$none\"}\n    borderTopRightRadius={derivedPositionInfo.creatingPoolOrPair && input === 1 /* MAX */ ? \"$rounded20\" : \"$none\"}\n    borderBottomRightRadius={input === 0 /* MIN */ ? \"$none\" : \"$rounded20\"}\n    borderBottomLeftRadius={input === 0 /* MIN */ ? \"$rounded20\" : \"$none\"}\n    $lg={{\n      borderBottomRightRadius: input === 1 /* MAX */ ? \"$rounded20\" : \"$none\",\n      borderBottomLeftRadius: input === 1 /* MAX */ ? \"$rounded20\" : \"$none\"\n    }}\n    p=\"$spacing16\"\n    justifyContent=\"space-between\"\n    overflow=\"hidden\"\n  >\r\n      <Flex gap=\"$gap4\" overflow=\"hidden\" flex={1}>\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {input === 0 /* MIN */ ? t(`pool.minPrice`) : t(`pool.maxPrice`)}\r\n        </Text>\r\n        <AmountInput\n    backgroundColor=\"$transparent\"\n    borderWidth=\"$none\"\n    borderRadius=\"$none\"\n    color={isInvalid ? \"$statusCritical\" : \"$neutral1\"}\n    fontFamily=\"$heading\"\n    fontSize={fonts.heading3.fontSize}\n    fontWeight={fonts.heading3.fontWeight}\n    maxDecimals={quoteCurrency?.decimals ?? 18}\n    overflow=\"visible\"\n    placeholder=\"0\"\n    placeholderTextColor={colors.neutral3.val}\n    px=\"$none\"\n    py=\"$none\"\n    value={displayUserTypedValue ? typedValue : value}\n    onChangeText={(text) => handlePriceRangeInput(input, text)}\n    onBlur={() => setDisplayUserTypedValue(false)}\n    inputEnforcer={numericInputEnforcerWithInfinity}\n    $md={{\n      fontSize: fonts.subheading2.fontSize,\n      fontWeight: fonts.subheading2.fontWeight\n    }}\n  />\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {quoteCurrency?.symbol} = 1 {baseCurrency?.symbol}\r\n        </Text>\r\n      </Flex>\r\n      {showIncrementButtons && <Flex gap={10}>\r\n          <TouchableArea\n    testID={`${TestID.RangeInputIncrement}-${input}`}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    onPress={handleIncrement}\n    borderRadius=\"$roundedFull\"\n    p={8}\n    backgroundColor=\"$surface3\"\n    hoverable\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\r\n            <Plus size={16} />\r\n          </TouchableArea>\r\n          <TouchableArea\n    testID={`${TestID.RangeInputDecrement}-${input}`}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    onPress={handleDecrement}\n    borderRadius=\"$roundedFull\"\n    p={8}\n    backgroundColor=\"$surface3\"\n    hoverable\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\r\n            <Minus size={16} />\r\n          </TouchableArea>\r\n        </Flex>}\r\n    </Flex>;\n}\nexport const SelectPriceRangeStep = ({\n  positionInfo,\n  onContinue,\n  onDisableContinue\n}) => {\n  const { t } = useTranslation();\n  const {\n    positionState: { fee, hook, initialPosition },\n    derivedPositionInfo\n  } = useCreatePositionContext();\n  const { priceRangeState, setPriceRangeState, derivedPriceRangeInfo } = usePriceRangeContext();\n  const [token0, token1] = derivedPositionInfo.currencies;\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(derivedPositionInfo.currencies, priceRangeState.priceInverted);\n  const creatingPoolOrPair = derivedPositionInfo.creatingPoolOrPair;\n  const controlOptions = useTokenControlOptions([token0, token1], \"small\");\n  const handleSelectToken = useCallback(\n    (option) => {\n      if (option === token0?.symbol) {\n        setPriceRangeState((prevState) => ({ ...prevState, priceInverted: false }));\n      } else {\n        setPriceRangeState((prevState) => ({ ...prevState, priceInverted: true }));\n      }\n    },\n    [token0?.symbol, setPriceRangeState]\n  );\n  const { price } = derivedPriceRangeInfo;\n  const { ticks, isSorted, prices, ticksAtLimit, invalidPrice, invalidRange, invertPrice } = useMemo(() => {\n    if (derivedPriceRangeInfo.protocolVersion === ProtocolVersion.V2) {\n      return {\n        ticks: void 0,\n        isSorted: false,\n        prices: void 0,\n        pricesAtTicks: void 0,\n        ticksAtLimit: [false, false],\n        invalidPrice: false,\n        invalidRange: false,\n        invertPrice: false\n      };\n    }\n    return derivedPriceRangeInfo;\n  }, [derivedPriceRangeInfo]);\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    derivedPositionInfo.protocolVersion === ProtocolVersion.V3 ? {\n      baseCurrency,\n      quoteCurrency,\n      feeAmount: fee.feeAmount,\n      tickLower: ticks?.[0],\n      tickUpper: ticks?.[1],\n      pool: derivedPositionInfo.pool\n    } : derivedPositionInfo.protocolVersion === ProtocolVersion.V4 ? {\n      baseCurrency,\n      quoteCurrency,\n      fee,\n      tickLower: ticks?.[0],\n      tickUpper: ticks?.[1],\n      pool: derivedPositionInfo.pool\n    } : {\n      baseCurrency: void 0,\n      quoteCurrency: void 0,\n      feeAmount: void 0,\n      tickLower: void 0,\n      tickUpper: void 0,\n      pool: void 0\n    }\n  );\n  const handleSelectRange = useCallback(\n    (option) => {\n      if (initialPosition?.isOutOfRange) {\n        return;\n      }\n      if (option === \"FULL\" /* FULL */) {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          minPrice: \"\",\n          maxPrice: \"\",\n          fullRange: true\n        }));\n      } else {\n        setPriceRangeState((prevState) => ({\n          ...prevState,\n          minPrice: void 0,\n          maxPrice: void 0,\n          fullRange: false\n        }));\n      }\n    },\n    [initialPosition?.isOutOfRange, setPriceRangeState]\n  );\n  const segmentedControlRangeOptions = [\n    {\n      display: <RangeControl value={t(`common.fullRange`)} active={priceRangeState.fullRange} />,\n      value: \"FULL\" /* FULL */\n    },\n    {\n      display: <RangeControl value={t(`common.customRange`)} active={!priceRangeState.fullRange} />,\n      value: \"CUSTOM\" /* CUSTOM */\n    }\n  ];\n  const rangeSelectionInputValues = useMemo(() => {\n    const leftPrice = isSorted ? prices?.[0] : prices?.[1]?.invert();\n    const rightPrice = isSorted ? prices?.[1] : prices?.[0]?.invert();\n    if (initialPosition?.isOutOfRange) {\n      return [leftPrice?.toSignificant(8) ?? \"\", rightPrice?.toSignificant(8) ?? \"\"];\n    }\n    return [\n      ticksAtLimit[isSorted ? 0 : 1] ? \"0\" : leftPrice?.toSignificant(8) ?? \"\",\n      ticksAtLimit[isSorted ? 1 : 0] ? \"\\u221E\" : rightPrice?.toSignificant(8) ?? \"\"\n    ];\n  }, [isSorted, prices, ticksAtLimit, initialPosition]);\n  const handleChartRangeInput = useCallback(\n    (input, value) => {\n      if (priceRangeState.fullRange || initialPosition?.isOutOfRange) {\n        return;\n      } else if (input === 0 /* MIN */) {\n        setPriceRangeState((prev) => ({ ...prev, minPrice: value, fullRange: false }));\n      } else {\n        setPriceRangeState((prev) => ({ ...prev, maxPrice: value, fullRange: false }));\n      }\n    },\n    [priceRangeState.fullRange, initialPosition?.isOutOfRange, setPriceRangeState]\n  );\n  const { rangeInputMinPrice, rangeInputMaxPrice } = useMemo(() => {\n    if (priceRangeState.fullRange && !initialPosition?.isOutOfRange) {\n      return {\n        rangeInputMinPrice: void 0,\n        rangeInputMaxPrice: void 0\n      };\n    }\n    if (invertPrice) {\n      return {\n        rangeInputMinPrice: prices?.[1] ? parseFloat(prices?.[1].invert().toSignificant(8)) : void 0,\n        rangeInputMaxPrice: prices?.[0] ? parseFloat(prices?.[0].invert().toSignificant(8)) : void 0\n      };\n    }\n    return {\n      rangeInputMinPrice: prices?.[0] ? parseFloat(prices?.[0].toSignificant(8)) : void 0,\n      rangeInputMaxPrice: prices?.[1] ? parseFloat(prices?.[1].toSignificant(8)) : void 0\n    };\n  }, [priceRangeState.fullRange, prices, invertPrice, initialPosition]);\n  const invalidState = onDisableContinue || invalidPrice || invalidRange || derivedPositionInfo.creatingPoolOrPair && (!priceRangeState.initialPrice || priceRangeState.initialPrice.length === 0);\n  const setFallbackRangePrices = useCallback(() => {\n    if (initialPosition?.isOutOfRange) {\n      return;\n    }\n    handleChartRangeInput(0 /* MIN */, \"\");\n    handleChartRangeInput(1 /* MAX */, \"\");\n  }, [handleChartRangeInput, initialPosition?.isOutOfRange]);\n  useEffect(() => {\n    if (!priceRangeState.fullRange && !derivedPositionInfo.poolId && priceRangeState.minPrice === void 0 && priceRangeState.maxPrice === void 0) {\n      setFallbackRangePrices();\n    }\n  }, [\n    priceRangeState.fullRange,\n    priceRangeState.minPrice,\n    priceRangeState.maxPrice,\n    derivedPositionInfo.poolId,\n    setFallbackRangePrices\n  ]);\n  if (derivedPositionInfo.protocolVersion === ProtocolVersion.V2) {\n    return <InitialPriceInput />;\n  }\n  const isDisabled = initialPosition?.isOutOfRange;\n  const showIncrementButtons = !!derivedPositionInfo.pool && !priceRangeState.fullRange;\n  return <>\r\n      {creatingPoolOrPair && <InitialPriceInput />}\r\n      <Flex gap=\"$gap20\">\r\n        <Flex row alignItems=\"center\">\r\n          <Text flex={1} variant=\"subheading1\">\r\n            <Trans i18nKey=\"position.setRange\" />\r\n          </Text>\r\n        </Flex>\r\n        {!initialPosition?.isOutOfRange && <SegmentedControl\n    options={segmentedControlRangeOptions}\n    selectedOption={priceRangeState.fullRange ? \"FULL\" /* FULL */ : \"CUSTOM\" /* CUSTOM */}\n    onSelectOption={handleSelectRange}\n    fullWidth\n    size=\"large\"\n  />}\r\n        {!initialPosition?.isOutOfRange && <Text variant=\"body3\" color=\"$neutral2\">\r\n            {derivedPositionInfo.creatingPoolOrPair ? t(\"position.provide.liquidityDescription.creatingPool\") : priceRangeState.fullRange ? t(\"position.provide.liquidityDescription\") : t(\"position.provide.liquidityDescription.custom\")}\r\n          </Text>}\r\n        <PositionOutOfRangeError positionInfo={positionInfo} />\r\n        <PoolOutOfSyncError />\r\n        <Flex gap=\"$gap4\" opacity={isDisabled ? 0.6 : 1}>\r\n          {isDisabled && <Flex\n    position=\"absolute\"\n    top={0}\n    left={0}\n    right={0}\n    bottom={0}\n    opacity={0}\n    backgroundColor=\"$surface3\"\n    cursor={isDisabled ? \"not-allowed\" : \"auto\"}\n    zIndex={zIndexes.overlay}\n  />}\r\n          {baseCurrency && quoteCurrency && derivedPositionInfo.poolId && <Flex\n    backgroundColor=\"$surface2\"\n    p=\"$padding16\"\n    gap=\"$gap16\"\n    borderRadius={derivedPositionInfo.poolId ? \"$none\" : \"$rounded20\"}\n    borderTopLeftRadius={derivedPositionInfo.poolId ? \"$rounded20\" : \"$none\"}\n    borderTopRightRadius={derivedPositionInfo.poolId ? \"$rounded20\" : \"$none\"}\n    $lg={{\n      px: \"$spacing8\"\n    }}\n  >\r\n              <Flex\n    row\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    $sm={{ row: false, alignItems: \"flex-start\", gap: \"$gap8\" }}\n  >\r\n                <DisplayCurrentPrice price={invertPrice ? price?.invert() : price} />\r\n                {!creatingPoolOrPair && <SegmentedControl\n    options={controlOptions}\n    selectedOption={baseCurrency?.symbol ?? \"\"}\n    onSelectOption={handleSelectToken}\n    size=\"smallThumbnail\"\n  />}\r\n              </Flex>\r\n              <LiquidityRangeInput\n    key={buildRangeInputKey({ derivedPositionInfo, priceRangeState })}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    feeTier={fee.feeAmount}\n    hook={hook}\n    tickSpacing={derivedPositionInfo.pool?.tickSpacing}\n    protocolVersion={derivedPositionInfo.protocolVersion}\n    poolId={derivedPositionInfo.poolId}\n    disableBrushInteraction={priceRangeState.fullRange}\n    minPrice={rangeInputMinPrice}\n    maxPrice={rangeInputMaxPrice}\n    setMinPrice={(minPrice) => {\n      handleChartRangeInput(0 /* MIN */, minPrice?.toString());\n    }}\n    setMaxPrice={(maxPrice) => {\n      handleChartRangeInput(1 /* MAX */, maxPrice?.toString());\n    }}\n    setFallbackRangePrices={setFallbackRangePrices}\n  />\r\n            </Flex>}\r\n          <Flex row gap=\"$gap4\" $lg={{ row: false }}>\r\n            <RangeInput\n    input={0 /* MIN */}\n    decrement={isSorted ? getDecrementLower : getIncrementUpper}\n    increment={isSorted ? getIncrementLower : getDecrementUpper}\n    value={rangeSelectionInputValues[0]}\n    showIncrementButtons={showIncrementButtons}\n    isInvalid={invalidRange}\n  />\r\n            <RangeInput\n    input={1 /* MAX */}\n    decrement={isSorted ? getDecrementUpper : getIncrementLower}\n    increment={isSorted ? getIncrementUpper : getDecrementLower}\n    value={rangeSelectionInputValues[1]}\n    showIncrementButtons={showIncrementButtons}\n    isInvalid={invalidRange}\n  />\r\n          </Flex>\r\n        </Flex>\r\n        {(invalidPrice || invalidRange) && <Flex row alignItems=\"center\" px=\"$padding16\" gap=\"$gap4\">\r\n            <AlertTriangleFilled size=\"$icon.16\" color=\"$statusCritical\" />\r\n            <Text color=\"$statusCritical\" variant=\"body3\">\r\n              {invalidRange ? t(\"position.create.invalidRange\") : t(\"position.create.invalidPrice\")}\r\n            </Text>\r\n          </Flex>}\r\n      </Flex>\r\n      {onContinue && <Flex row>\r\n          <Button onPress={onContinue} isDisabled={invalidState}>\r\n            {t(`common.button.continue`)}\r\n          </Button>\r\n        </Flex>}\r\n    </>;\n};\nfunction buildRangeInputKey({\n  derivedPositionInfo,\n  priceRangeState\n}) {\n  return `${derivedPositionInfo.poolId}-${priceRangeState.fullRange}-${priceRangeState.priceInverted}-${derivedPositionInfo.protocolVersion}`;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { LPConfigKey } from \"uniswap/src/features/gating/configs\";\nimport { DynamicConfigs } from \"uniswap/src/features/gating/configs\";\nimport { useDynamicConfigValue } from \"uniswap/src/features/gating/hooks\";\nexport function useLPSlippageValue(version, currencyA, currencyB) {\n  const defaultSlippage = useDynamicConfigValue(DynamicConfigs.LPConfig, LPConfigKey.DefaultSlippage, 2.5);\n  const v4SlippageOverride = useDynamicConfigValue(DynamicConfigs.LPConfig, LPConfigKey.V4SlippageOverride, 0.05);\n  const isNativePool = currencyA?.isNative || currencyB?.isNative;\n  if (version === ProtocolVersion.V4 && isNativePool) {\n    return v4SlippageOverride;\n  }\n  return defaultSlippage;\n}\n"],"names":["_ref","params","headers","rest","_objectWithoutProperties2","default","_excluded","queryKey","ReactQueryCacheKey","TradingApi","uniswapUrls","tradingApiPaths","lpApproval","useQuery","Object","assign","queryFn","_queryFn","_asyncToGenerator2","name","checkLpApproval","apply","arguments","_reactQuery","require","_urls","_TradingApiClient","_cache","deadlineInMinutes","createLp","deadline","getTradeSettingsDeadline","paramsWithDeadline","createLpPosition","_getTradeSettingsDeadline","increaseLp","increaseLpPosition","useIncreasePositionDependentAmountFallback","queryParams","isQueryEnabled","data","hasErrorResponse","setHasErrorResponse","useState","error","useIncreaseLpPositionCalldataQuery","simulateTransaction","refetchInterval","ONE_SECOND_MS","retry","enabled","useEffect","dependentAmount","useCreatePositionDependentAmountFallback","useCreateLpPositionCalldataQuery","useUpdatedAmountsFromDependentAmount","token0","token1","exactField","currencyAmounts","currencyAmountsUSDValue","formattedAmounts","deposit0Disabled","deposit1Disabled","dependentAmount0","PositionField","TOKEN1","CurrencyAmount","fromRawAmount","dependentAmount0USDValue","useUSDCValue","dependentAmount1","TOKEN0","dependentAmount1USDValue","useMemo","updatedFormattedAmounts","toExact","updatedUSDAmounts","updatedCurrencyAmounts","updatedDeposit0Disabled","greaterThan","updatedDeposit1Disabled","PercentInput","forwardRef","value","onUserInput","placeholder","testId","maxDecimals","ref","inputRegexStr","noDecimalRegexStr","inputRegex","RegExp","noDecimalRegex","locale","useCurrentLocale","valueFormattedWithLocale","value2","searchValue","replaceValue","localeUsesComma","toString","replace","formatValueWithLocale","StyledInput","minLength","maxLength","data-testid","onChange","event","nextUserInput","sanitizedInput","test","enforcer","target","inputMode","autoComplete","autoCorrect","type","pattern","spellCheck","displayName","MemoizedInput","React","StyledPercentInput","styled","$width","NumericalInputFontStyle","_cn5","_cn4","_cn3","_cn2","_cn","PoolProgressIndicator","steps","assert","length","Flex","width","borderRadius","py","borderColor","borderWidth","p","map","step","index","Fragment","row","gap","alignItems","onPress","ClickableTamaguiStyle","div","className","concatClassName","active","Text","variant","color","userSelect","Trans","i18nKey","values","number","label","PairState","PairState2","useV2Pairs","currencies","chainId","tokens","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","equals","V2_FACTORY_ADDRESSES","computePairAddress","factoryAddress","isLoading","useReadContracts","contracts","pairAddress","address","assume0xAddress","abi","constant","inputs","outputs","internalType","payable","stateMutability","functionName","Array","from","result","i","reserve0","reserve1","sortsBefore","Pair","useV2Pair","BaseQuoteFiatAmount","price","base","quote","formatCurrencyAmount","formatPrice","useFormatter","quoteCurrencyAmount","tryParseCurrencyAmount","toFixed","quoteCurrency","usdPrice","NumberType","TokenTx","symbol","amount","FiatTokenPrice","_cn10","_cn1","_cn0","_cn9","_cn8","_cn7","_cn6","FeeTierPercentInput","MAX_CHAR_PIXEL_WIDTH","MAX_FONT_SIZE","MIN_FONT_SIZE","SMALLEST_BIP_AMOUNT","FeeTierSearchModal","useMultichainContext","positionState","fee","selectedFee","protocolVersion","hook","derivedPositionInfo","setPositionState","feeTierSearchModalOpen","setFeeTierSearchModalOpen","setDynamicFeeTierSpeedbumpData","useCreatePositionContext","onClose","setCreateFeeValue","setCreateModeEnabled","t","useTranslation","trace","useTrace","setSearchValue","createFeeValue","createModeEnabled","formatNumberOrString","formatPercent","useLocalizationContext","autoDecrementing","setAutoDecrementing","autoIncrementing","setAutoIncrementing","holdDuration","setHoldDuration","hiddenObserver","useResizeObserver","withDynamicFeeTier","Boolean","isLpIncentivesEnabled","useFeatureFlag","FeatureFlags","LpIncentives","feeTierData","hasExistingFeeTiers","useAllFeeTierPoolData","ZERO_ADDRESS","showCreateModal","interval","holdTimeout","baseInterval","currentInterval","setTimeout","prev","ms","setInterval","newValue","parseFloat","MAX_FEE_TIER_DECIMALS","clearInterval","clearTimeout","feeHundredthsOfBips","Math","round","onLayout","fontSize","onSetFontSize","useDynamicFontSizing","Modal","ModalName","FeeTierSearch","isDismissible","isModalOpen","paddingX","paddingY","maxWidth","BackArrow","size","flexGrow","textAlign","isMobileWeb","pl","ModalCloseIcon","justifyContent","backgroundColor","height","onPressIn","onPressOut","isNaN","mb","centered","minHeight","input","$fontSize","NumericalInputSymbolContainer","showPlaceholder","NumericalInputMimic","Button","isDisabled","prevState","feeAmount","tickSpacing","calculateTickSpacingFromFeeAmount","sendAnalyticsEvent","LiquidityEventName","SELECT_LIQUIDITY_POOL_FEE_TIER","action","FeePoolSelectAction","SEARCH","fee_tier","is_new_fee_tier","Search","AmountInput","autoFocus","alignSelf","fontFamily","px","placeholderTextColor","onChangeText","indexOf","numericInputRegex","slice","filter","formattedFee","includes","id","pool","isDynamicFeeTier","open","wishFeeData","boostedApr","LpIncentivesAprDisplay","lpIncentiveRewardApr","isSmall","ml","totalLiquidityUsd","FiatTokenStats","created","percentage","CheckCircleFilled","emphasis","fill","icon","Plus","DynamicFeeTierSpeedbump","dynamicFeeTierSpeedbumpData","handleCancel","DialogV2","InfoCircleFilled","isOpen","title","subtext","primaryButtonText","primaryButtonOnClick","handleConfirm","primaryButtonVariant","secondaryButtonText","secondaryButtonOnClick","modalName","displayHelpCTA","CreatePositionContextProvider","children","initialState","DEFAULT_POSITION_STATE","setStep","PositionFlowStep","SELECT_TOKENS_AND_FEE_TIER","currentTransactionStep","setCurrentTransactionStep","useDerivedPositionInfo","reset","useCallback","currencyInputs","CreatePositionContext","Provider","PriceRangeContextProvider","initialPosition","fullRange","isOutOfRange","priceRangeState","setPriceRangeState","DEFAULT_PRICE_RANGE_STATE","minPrice","maxPrice","priceInverted","derivedPriceRangeInfo","useDerivedPriceRangeInfo","PriceRangeContext","DepositContextProvider","depositState","setDepositState","DEFAULT_DEPOSIT_STATE","derivedDepositInfo","useDerivedDepositInfo","usePriceRangeContext","DepositContext","CreateTxContextProvider","useUniswapContext","approvalCalldata","createCalldata","account","useAccountMeta","useDepositContext","customDeadline","customSlippageTolerance","useTransactionSettingsContext","generatePermitAsTransaction","getGeneratePermitAsTransaction","hasError","hasCreateErrorResponse","setHasCreateErrorResponse","addLiquidityApprovalParams","generateAddLiquidityApprovalParams","approvalError","approvalLoading","refetch","approvalRefetch","useCheckLpApprovalQuery","staleTime","message","parseErrorMessageTitle","defaultTitle","logger","tags","file","function","gasFeeToken0USD","useUSDCurrencyAmountOfGasFee","gasFeeToken0Approval","gasFeeToken1USD","gasFeeToken1Approval","gasFeeToken0PermitUSD","gasFeeToken0Permit","gasFeeToken1PermitUSD","gasFeeToken1Permit","createCalldataQueryParams","generateCreateCalldataQueryParams","independentField","slippageTolerance","TransactionStepType","IncreasePositionTransaction","IncreasePositionTransactionAsync","createError","createRefetch","InterfaceEventNameLocal","CreatePositionFailed","dependentAmountFallback","actualGasFee","gasFee","needsApprovals","token0Approval","token1Approval","token0Cancel","token1Cancel","token0PermitTransaction","token1PermitTransaction","calculatedGasFee","useTransactionGasFee","create","increaseGasFeeUsd","toSupportedChainId","totalGasFee","reduce","total","add","validatedValue","txInfo","generateCreatePositionTxRequest","gasFeeEstimateUSD","getErrorMessageToDisplay","calldataError","CreateTxContext","Edit","AnimatedEdit","createIcon","getIcon","props","Svg","viewBox","Path","d","EditStep","onClick","Container","EditSelectTokensStep","resetPriceRangeState","resetDepositState","creatingPoolOrPair","defaultInitialPrice","versionLabel","getProtocolVersionLabel","media","useMedia","handleEdit","DoubleCurrencyLogo","md","iconSizes","icon44","icon32","LiquidityPositionInfoBadges","v4hook","feeTier","CreatingPoolInfo","ProtocolVersion","V2","DisplayCurrentPrice","PoolOutOfSyncError","isPoolOutOfSync","refetchPoolData","ErrorCallout","isWarning","errorMessage","description","desktopSizes","rightAxisWidth","chartContainerWidth","liquidityChartWidth","interChartPadding","chartHeight","bottomAxisHeight","loadedPriceChartWidth","CHART_CONTAINER_WIDTH","mobileSizes","SearchMinus","AnimatedSearchMinus","fillRule","clipRule","SearchPlus","AnimatedSearchPlus","PlusMinusButton","TouchableArea","animation","hoverStyle","opacity","pressStyle","LiquidityRangeInput","baseCurrency","poolId","setMinPrice","setMaxPrice","disableBrushInteraction","setFallbackRangePrices","baseCurrencyMaybeWrapped","containerRef","priceData","timePeriodOptions","chainInfo","getChainInfo","colors","useSporeColors","sortedCurrencies","getSortedCurrenciesTupleWithWrap","isReversed","getCurrencyWithWrap","selectedHistoryDuration","setSelectedHistoryDuration","HistoryDuration","Month","usePoolPriceChartData","addressOrId","chain","backendChain","duration","isV4","V4","isV3","V3","isV2","getCurrencyAddressWithWrap","boundaryPrices","setBoundaryPrices","zoomFactor","setZoomFactor","dataMin","dataMax","min","dataMin2","max","dataMax2","getCandlestickPriceBounds","entries","midPrice","setMidPrice","showDiffIndicators","setShowDiffIndicators","scrollIncrement","minVisiblePrice","maxVisiblePrice","mostRecentPrice","newRange","useRef","sizes","parentWidth","current","clientWidth","priceChartParams","stale","dataQuality","DataQuality","STALE","PriceChartType","LINE","accent1","val","currentPriceLineColor","neutral2","showXAxis","disableExtendedTimeScale","allowScrollInteractions","priceScaleMargins","top","bottom","formattedData","liquidityDataLoading","useDensityChartData","invertPrices","version","Number","hooks","sortedFormattedData","uniqueTicksMap","Map","forEach","entry","set","tick","sort","a","b","price0","options","Day","Week","Year","Max","timePeriod","display","verboseDisplay","selected","createDropdownOpen","setCreateDropdownOpen","showChartErrorView","loading","container","lastCall","throttleDelayMs","listener","preventDefault","stopPropagation","now","Date","deltaY","prevMidPrice","addEventListener","removeEventListener","overflow","onMouseEnter","onMouseLeave","ChartErrorView","zIndex","Shine","disabled","LoadingPriceCurve","Chart","Model","LPPriceChartModel","position","right","pointerEvents","HorizontalDensityChart","ActiveLiquidityChart","series","brushDomain","dimensions","contentWidth","axisLabelPaneWidth","onBrushDomainChange","domain","mode","isMobile","DropdownSelector","containerStyle","menuLabel","find","RotatableChevron","direction","buttonStyle","dropdownStyle","hideChevron","adaptToSheet","toggleOpen","SegmentedControl","selectedOption","onSelectOption","option","borderTopLeftRadius","borderBottomLeftRadius","prevZoomFactor","borderTopRightRadius","borderBottomRightRadius","RotateLeft","PositionOutOfRangeError","positionInfo","dispatch","useDispatch","status","PositionStatus","OUT_OF_RANGE","setOpenModal","RemoveLiquidity","pressIcon","useTokenControlOptions","PortfolioLogo","AlertTriangleFilled","InitialPriceInput","initialPriceBaseToken","priceDifference","initialPriceQuoteToken","otherCurrencyPrice","setOtherCurrencyPrice","initialPrice","isInitialPriceDirty","isDefaultInitialPriceLoading","formattedDefaultInitialPrice","invert","toSignificant","parsedPrice","tryParsePrice","getInvertedTuple","controlOptions","handleSelectInitialPriceBaseToken","handleUseMarketPrice","flex","sm","warning","WarningSeverity","Medium","High","fonts","heading2","fontWeight","lineHeight","neutral3","text","$md","flexShrink","AnimatePresence","exitStyle","enterStyle","absoluteValue","RangeControl","numericInputEnforcerWithInfinity","RangeInput","decrement","increment","showIncrementButtons","isInvalid","typedValue","setTypedValue","displayUserTypedValue","setDisplayUserTypedValue","handlePriceRangeInput","input2","handleDecrement","handleIncrement","heading3","decimals","onBlur","inputEnforcer","subheading2","testID","TestID","RangeInputIncrement","hoverable","RangeInputDecrement","Minus","SelectPriceRangeStep","onContinue","onDisableContinue","ticks","handleSelectToken","isSorted","prices","ticksAtLimit","invalidPrice","invalidRange","invertPrice","pricesAtTicks","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","useRangeHopCallbacks","tickLower","tickUpper","handleSelectRange","segmentedControlRangeOptions","rangeSelectionInputValues","leftPrice","rightPrice","handleChartRangeInput","rangeInputMinPrice","rangeInputMaxPrice","invalidState","fullWidth","left","cursor","zIndexes","overlay","_cn26","buildRangeInputKey","useLPSlippageValue","defaultSlippage","useDynamicConfigValue","DynamicConfigs","LPConfig","LPConfigKey","DefaultSlippage","v4SlippageOverride","V4SlippageOverride","isNativePool","isNative"],"sourceRoot":""}