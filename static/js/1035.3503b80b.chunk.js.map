{"version":3,"file":"static/js/1035.3503b80b.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Dash/components/TokenomicsModal.tsx?9d81","webpack://@uniswap/interface/./src/components/PoolAndGaugeAddress.tsx?f51f","webpack://@uniswap/interface/./src/pages/Dash/components/SingleVotingRewards.tsx?9c9c","webpack://@uniswap/interface/./src/pages/Dash/components/SingleLiquidityRewards.tsx?fa2a","webpack://@uniswap/interface/./src/pages/Dash/components/SingleLock.tsx?f45e","webpack://@uniswap/interface/./src/pages/Dash/components/LiquidityRewards.tsx?cf07","webpack://@uniswap/interface/./src/pages/Dash/components/Locks.tsx?0332","webpack://@uniswap/interface/./src/pages/Dash/components/VotingRewards.tsx?cbbc","webpack://@uniswap/interface/./src/pages/Dash/index.tsx?5cb8","webpack://@uniswap/interface/./src/pages/Dash/components/StakedUnstakedAprEmissionsTradingFees.tsx?b247","webpack://@uniswap/interface/./src/pages/Dash/components/DepositedLiquidityInfo.tsx?8f18","webpack://@uniswap/interface/./src/pages/Dash/components/TokenDetails.tsx?bc2e","webpack://@uniswap/interface/./src/pages/Dash/components/RewardTokenAmountDetails.tsx?8fcc","webpack://@uniswap/interface/./src/components/AddressCopy.tsx?d736","../packages/ui/src/components/icons/Infinity.tsx","../packages/ui/src/components/icons/Shrink.tsx","components/AddressCopy.tsx","components/PoolAndGaugeAddress.tsx","pages/Dash/components/StakedUnstakedAprEmissionsTradingFees.tsx","pages/Dash/components/DepositedLiquidityInfo.tsx","pages/Dash/components/TokenDetails.tsx","pages/Dash/components/SingleLiquidityRewards.tsx","pages/Dash/components/LiquidityRewards.tsx","pages/Dash/components/SingleLock.tsx","pages/Dash/components/TokenomicsModal.tsx","pages/Dash/components/Locks.tsx","pages/Dash/components/RewardTokenAmountDetails.tsx","pages/Dash/components/SingleVotingRewards.tsx","pages/Dash/components/VotingRewards.tsx","pages/Dash/index.tsx","../node_modules/@tamagui/button/dist/esm/Button.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Infinity, AnimatedInfinity] = createIcon({\n  name: \"InfoCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <path\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    stroke-width=\"1.5\"\n    d=\"m14 9l-.25.375M10 9a5 5 0 1 0 0 6l.334-.5M10 9l4 6a5 5 0 1 0 0-6\"\n  />\n    </Svg>\n});\n","\"use strict\";\nimport { Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Shrink, AnimatedShrink] = createIcon({\n  name: \"Shrink\",\n  getIcon: (props) => <Svg viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n      <path\n    fill=\"currentColor\"\n    fill-rule=\"evenodd\"\n    d=\"M1 .375c.345 0 .625.28.625.625v12a.625.625 0 1 1-1.25 0V1c0-.345.28-.625.625-.625m2.692 3.683a.625.625 0 1 0-.884.884L4.866 7L2.808 9.058a.625.625 0 1 0 .884.884l2.5-2.5a.625.625 0 0 0 0-.884zm7.5.884a.625.625 0 1 0-.884-.884l-2.5 2.5a.625.625 0 0 0 0 .884l2.5 2.5a.625.625 0 1 0 .884-.884L9.134 7zM13.625 1a.625.625 0 1 0-1.25 0v12a.625.625 0 1 0 1.25 0z\"\n    clip-rule=\"evenodd\"\n  />\n    </Svg>\n});\n","\"use strict\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useCallback } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Flex, Text, useMedia, useSporeColors } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport default function AddressCopy({ address }) {\n  const colors = useSporeColors();\n  const [isCopied, setCopied] = useCopyClipboard();\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && !isCopied;\n  const copyCallBack = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  return <Flex row gap={\"$gap8\"} onPress={copyCallBack} cursor=\"pointer\" alignItems=\"center\">\n      <Text variant=\"body4\" color={colors.neutral2.val}>\n        {shortenAddress(address)}\n      </Text>\n      <Copy\n    data-testid=\"breadcrumb-hover-copy\"\n    size={13}\n    color={shouldShowActions ? colors.neutral3.val : \"transparent\"}\n  />\n    </Flex>;\n}\n","\"use strict\";\nimport AddressCopy from \"components/AddressCopy\";\nimport { Flex, Separator, Text } from \"ui/src\";\nexport default function PoolAndGaugeAddress({\n  poolAddress,\n  gaugeAddress\n}) {\n  return <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Pool Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n      <Separator width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Gauge Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport styled from \"styled-components\";\nimport { Flex, Separator, Text, styled as UiStyled, useSporeColors } from \"ui/src\";\nexport default function StakedUnstakedAprEmissionsTradingFees({ toggleDropDown }) {\n  const colors = useSporeColors();\n  const GridItem = UiStyled(Flex, {\n    backgroundColor: \"$slate\",\n    p: \"$spacing12\",\n    borderRadius: \"$rounded12\"\n  });\n  const TextWrapper = UiStyled(Text, {\n    variant: \"body2\"\n  });\n  const Button = styled.button`\n    all: unset;\n    padding: 8px 8px;\n    background-color: ${colors.surface2.val};\n    border-radius: 10px;\n    border: 1px solid ${colors.surface3.val};\n    transition: all 0.2s ease;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:hover {\n      background-color: ${colors.surface2Hovered.val};\n    }\n  `;\n  return <Flex\n    mt={\"$spacing24\"}\n    $platform-web={{ display: toggleDropDown ? \"grid\" : \"none\", gridTemplateColumns: \"2fr 1fr 1fr\" }}\n    gap={\"$gap12\"}\n  >\n      <GridItem $platform-web={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }}>\n        <Flex className=\"staked\">\n          <Text variant=\"buttonLabel4\" color={\"$neutral2\"}>\n            Staked\n          </Text>\n          <Flex mt={\"$spacing12\"} flexDirection=\"column\" gap={\"$gap4\"}>\n            <TextWrapper>154 ABX</TextWrapper> <TextWrapper>1.4 ETH</TextWrapper>\n          </Flex>\n        </Flex>{\" \"}\n        <Flex className=\"unstaked\" row gap={\"$gap12\"}>\n          <Separator vertical height={\"100%\"} width={1} borderColor={\"$surface3\"} />\n          <Flex>\n            <Text variant=\"buttonLabel4\" color={\"$neutral2\"}>\n              Unstaked\n            </Text>\n            <Flex mt={\"$spacing12\"} flexDirection=\"column\" gap={\"$gap4\"}>\n              <TextWrapper>154 ABX</TextWrapper> <TextWrapper>1.4 ETH</TextWrapper>\n            </Flex>\n\n            <Flex mt={\"$spacing18\"} row gap={\"$gap12\"}>\n              <Button type=\"button\" className=\"button-clear\">\n                <Text variant=\"buttonLabel4\">Stack</Text>\n              </Button>{\" \"}\n              <Button type=\"button\" className=\"button-clear\">\n                <Text variant=\"buttonLabel4\">Withdraw</Text>\n              </Button>\n            </Flex>\n          </Flex>\n        </Flex>\n      </GridItem>\n      <GridItem row gap={\"$gap12\"} justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n          <TextWrapper variant=\"buttonLabel4\" color={\"$neutral2\"}>\n            APR\n          </TextWrapper>\n          <TextWrapper>15%</TextWrapper>\n        </Flex>{\" \"}\n        <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n          <TextWrapper variant=\"buttonLabel4\" color={\"$neutral2\"}>\n            Emissions\n          </TextWrapper>\n          <TextWrapper>12 ABX</TextWrapper>\n        </Flex>\n      </GridItem>\n\n      <GridItem flexDirection=\"column\" gap={\"$spacing18\"} alignItems=\"flex-end\">\n        <Flex flexDirection=\"column\">\n          <Text variant=\"buttonLabel4\" color={\"$neutral2\"}>\n            Trading Fees\n          </Text>\n          <Flex alignItems=\"flex-end\" mt={\"$spacing12\"} flexDirection=\"column\" gap={\"$gap4\"}>\n            <TextWrapper>154 ABX</TextWrapper> <TextWrapper>1.4 ETH</TextWrapper>\n          </Flex>\n        </Flex>\n        <Button type=\"button\" className=\"button-clear\">\n          <Text variant=\"buttonLabel4\">Withdraw</Text>\n        </Button>\n      </GridItem>\n    </Flex>;\n}\n","\"use strict\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { Chevron, Infinity, Shrink } from \"ui/src/components/icons\";\nimport { colors as ThemeColors } from \"ui/src/theme\";\nimport StakedUnstakedAprEmissionsTradingFees from \"./StakedUnstakedAprEmissionsTradingFees\";\nexport default function DepositedLiquidityInfo() {\n  const [toggleDropDown, setToggleDropDown] = useState(false);\n  const colors = useSporeColors();\n  const Button = styled.button`\n    all: unset;\n    display: flex;\n    gap: 4px;\n    cursor: pointer;\n    border-radius: 10px;\n  `;\n  const DepositButton = styled.div`\n    display: flex;\n    padding: 8px 12px;\n    border-radius: 10px;\n    background-color: ${colors.surface2.val};\n    borderradius: 10px;\n    border: 1px solid ${colors.surface3.val};\n    transition: all 0.2s ease;\n    &:hover {\n      background-color: ${colors.surface2Hovered.val};\n    }\n  `;\n  return <Flex p={\"$spacing18\"} borderRadius={\"$rounded12\"} borderWidth={1} borderColor={\"$surface3\"}>\n      <Button\n    onClick={() => setToggleDropDown(!toggleDropDown)}\n    type=\"button\"\n    role=\"button\"\n    aria-label=\"deposited-liquidity\"\n  >\n        <Flex row gap={\"$gap12\"} justifyContent=\"space-between\" alignItems=\"center\" width={\"100%\"}>\n          <Flex row alignItems=\"center\" justifyContent=\"space-between\" gap={\"$gap16\"}>\n            <Flex row gap={\"$gap4\"} alignItems=\"center\">\n              <Chevron transform={toggleDropDown ? \"rotate(270deg)\" : \"rotate(180deg)\"} size={20} color={\"$neutral1\"} />\n              <Text variant=\"buttonLabel4\">Deposit #0</Text>\n            </Flex>\n            <Flex row gap={\"$gap8\"} alignItems=\"center\">\n              <Text variant=\"buttonLabel4\">0</Text>\n              <Shrink size={18} color={ThemeColors.greenVibrant} />\n              <Infinity size={14} color={\"$neutral1\"} />\n            </Flex>\n          </Flex>\n\n          <Link to={\"/liquidity/deposit\"} className=\"text-decoration-none\">\n            <Flex\n    py={\"$spacing8\"}\n    px={\"$spacing12\"}\n    borderRadius={\"$rounded12\"}\n    transition=\"all 0.2s ease\"\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    backgroundColor={\"$surface1\"}\n    hoverStyle={{ backgroundColor: \"$surface1Hovered\" }}\n  >\n              <Text variant=\"buttonLabel4\">Deposit</Text>\n            </Flex>\n          </Link>\n        </Flex>\n      </Button>\n      <StakedUnstakedAprEmissionsTradingFees toggleDropDown={toggleDropDown} />\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons\";\nexport default function TokenDetails({ ...rest }) {\n  const colors = useSporeColors();\n  return <Flex className=\"group\" row gap={\"$gap12\"} {...rest}>\n      <Flex row>\n        <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n          <LogoProvider color={colors.surface1.val} size={24} />\n        </Flex>{\" \"}\n        <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n          <LogoProvider color={colors.surface1.val} size={24} />\n        </Flex>\n      </Flex>\n\n      <Flex flexDirection=\"column\" gap={\"$gap4\"}>\n        <Flex row gap={\"$gap12\"}>\n          <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n          <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n            <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n              0.23%\n            </Text>\n          </MouseoverTooltip>\n          <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n            <Flex transition=\"opacity 0.3s ease\" opacity={0} className=\"group-hover:opacity-full\" cursor=\"pointer\">\n              <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n            </Flex>\n          </MouseoverTooltip>\n        </Flex>\n        <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n          Basic Volatile\n        </Text>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport DepositedLiquidityInfo from \"./DepositedLiquidityInfo\";\nimport TokenDetails from \"./TokenDetails\";\nexport default function SingleLiquidityRewards() {\n  const colors = useSporeColors();\n  return <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n      <Flex\n    style={{\n      background: `linear-gradient(10deg, ${colors.surface1.variable} 0%, ${colors.slate.variable} 100%)`\n    }}\n    py={\"$spacing24\"}\n    px={\"$spacing20\"}\n    borderRadius={\"$rounded12\"}\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    hoverStyle={{ borderColor: \"$surface3Hovered\" }}\n  >\n        <Flex className=\"top\" row gap={\"$gap12\"} justifyContent=\"space-between\">\n          <TokenDetails />\n\n          <Flex className=\"right\" flexDirection=\"column\" gap={\"$gap24\"}>\n            <Flex\n    className=\"rebase\"\n    flexDirection=\"column\"\n    gap={\"$gap12\"}\n    justifyContent=\"center\"\n    alignItems=\"flex-end\"\n  >\n              <Text variant=\"body3\" color={\"$neutral2\"}>\n                Deposited\n              </Text>\n              <Text variant=\"body3\" fontSize={\"$small\"}>\n                ~$0.05598\n              </Text>\n            </Flex>\n\n            <Text variant=\"body3\" color={\"$neutral2\"}>\n              ~$5,193,559.41Pool Total\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      <DepositedLiquidityInfo />\n    </Flex>;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport LiquidityHowItWorksModal from \"pages/Liquidity/components/LIquidityHowItWorksModal\";\nimport { Flex, Text } from \"ui/src\";\nimport { QuestionInCircle } from \"ui/src/components/icons\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport SingleLiquidityRewards from \"./SingleLiquidityRewards\";\nexport default function LiquidityRewards() {\n  const { toggleModal } = useModalState(ModalName.HowItworks);\n  return <Flex marginTop={\"$spacing36\"}>\n      <Flex className=\"top\" row gap={\"$spacing8\"} alignItems=\"center\">\n        <Text variant={\"subheading1\"}>Liquidity rewards</Text>\n        <span\n    style={{\n      height: 17\n    }}\n    onClick={toggleModal}\n  >\n          <QuestionInCircle\n    color={\"$neutral2\"}\n    cursor=\"pointer\"\n    hoverStyle={{ color: \"$neutral3\" }}\n    size={\"$icon.20\"}\n  />\n        </span>\n      </Flex>\n      <Flex className=\"locks\" mt={\"$spacing24\"} flexDirection=\"column\" gap={\"$gap24\"}>\n        {Array.from({ length: 1 }, (_, index) => <SingleLiquidityRewards key={index} />)}\n      </Flex>\n      <LiquidityHowItWorksModal />\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { Lock } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"tamagui\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nexport default function SingleLock() {\n  const colors = useSporeColors();\n  const lockUrls = [\n    {\n      url: \"/locks/modify-lock\",\n      label: \"Increase\"\n    },\n    {\n      url: \"/locks/modify-lock\",\n      label: \"Extend\"\n    },\n    {\n      url: \"/locks/modify-lock\",\n      label: \"Merge\"\n    },\n    {\n      url: \"/locks/modify-lock\",\n      label: \"Reset\"\n    }\n  ];\n  return <Flex\n    $platform-web={{ display: \"grid\", gridTemplateColumns: \"5fr 2fr 2fr\" }}\n    style={{\n      background: `linear-gradient(10deg, ${colors.surface1.variable} 0%, ${colors.slate.variable} 100%)`\n    }}\n    p={\"$padding12\"}\n    borderRadius={\"$rounded12\"}\n    gap={\"$gap8\"}\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n  >\n      <Flex className=\"left\" flexDirection=\"column\" gap={\"$gap8\"}>\n        <Flex row gap={\"$gap12\"}>\n          <Flex\n    p={\"$padding16\"}\n    borderRadius={\"$rounded12\"}\n    borderColor={\"$accent3\"}\n    style={{\n      background: `linear-gradient(90deg, ${colors.surface2.variable} 0%, ${colors.slate.variable} 40%, ${colors.surface2.variable} 60%, ${colors.slate.variable} 100%)`\n    }}\n  >\n            <LogoProvider color={colors.accent1.val} size={24} />\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap8\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text>Lock #83065</Text> <Lock size={14} color={colors.accent1Hovered.val} />\n            </Flex>\n            <Text variant=\"body3\" color={\"$neutral2\"}>\n              0.05 ABX locked for 2 years\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex row gap={\"$gap12\"} alignItems=\"center\">\n          {lockUrls.map((item, index) => <Link className=\"text-decoration-none\" to={item.url} key={index}>\n              <Text\n    variant=\"buttonLabel3\"\n    color={\"$accent1Hovered\"}\n    transition=\"all 250ms ease\"\n    hoverStyle={{ color: \"$accent1\" }}\n    fontSize={\"$micro\"}\n  >\n                {item.label}\n              </Text>\n            </Link>)}\n        </Flex>\n      </Flex>\n      <Flex className=\"rebase-apr\" flexDirection=\"column\" gap={\"$gap12\"} alignItems=\"flex-end\">\n        <Text variant=\"body3\" color={\"$neutral2\"}>\n          Rebase APR\n        </Text>\n        <Text variant=\"body3\" fontSize={\"$small\"}>\n          6.3188%\n        </Text>\n      </Flex>\n\n      <Flex\n    className=\"rebase-reward\"\n    flexDirection=\"column\"\n    gap={\"$24\"}\n    justifyContent=\"space-between\"\n    alignItems=\"flex-end\"\n  >\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\" gap={\"$gap12\"}>\n          <Text variant=\"body3\" color={\"$neutral2\"}>\n            Rebase\n          </Text>\n          <Text variant=\"body3\" fontSize={\"$small\"}>\n            0.00004 ABX\n          </Text>\n        </Flex>\n\n        <Flex>\n          <Button\n    mt={\"$gap24\"}\n    py={\"$spacing16\"}\n    px={\"$spacing12\"}\n    borderRadius={\"$rounded12\"}\n    transition=\"all 0.2s ease\"\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    backgroundColor={\"$surface1\"}\n    hoverStyle={{ backgroundColor: \"$surface1Hovered\", borderColor: \"$surface3Hovered\" }}\n  >\n            <Text variant=\"body3\" fontWeight={\"$medium\"}>\n              Claim & lock\n            </Text>\n          </Button>\n          {\n    /* <button role=\"button\" className=\"button-clear\">\n      <Text\n        variant=\"buttonLabel3\"\n        px={'$padding8'}\n        py={'6px'}\n        borderRadius={'$rounded12'}\n        backgroundColor={'$neutral3'}\n        fontWeight={'$medium'}\n        transition=\"all 250ms ease\"\n        hoverStyle={{ backgroundColor: '$surface1', color: '$accent1' }}\n      >\n        Claim & lock\n      </Text>\n    </button> */\n  }\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { Flex, Text, styled, useSporeColors } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nconst CustomText = styled(Text, {\n  variant: \"body2\",\n  color: \"$neutral2\",\n  lineHeight: \"1.5\"\n});\nconst HeaderText = styled(Text, {\n  variant: \"heading3\",\n  marginTop: \"$spacing16\",\n  lineHeight: \"1.5\",\n  fontWeight: \"$medium\"\n});\nconst AboreanLockInfo = ({ header, data }) => <Flex\n  maxWidth={\"30rem\"}\n  width={\"100%\"}\n  flexDirection=\"column\"\n  backgroundColor={\"$surface2\"}\n  borderWidth={1}\n  borderColor={\"$surface3\"}\n  borderRadius={\"$rounded12\"}\n  p={\"$spacing16\"}\n  gap={\"$gap16\"}\n>\n    <Text variant=\"subheading1\">{header}</Text>\n    {data.map((item) => <Flex key={item.title} row justifyContent=\"space-between\" alignItems=\"center\" gap={\"$gap16\"}>\n        <CustomText className=\"left\">{item.title}</CustomText>\n        <Flex row gap={\"$gap16\"} className=\"right\">\n          <CustomText color={\"$neutral1\"}>{item.amout}</CustomText>\n          <CustomText color={\"$neutral1\"}>{item.percent}</CustomText>\n        </Flex>\n      </Flex>)}\n  </Flex>;\nexport default function TokenomicsModal() {\n  const modalName = ModalName.Tokenomics;\n  const { isOpen: isModalOpen, toggleModal: toggleTokenomicsModal } = useModalState(modalName);\n  const colors = useSporeColors();\n  const onClose = () => {\n    toggleTokenomicsModal();\n  };\n  const abxData = [\n    {\n      title: \"Voter Incentives\",\n      amout: \"10M\",\n      percent: \"8%\"\n    },\n    {\n      title: \"Genesis Liquidity Incentives\",\n      amout: \"10M\",\n      percent: \"2%\"\n    }\n  ];\n  const aboreanData = [\n    {\n      title: \"Airdrop for veVELO Lockers\",\n      amout: \"1200M0M\",\n      percent: \"40%\"\n    },\n    {\n      title: \"Public Goods Fund (Auto Max-Locked)\",\n      amout: \"105M\",\n      percent: \"21%\"\n    },\n    {\n      title: \"Foundation (Auto Max-Locked)\",\n      amout: \"95M\",\n      percent: \"19%\"\n    },\n    {\n      title: \"Flight School (Auto Max-Locked)\",\n      amout: \"50M\",\n      percent: \"10%\"\n    }\n  ];\n  return <Modal\n    extendOnKeyboardVisible\n    fullScreen\n    hideKeyboardOnDismiss\n    hideKeyboardOnSwipeDown\n    renderBehindBottomInset\n    backgroundColor={colors.surface1.val}\n    isModalOpen={isModalOpen}\n    maxWidth={740}\n    maxHeight={\"90vh\"}\n    name={ModalName.Tokenomics}\n    padding=\"$none\"\n    height=\"100vh\"\n    onClose={onClose}\n  >\n      <Flex py={\"$spacing24\"} px={\"$spacing20\"}>\n        <Flex className=\"top\" row justifyContent=\"space-between\">\n          <HeaderText>Tokenomics</HeaderText>\n        </Flex>\n        <Flex mt={\"$spacing24\"} flexDirection=\"column\" gap={\"$gap12\"}>\n          <CustomText>Aborean Finance uses two tokens to manage its utility and governance:</CustomText>\n          <Flex>\n            <Flex row gap={\"$gap4\"} alignItems=\"center\">\n              <CustomText>•</CustomText>\n              <CustomText>$ABX — ERC-20 utility token of the protocol</CustomText>\n            </Flex>\n            <Flex row gap={\"$gap4\"} alignItems=\"center\">\n              <CustomText>•</CustomText>\n              <CustomText>$ABX — ERC-721 governance token in the form of an NFT (non-fungible token)</CustomText>\n            </Flex>\n          </Flex>\n\n          <CustomText>$ABX is distributed to liquidity providers through emissions.</CustomText>\n          <CustomText>\n            $ABX is used for governance. Any $ABX holder can vote-escrow their tokens and receive a $ABX (also known as\n            Lock or veNFT) in exchange. Additional tokens can be added to the $ABX NFT at any time.\n          </CustomText>\n          <CustomText>\n            The lock period (also known as vote-escrowed period, hence the ve prefix) can be up to 4 years, following\n            the linear relationship shown below:\n          </CustomText>\n\n          <Flex>\n            <Flex row gap={\"$gap4\"} alignItems=\"center\">\n              <CustomText>•</CustomText>\n              <CustomText>100 $ABX locked for 4 years will become 100 $ABX</CustomText>\n            </Flex>\n            <Flex row gap={\"$gap4\"} alignItems=\"center\">\n              <CustomText>•</CustomText>\n              <CustomText>100 $AERO locked for 1 year will become 25 $veAERO</CustomText>\n            </Flex>\n          </Flex>\n          <CustomText>\n            The longer the vesting time, the higher the voting power (voting weight) of the underlying locked balance.\n          </CustomText>\n          <CustomText>\n            Additionally, Aborean Locks (veNFTs) can be set into Auto-Max Lock, which are treated by the protocol as\n            being locked for the maximum duration of 4 years, and their voting power does not decay. The Auto-Max Lock\n            feature can be turned on and off for each Lock (veNFT).\n          </CustomText>\n\n          <HeaderText>Initial Distribution</HeaderText>\n\n          <AboreanLockInfo header=\"ABX\" data={abxData} />\n          <AboreanLockInfo header=\"Aborean (ABX)\" data={aboreanData} />\n        </Flex>\n      </Flex>\n    </Modal>;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { Flex, Text } from \"ui/src\";\nimport { QuestionInCircle } from \"ui/src/components/icons\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport SingleLock from \"./SingleLock\";\nimport TokenomicsModal from \"./TokenomicsModal\";\nexport default function Locks() {\n  const { toggleModal: toggleTokenomicsModal } = useModalState(ModalName.Tokenomics);\n  return <Flex marginTop={\"$spacing36\"}>\n      <Flex className=\"top\" row gap={\"$spacing8\"} alignItems=\"center\">\n        <Text variant={\"subheading1\"}>Locks</Text>\n        <span\n    style={{\n      height: 17\n    }}\n    onClick={toggleTokenomicsModal}\n  >\n          <QuestionInCircle\n    color={\"$neutral2\"}\n    cursor=\"pointer\"\n    hoverStyle={{ color: \"$neutral3\" }}\n    size={\"$icon.20\"}\n  />\n        </span>\n      </Flex>\n      <Flex className=\"locks\" mt={\"$spacing24\"} flexDirection='column' gap={\"$gap24\"}>\n        {Array.from({ length: 4 }, (_, index) => <SingleLock key={index} />)}\n      </Flex>\n      <TokenomicsModal />\n    </Flex>;\n}\n","\"use strict\";\nimport { RoundedLogo } from \"components/Logo/LogoProvider\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nconst data = [\n  {\n    logo: RoundedLogo,\n    amount: 100,\n    symbol: \"ABX\",\n    type: \"Fees\",\n    tooltip: \"~$100\"\n  },\n  {\n    logo: RoundedLogo,\n    amount: 1.54,\n    symbol: \"ETH\",\n    type: \"Fees\",\n    tooltip: \"~$105\"\n  },\n  {\n    logo: RoundedLogo,\n    amount: 1258,\n    symbol: \"ABX\",\n    type: \"Incetive\",\n    tooltip: \"~$0.210\"\n  }\n];\nexport default function RewardTokenAmountDetails() {\n  const colors = useSporeColors();\n  const ClaimButton = styled.button`\n    all: unset;\n    display: flex;\n    padding: 4px 8px;\n    border-radius: 10px;\n    background-color: ${colors.surface1.val};\n    borderradius: 10px;\n    border: 1px solid ${colors.surface3.val};\n    transition: all 0.2s ease;\n    cursor: pointer;\n    &:hover {\n      background-color: ${colors.surface2Hovered.val};\n    }\n  `;\n  return <Flex className=\"right\" flexDirection=\"column\" alignItems=\"flex-end\" gap={\"$spacing18\"}>\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\" gap={\"$gap12\"}>\n        {data.map((item, index) => <Flex key={index} row alignItems=\"center\" gap={\"$gap8\"}>\n            <MouseoverTooltip text={item.tooltip} size={TooltipSize.Max} placement=\"top\">\n              <Flex row alignItems=\"center\" gap={\"$gap8\"}>\n                <item.logo size={18} />\n                <Text variant=\"body3\">\n                  {item.amount} {item.symbol}\n                </Text>\n              </Flex>\n            </MouseoverTooltip>\n            <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant={\"body4\"}\n  >\n              {item.type}\n            </Text>\n          </Flex>)}\n      </Flex>\n      <ClaimButton>\n        {\" \"}\n        <Text variant=\"body3\">Claim</Text>\n      </ClaimButton>\n    </Flex>;\n}\n","\"use strict\";\nimport { Lock } from \"react-feather\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport RewardTokenAmountDetails from \"./RewardTokenAmountDetails\";\nimport TokenDetails from \"./TokenDetails\";\nexport default function SingleVotingRewards() {\n  const colors = useSporeColors();\n  return <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n      <Flex\n    style={{\n      background: `linear-gradient(10deg, ${colors.surface1.variable} 0%, ${colors.slate.variable} 100%)`\n    }}\n    py={\"$spacing24\"}\n    px={\"$spacing20\"}\n    borderRadius={\"$rounded12\"}\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    hoverStyle={{ borderColor: \"$surface3Hovered\" }}\n  >\n        <Flex className=\"top\" row gap={\"$gap12\"} justifyContent=\"space-between\">\n          <Flex className=\"left\" $platform-web={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }} gap={\"$gap12\"}>\n            <TokenDetails />\n            <Flex\n    borderLeftWidth={1}\n    borderColor={\"$surface3\"}\n    pl={\"$spacing18\"}\n    flexDirection=\"column\"\n    ml={\"$spacing12\"}\n    gap={\"$gap8\"}\n  >\n              <Flex row gap={\"$gap12\"} alignItems=\"center\">\n                <Text>Lock #83065</Text> <Lock size={14} color={colors.accent1Hovered.val} />\n              </Flex>\n              <Text variant=\"body3\" color={\"$neutral2\"}>\n                0.05 ABX locked for 2 years\n              </Text>\n            </Flex>\n          </Flex>\n          <RewardTokenAmountDetails />\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport LiquidityHowItWorksModal from \"pages/Liquidity/components/LIquidityHowItWorksModal\";\nimport { Flex, Text } from \"ui/src\";\nimport { QuestionInCircle } from \"ui/src/components/icons\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport SingleVotingRewards from \"./SingleVotingRewards\";\nexport default function VotingRewards() {\n  const { toggleModal } = useModalState(ModalName.HowItworks);\n  return <Flex marginTop={\"$spacing36\"}>\n      <Flex className=\"top\" row gap={\"$spacing8\"} alignItems=\"center\">\n        <Text variant={\"subheading1\"}>Voting Rewards</Text>\n        <span\n    style={{\n      height: 17\n    }}\n    onClick={toggleModal}\n  >\n          <QuestionInCircle\n    color={\"$neutral2\"}\n    cursor=\"pointer\"\n    hoverStyle={{ color: \"$neutral3\" }}\n    size={\"$icon.20\"}\n  />\n        </span>\n      </Flex>\n      <Flex className=\"locks\" mt={\"$spacing24\"} flexDirection=\"column\" gap={\"$gap24\"}>\n        {Array.from({ length: 1 }, (_, index) => <SingleVotingRewards key={index} />)}\n      </Flex>\n      <LiquidityHowItWorksModal />\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex } from \"ui/src\";\nimport LiquidityRewards from \"./components/LiquidityRewards\";\nimport Locks from \"./components/Locks\";\nimport VotingRewards from \"./components/VotingRewards\";\nexport default function Dash() {\n  return <Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={1200}\n    pb={\"$spacing40\"}\n    $xl={{\n      px: \"$spacing12\",\n      maxWidth: 1200,\n      mx: \"auto\"\n    }}\n  >\r\n      <LiquidityRewards />\r\n      <Locks />\r\n      <VotingRewards />\r\n    </Flex>;\n}\n","import { getFontSize } from \"@tamagui/font-size\";\nimport { getButtonSized } from \"@tamagui/get-button-sized\";\nimport { withStaticProperties } from \"@tamagui/helpers\";\nimport { useGetThemedIcon } from \"@tamagui/helpers-tamagui\";\nimport { ButtonNestingContext, ThemeableStack } from \"@tamagui/stacks\";\nimport { SizableText, wrapChildrenInText } from \"@tamagui/text\";\nimport { createStyledContext, getVariableValue, spacedChildren, styled, useProps } from \"@tamagui/web\";\nimport { useContext } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nconst ButtonContext = createStyledContext({\n    // keeping these here means they work with styled() passing down color to text\n    color: void 0,\n    ellipse: void 0,\n    fontFamily: void 0,\n    fontSize: void 0,\n    fontStyle: void 0,\n    fontWeight: void 0,\n    letterSpacing: void 0,\n    maxFontSizeMultiplier: void 0,\n    size: void 0,\n    textAlign: void 0,\n    variant: void 0\n  }),\n  BUTTON_NAME = \"Button\",\n  ButtonFrame = styled(ThemeableStack, {\n    name: BUTTON_NAME,\n    tag: \"button\",\n    context: ButtonContext,\n    role: \"button\",\n    focusable: !0,\n    variants: {\n      unstyled: {\n        false: {\n          size: \"$true\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"nowrap\",\n          flexDirection: \"row\",\n          cursor: \"pointer\",\n          hoverTheme: !0,\n          pressTheme: !0,\n          backgrounded: !0,\n          borderWidth: 1,\n          borderColor: \"transparent\",\n          focusVisibleStyle: {\n            outlineColor: \"$outlineColor\",\n            outlineStyle: \"solid\",\n            outlineWidth: 2\n          }\n        }\n      },\n      variant: {\n        outlined: {\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"$borderColor\",\n          hoverStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorHover\"\n          },\n          pressStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorPress\"\n          },\n          focusVisibleStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorFocus\"\n          }\n        }\n      },\n      size: {\n        \"...size\": getButtonSized,\n        \":number\": getButtonSized\n      },\n      disabled: {\n        true: {\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonText = styled(SizableText, {\n    name: \"Button\",\n    context: ButtonContext,\n    variants: {\n      unstyled: {\n        false: {\n          userSelect: \"none\",\n          cursor: \"pointer\",\n          // flexGrow 1 leads to inconsistent native style where text pushes to start of view\n          flexGrow: 0,\n          flexShrink: 1,\n          ellipse: !0,\n          color: \"$color\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonIcon = props => {\n    const {\n        children,\n        scaleIcon = 1\n      } = props,\n      {\n        size,\n        color\n      } = useContext(ButtonContext),\n      iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size)) * scaleIcon;\n    return useGetThemedIcon({\n      size: iconSize,\n      color\n    })(children);\n  },\n  ButtonComponent = ButtonFrame.styleable(function (props, ref) {\n    const {\n      props: buttonProps\n    } = useButton(props);\n    return /* @__PURE__ */jsx(ButtonFrame, {\n      \"data-disable-theme\": !0,\n      ...buttonProps,\n      ref\n    });\n  }),\n  Button2 = withStaticProperties(ButtonComponent, {\n    Text: ButtonText,\n    Icon: ButtonIcon\n  });\nfunction useButton({\n  textProps,\n  ...propsIn\n}, {\n  Text = Button2.Text\n} = {\n  Text: Button2.Text\n}) {\n  const isNested = useContext(ButtonNestingContext),\n    propsActive = useProps(propsIn, {\n      noNormalize: !0,\n      noExpand: !0\n    }),\n    {\n      icon,\n      iconAfter,\n      space,\n      spaceFlex,\n      scaleIcon = 1,\n      scaleSpace = 0.66,\n      separator,\n      noTextWrap,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      tag,\n      ellipse,\n      maxFontSizeMultiplier,\n      ...restProps\n    } = propsActive,\n    size = propsActive.size || (propsActive.unstyled ? void 0 : \"$true\"),\n    color = propsActive.color,\n    iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size, {\n      font: fontFamily?.[0] === \"$\" ? fontFamily : void 0\n    })) * scaleIcon,\n    getThemedIcon = useGetThemedIcon({\n      size: iconSize,\n      color\n    }),\n    [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon),\n    spaceSize = space ?? getVariableValue(iconSize) * scaleSpace,\n    contents = noTextWrap ? [propsIn.children] : wrapChildrenInText(Text, {\n      children: propsIn.children,\n      fontFamily,\n      fontSize,\n      textProps,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      ellipse,\n      maxFontSizeMultiplier\n    }, Text === ButtonText && propsActive.unstyled !== !0 ? {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\",\n      size\n    } : void 0),\n    inner = spacedChildren({\n      // a bit arbitrary but scaling to font size is necessary so long as button does\n      space: spaceSize === !1 ? 0 : spaceSize == !0 ? \"$true\" : spaceSize,\n      spaceFlex,\n      ensureKeys: !0,\n      separator,\n      direction: propsActive.flexDirection === \"column\" || propsActive.flexDirection === \"column-reverse\" ? \"vertical\" : \"horizontal\",\n      // for keys to stay the same we keep indices as similar a possible\n      // so even if icons are undefined we still pass them\n      children: [themedIcon, ...contents, themedIconAfter]\n    }),\n    props = {\n      size,\n      ...(propsIn.disabled && {\n        // in rnw - false still has keyboard tabIndex, undefined = not actually focusable\n        focusable: void 0,\n        // even with tabIndex unset, it will keep focusVisibleStyle on web so disable it here\n        focusVisibleStyle: {\n          borderColor: \"$background\"\n        }\n      }),\n      // fixes SSR issue + DOM nesting issue of not allowing button in button\n      tag: tag ?? (isNested ? \"span\" :\n      // defaults to <a /> when accessibilityRole = link\n      // see https://github.com/tamagui/tamagui/issues/505\n      propsActive.accessibilityRole === \"link\" || propsActive.role === \"link\" ? \"a\" : \"button\"),\n      ...restProps,\n      children: /* @__PURE__ */jsx(ButtonNestingContext.Provider, {\n        value: !0,\n        children: inner\n      }),\n      // forces it to be a runtime pressStyle so it passes through context text colors\n      disableClassName: !0\n    };\n  return {\n    spaceSize,\n    isNested,\n    props\n  };\n}\nexport { Button2 as Button, ButtonContext, ButtonFrame, ButtonIcon, ButtonText, useButton };\n//# sourceMappingURL=Button.mjs.map\n"],"names":["Infinity","AnimatedInfinity","createIcon","name","getIcon","props","Svg","viewBox","fill","path","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","Shrink","AnimatedShrink","fill-rule","clip-rule","_cn","AddressCopy","address","colors","useSporeColors","isCopied","setCopied","useCopyClipboard","shouldShowActions","useMedia","md","copyCallBack","useCallback","div","onClick","className","Text","variant","color","neutral2","val","shortenAddress","Copy","data-testid","size","neutral3","_cn3","_cn2","PoolAndGaugeAddress","poolAddress","gaugeAddress","fontWeight","_cn8","_cn7","_cn6","_cn5","_cn4","StakedUnstakedAprEmissionsTradingFees","toggleDropDown","GridItem","UiStyled","Flex","backgroundColor","p","borderRadius","TextWrapper","Button","styled","button","surface2","surface3","surface2Hovered","mt","$platform-web","display","gridTemplateColumns","gap","type","row","justifyContent","flexDirection","alignItems","DepositedLiquidityInfo","setToggleDropDown","useState","role","aria-label","Chevron","transform","ThemeColors","greenVibrant","Link","to","TokenDetails","rest","LogoProvider","surface1","MouseoverTooltip","text","TooltipSize","Max","placement","py","px","cursor","hoverStyle","InfoCircleFilled","SingleLiquidityRewards","style","background","variable","slate","borderWidth","borderColor","fontSize","LiquidityRewards","toggleModal","useModalState","ModalName","HowItworks","span","height","QuestionInCircle","Array","from","length","_","index","LiquidityHowItWorksModal","SingleLock","accent1","Lock","accent1Hovered","url","label","map","item","transition","CustomText","lineHeight","HeaderText","marginTop","AboreanLockInfo","header","data","title","amout","percent","TokenomicsModal","modalName","Tokenomics","isOpen","isModalOpen","toggleTokenomicsModal","Modal","extendOnKeyboardVisible","fullScreen","hideKeyboardOnDismiss","hideKeyboardOnSwipeDown","renderBehindBottomInset","maxWidth","maxHeight","padding","onClose","Locks","logo","RoundedLogo","amount","symbol","tooltip","RewardTokenAmountDetails","ClaimButton","SingleVotingRewards","VotingRewards","Dash","ButtonContext","ellipse","fontFamily","fontStyle","letterSpacing","maxFontSizeMultiplier","textAlign","ButtonFrame","tag","context","focusable","variants","unstyled","false","flexWrap","hoverTheme","pressTheme","backgrounded","focusVisibleStyle","outlineColor","outlineStyle","outlineWidth","outlined","pressStyle","disabled","true","pointerEvents","defaultVariants","TAMAGUI_HEADLESS","ButtonText","userSelect","flexGrow","flexShrink","ButtonComponent","styleable","ref","buttonProps","textProps","propsIn","Button2","isNested","useContext","propsActive","noNormalize","noExpand","icon","iconAfter","space","spaceFlex","scaleIcon","scaleSpace","separator","noTextWrap","restProps","iconSize","font","getThemedIcon","themedIcon","themedIconAfter","spaceSize","contents","children","inner","ensureKeys","direction","accessibilityRole","jsx","Provider","value","disableClassName","useButton","Icon"],"sourceRoot":""}