{"version":3,"file":"static/js/4684.095e1f54.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/claim/AddressClaimModal.tsx?1b07","assets/images/blue-loader.svg","components/AddressInputPanel.tsx","theme/components/icons/uniTokenAnimated.tsx","components/claim/AddressClaimModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBlueLoader({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 94,\n    height: 94,\n    viewBox: \"0 0 94 94\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92 47C92 22.1472 71.8528 2 47 2C22.1472 2 2 22.1472 2 47C2 71.8528 22.1472 92 47 92\",\n    stroke: \"#2172E5\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueLoader);\nexport default __webpack_public_path__ + \"static/media/blue-loader.ca1aedeb13ab14d6ef4eb375580604ad.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { RowBetween } from \"components/deprecated/Row\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { flexColumnNoWrap } from \"theme/styles\";\nimport { Text } from \"ui/src\";\nimport { useENS } from \"uniswap/src/features/ens/useENS\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nconst InputPanel = styled.div`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.surface1};\n  z-index: 1;\n  width: 100%;\n`;\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => error ? theme.critical : theme.surface3};\n  transition:\n    border-color 300ms ${({ error }) => error ? \"step-end\" : \"step-start\"},\n    color 500ms ${({ error }) => error ? \"step-end\" : \"step-start\"};\n  background-color: ${({ theme }) => theme.surface1};\n`;\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`;\nconst Input = styled.input`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.surface1};\n  transition: color 300ms ${({ error }) => error ? \"step-end\" : \"step-start\"};\n  color: ${({ error, theme }) => error ? theme.critical : theme.neutral1};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 535;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.neutral3};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nexport default function AddressInputPanel({\n  id,\n  className = \"recipient-address-input\",\n  label,\n  placeholder,\n  value,\n  onChange\n}) {\n  const { t } = useTranslation();\n  const { chainId } = useAccount();\n  const theme = useTheme();\n  const { address, loading, name } = useENS({ nameOrAddress: value });\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value;\n      const withoutSpaces = input.replace(/\\s+/g, \"\");\n      onChange(withoutSpaces);\n    },\n    [onChange]\n  );\n  const error = Boolean(value.length > 0 && !loading && !address);\n  return <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text variant=\"body1\" color={theme.neutral2}>\r\n                {label ?? <Trans i18nKey=\"addressInput.recipient\" />}\r\n              </Text>\r\n              {address && chainId && <ExternalLink\n    href={getExplorerLink(chainId, name ?? address, ExplorerDataType.ADDRESS)}\n    style={{ fontSize: \"14px\" }}\n  >\r\n                  (<Trans i18nKey=\"common.viewOnExplorer\" />)\r\n                </ExternalLink>}\r\n            </RowBetween>\r\n            <Input\n    className={className}\n    type=\"text\"\n    autoComplete=\"off\"\n    autoCorrect=\"off\"\n    autoCapitalize=\"off\"\n    spellCheck=\"false\"\n    placeholder={placeholder ?? t(\"common.addressOrENS\")}\n    error={error}\n    pattern=\"^(0x[a-fA-F0-9]{40})$\"\n    onChange={handleInput}\n    value={value}\n  />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>;\n}\n","\"use strict\";\nimport styled, { keyframes } from \"styled-components\";\nconst rotateImg = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nexport const UniTokenAnimated = styled.img`\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n  padding: 2rem 0 0 0;\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n`;\n","\"use strict\";\nimport { isAddress } from \"@ethersproject/address\";\nimport Circle from \"assets/images/blue-loader.svg\";\nimport tokenLogo from \"assets/images/token-logo.png\";\nimport AddressInputPanel from \"components/AddressInputPanel\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { Break, CardBGImage, CardBGImageSmaller, CardNoise, CardSection } from \"components/earn/styled\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useState } from \"react\";\nimport { useClaimCallback, useUserHasAvailableClaim, useUserUnclaimedAmount } from \"state/claim/hooks\";\nimport { useIsTransactionPending } from \"state/transactions/hooks\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { CustomLightSpinner } from \"theme/components/icons/spinner\";\nimport { UniTokenAnimated } from \"theme/components/icons/uniTokenAnimated\";\nimport { Button, Flex, Text, View } from \"ui/src\";\nimport { CloseIconWithHover } from \"ui/src/components/icons/CloseIconWithHover\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { useENS } from \"uniswap/src/features/ens/useENS\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { logger } from \"utilities/src/logger/logger\";\nexport default function AddressClaimModal({ isOpen, closeModal }) {\n  const account = useAccount();\n  const { chainId } = account;\n  const [typed, setTyped] = useState(account.address ?? \"\");\n  function handleRecipientType(val) {\n    setTyped(val);\n  }\n  const { address: parsedAddress } = useENS({ nameOrAddress: typed });\n  const [attempting, setAttempting] = useState(false);\n  const { claimCallback } = useClaimCallback(parsedAddress);\n  const unclaimedAmount = useUserUnclaimedAmount(parsedAddress);\n  const hasAvailableClaim = useUserHasAvailableClaim(parsedAddress);\n  const [hash, setHash] = useState();\n  const claimPending = useIsTransactionPending(hash ?? \"\");\n  const claimConfirmed = hash && !claimPending;\n  function onClaim() {\n    setAttempting(true);\n    claimCallback().then((hash2) => {\n      setHash(hash2);\n    }).catch((error) => {\n      setAttempting(false);\n      logger.warn(\"AddressClaimModal\", \"onClaim\", \"error\", error);\n    });\n  }\n  function wrappedOnDismiss() {\n    setAttempting(false);\n    setHash(void 0);\n    setTyped(\"\");\n    closeModal();\n  }\n  const amount = unclaimedAmount?.toFixed(0, { groupSeparator: \",\" });\n  const unclaimedUni = unclaimedAmount?.toFixed(0, { groupSeparator: \",\" });\n  return <Modal name={ModalName.AddressClaim} isModalOpen={isOpen} onClose={wrappedOnDismiss} padding={0}>\r\n      {!attempting && <Flex gap=\"$gap12\" width=\"100%\">\r\n          <Flex\n    width=\"100%\"\n    position=\"relative\"\n    overflow=\"hidden\"\n    $platform-web={{ background: \"radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%)\" }}\n    borderRadius=\"$rounded12\"\n    boxShadow=\"0px 4px 10px rgba(0, 0, 0, 0.1)\"\n  >\r\n            <CardBGImage />\r\n            <CardNoise />\r\n            <CardSection gap=\"md\">\r\n              <Flex row justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Text color=\"$white\" fontWeight=\"$medium\">\r\n                  Claim ABX token\r\n                </Text>\r\n                <CloseIconWithHover onClose={wrappedOnDismiss} />\r\n              </Flex>\r\n              <Text color=\"$white\" fontWeight=\"$medium\" fontSize={36}>\r\n                {amount} ABX\r\n              </Text>\r\n            </CardSection>\r\n            <Break />\r\n          </Flex>\r\n          <AutoColumn gap=\"md\" style={{ padding: \"1rem\", paddingTop: \"0\" }} justify=\"center\">\r\n            <Text variant=\"subheading1\" color=\"$white\">\r\n              Enter an address to trigger a ABX claim. If the address has any claimable ABX it will be sent to them on\r\n              submission.\r\n            </Text>\r\n            <AddressInputPanel value={typed} onChange={handleRecipientType} />\r\n            {parsedAddress && !hasAvailableClaim && <Text color=\"$statusCritical\">Address has no available claim</Text>}\r\n            <Flex row>\r\n              <Button\n    variant=\"branded\"\n    size=\"large\"\n    isDisabled={!isAddress(parsedAddress ?? \"\") || !hasAvailableClaim}\n    borderRadius=\"$rounded12\"\n    mt=\"$spacing16\"\n    onPress={onClaim}\n  >\r\n                Claim ABX\r\n              </Button>\r\n            </Flex>\r\n          </AutoColumn>\r\n        </Flex>}\r\n      {(attempting || claimConfirmed) && <View\n    width=\"100%\"\n    p=\"$padding24\"\n    position=\"relative\"\n    alignItems=\"center\"\n    $platform-web={{\n      background: \"radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;\"\n    }}\n  >\r\n          <CardNoise />\r\n          <CardBGImageSmaller desaturate />\r\n          <Flex row alignItems=\"center\" width=\"100%\" pl=\"$padding16\" pt=\"$padding16\">\r\n            <CloseIconWithHover onClose={wrappedOnDismiss} />\r\n          </Flex>\r\n          <Flex justifyContent=\"center\" alignItems=\"center\" py={60}>\r\n            {!claimConfirmed ? <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" /> : <UniTokenAnimated width=\"72px\" src={tokenLogo} alt=\"ABX logo\" />}\r\n          </Flex>\r\n          <Flex gap={100} justifyContent=\"center\">\r\n            <Flex gap=\"$gap8\" justifyContent=\"center\" alignItems=\"center\">\r\n              <Text variant=\"heading1\" color=\"$black\">\r\n                {claimConfirmed ? \"Claimed\" : \"Claiming\"}\r\n              </Text>\r\n              {!claimConfirmed && <Text fontSize={36} color=\"#ff007a\" fontWeight=\"$medium\">\r\n                  {unclaimedUni} ABX\r\n                </Text>}\r\n              {parsedAddress && <Text variant=\"subheading1\" color=\"$black\">\r\n                  for {shortenAddress(parsedAddress)}\r\n                </Text>}\r\n            </Flex>\r\n            {claimConfirmed && <>\r\n                <Text variant=\"subheading1\" color=\"$black\">\r\n                  <span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉{\" \"}\r\n                  </span>\r\n                  {\"Welcome to team Unicorn :) \"}\r\n                  <span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉\r\n                  </span>\r\n                </Text>\r\n              </>}\r\n            {attempting && !hash && <Text variant=\"subheading1\" color=\"$black\" mb=\"$spacing16\">\r\n                Confirm this transaction in your wallet\r\n              </Text>}\r\n            {attempting && hash && !claimConfirmed && chainId && hash && <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)} style={{ zIndex: 99 }}>\r\n                View transaction on Explorer\r\n              </ExternalLink>}\r\n          </Flex>\r\n        </View>}\r\n    </Modal>;\n}\n"],"names":["InputPanel","styled","div","flexColumnNoWrap","theme","surface1","ContainerRow","error","critical","surface3","InputContainer","Input","input","neutral1","neutral3","AddressInputPanel","id","className","label","placeholder","value","onChange","t","useTranslation","chainId","useAccount","useTheme","address","loading","name","useENS","nameOrAddress","handleInput","useCallback","event","withoutSpaces","target","replace","Boolean","length","AutoColumn","gap","RowBetween","Text","variant","color","neutral2","Trans","i18nKey","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","style","fontSize","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","pattern","rotateImg","keyframes","UniTokenAnimated","img","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","AddressClaimModal","isOpen","closeModal","unclaimedAmount","account","typed","setTyped","useState","parsedAddress","attempting","setAttempting","claimCallback","useClaimCallback","useUserUnclaimedAmount","hasAvailableClaim","useUserHasAvailableClaim","hash","setHash","claimPending","useIsTransactionPending","claimConfirmed","wrappedOnDismiss","amount","toFixed","groupSeparator","unclaimedUni","Modal","ModalName","AddressClaim","isModalOpen","onClose","padding","Flex","width","position","overflow","$platform-web","background","borderRadius","boxShadow","CardBGImage","CardNoise","CardSection","fontWeight","CloseIconWithHover","Break","paddingTop","justify","val","Button","size","isDisabled","isAddress","mt","onPress","then","hash2","catch","logger","warn","View","p","alignItems","CardBGImageSmaller","desaturate","src","tokenLogo","alt","CustomLightSpinner","Circle","shortenAddress","span","role","aria-label","mb","TRANSACTION","zIndex"],"sourceRoot":""}