{"version":3,"file":"static/js/7767.a12fb8ef.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Vote/components/table/Table.tsx?cc5a","webpack://@uniswap/interface/./src/pages/Vote/components/VotingRound.tsx?eb38","webpack://@uniswap/interface/./src/pages/Vote/components/table/PoolsTable.tsx?a4f6","webpack://@uniswap/interface/./src/pages/Vote/components/LiquidityPoolVoting.tsx?32bc","webpack://@uniswap/interface/./src/pages/Vote/index.tsx?ca3e","webpack://@uniswap/interface/./src/pages/Vote/components/FilterPools.tsx?2895","components/Table/icons.tsx","pages/Vote/components/FilterPools.tsx","pages/Vote/components/SearchBar.tsx","pages/Vote/components/LiquidityPoolVoting.tsx","pages/Vote/components/VotingRound.tsx","pages/Vote/components/table/Table.tsx","pages/Vote/components/table/PoolsTable.tsx","pages/Vote/index.tsx","state/explore/topTokens.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nexport const DropdownIcon = (props) => <svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n    <path\n  d=\"M7.99954 13.1667C7.82887 13.1667 7.65818 13.1014 7.52818 12.9714L4.86152 10.3047C4.60085 10.044 4.60085 9.62267 4.86152 9.362C5.12218 9.10134 5.54356 9.10134 5.80422 9.362L7.99954 11.5573L10.1948 9.362C10.4555 9.10134 10.8769 9.10134 11.1376 9.362C11.3982 9.62267 11.3982 10.044 11.1376 10.3047L8.47089 12.9714C8.34089 13.1014 8.1702 13.1667 7.99954 13.1667Z\"\n  fill=\"#9B9B9B\"\n/>\r\n    <path\n  d=\"M10.6662 7.83336C10.4955 7.83336 10.3248 7.76805 10.1948 7.63805L7.99954 5.44274L5.80422 7.63805C5.54356 7.89872 5.12218 7.89872 4.86152 7.63805C4.60085 7.37738 4.60085 6.95601 4.86152 6.69534L7.52818 4.02868C7.78885 3.76801 8.21022 3.76801 8.47089 4.02868L11.1376 6.69534C11.3982 6.95601 11.3982 7.37738 11.1376 7.63805C11.0076 7.76805 10.8369 7.83336 10.6662 7.83336Z\"\n  fill=\"#9B9B9B\"\n/>\r\n  </svg>;\nexport const MissingDataBars = ({ color }) => <svg fill=\"none\" height=\"18\" viewBox=\"10 10 20 20\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\n  clipRule=\"evenodd\"\n  d=\"m19.5833 27.5h.8334c.8333 0 1.25-.4167 1.25-1.25v-2.2203l-3.3326 2.2802c.0197.7934.4361 1.1901 1.2492 1.1901zm-1.25-8.4596v-5.2904c0-.8333.4167-1.25 1.25-1.25h.8334c.8333 0 1.25.4167 1.25 1.25v3.0097zm5.8334 3.2788 3.3333-2.2807v6.2115c0 .8333-.4167 1.25-1.25 1.25h-.8333c-.8334 0-1.25-.4167-1.25-1.25zm-8.3866-1.5318-3.2801 2.2443v-1.7817c0-.8333.4167-1.25 1.25-1.25h.8333c.6614 0 1.0603.2625 1.1968.7874zm-2.862 6.4904-.3496-.511c.0672.2197.1837.39.3496.511z\"\n  fill={color}\n  fillRule=\"evenodd\"\n/>\r\n    <path d=\"m12.5 26.6667 15.8333-10.8333\" stroke={color} strokeLinecap=\"round\" strokeWidth=\"2\" />\r\n  </svg>;\nexport const MissingDataIcon = (props) => <svg fill=\"none\" height=\"40\" viewBox=\"0 0 40 40\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n    <rect fill=\"#fff\" fillOpacity=\".12\" height=\"40\" rx=\"12\" width=\"40\" />\r\n    <path\n  clipRule=\"evenodd\"\n  d=\"m19.5833 27.5h.8334c.8333 0 1.25-.4167 1.25-1.25v-2.2203l-3.3326 2.2802c.0197.7934.4361 1.1901 1.2492 1.1901zm-1.25-8.4596v-5.2904c0-.8333.4167-1.25 1.25-1.25h.8334c.8333 0 1.25.4167 1.25 1.25v3.0097zm5.8334 3.2788 3.3333-2.2807v6.2115c0 .8333-.4167 1.25-1.25 1.25h-.8333c-.8334 0-1.25-.4167-1.25-1.25zm-8.3866-1.5318-3.2801 2.2443v-1.7817c0-.8333.4167-1.25 1.25-1.25h.8333c.6614 0 1.0603.2625 1.1968.7874zm-2.862 6.4904-.3496-.511c.0672.2197.1837.39.3496.511z\"\n  fill=\"#9b9b9b\"\n  fillRule=\"evenodd\"\n/>\r\n    <path d=\"m12.5 26.6667 15.8333-10.8333\" stroke=\"#9b9b9b\" strokeLinecap=\"round\" strokeWidth=\"2\" />\r\n  </svg>;\n","\"use strict\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Text, styled as UiStyled } from \"ui/src\";\nimport { Check, Plus } from \"ui/src/components/icons\";\nexport default function FilterPools() {\n  const [activeFilter, setActiveFilter] = useState(\"Most Rewarded\");\n  const Button = styled.button`\n    padding: 8px 12px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    hover {\n      color: red;\n    }\n  `;\n  const TextCotainer = UiStyled(Text, {\n    variant: \"body3\",\n    color: \"$neutral1\",\n    cursor: \"pointer\",\n    hoverStyle: {\n      color: \"$accent1\"\n    }\n  });\n  return <Flex\n    row\n    alignItems=\"center\"\n    borderStyle=\"solid\"\n    borderWidth={1}\n    borderColor=\"$surface2\"\n    borderRadius={\"$rounded12\"}\n  >\n      <Button onClick={() => setActiveFilter(\"Most Rewarded\")}>\n        <TextCotainer>Most Rewarded</TextCotainer> {activeFilter === \"Most Rewarded\" ? <Checkmark /> : <PlusSign />}\n      </Button>\n      <Flex\n    row\n    borderLeftWidth={1}\n    borderRightWidth={1}\n    paddingVertical={\"$spacing2\"}\n    borderColor={\"$surface2\"}\n  >\n        <Button onClick={() => setActiveFilter(\"Least Rewarded\")}>\n          <TextCotainer>Least Rewarded</TextCotainer> {activeFilter === \"Least Rewarded\" ? <Checkmark /> : <PlusSign />}\n        </Button>\n      </Flex>\n      <Button onClick={() => setActiveFilter(\"All Pools\")}>\n        <TextCotainer>All Pools</TextCotainer> {activeFilter === \"All Pools\" ? <Checkmark /> : <PlusSign />}\n      </Button>\n    </Flex>;\n}\nconst Checkmark = function() {\n  return <Check color={\"$greenVibrant\"} size={\"$icon.12\"} />;\n};\nconst PlusSign = function() {\n  return <Plus color={\"$accent1\"} size={\"$icon.12\"} />;\n};\n","\"use strict\";\nimport { InterfaceElementName, InterfaceEventName } from \"@uniswap/analytics-events\";\nimport { ReactComponent as SearchIcon } from \"assets/svg/search.svg\";\nimport { exploreSearchStringAtom } from \"components/Tokens/state\";\nimport useDebounce from \"hooks/useDebounce\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\nimport { useEffect, useState } from \"react\";\nimport { transitions } from \"theme/styles\";\nimport { Flex, IconButton, Input, useSporeColors } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { zIndexes } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nexport default function SearchBar({ tab }) {\n  const currentString = useAtomValue(exploreSearchStringAtom);\n  const [localFilterString, setLocalFilterString] = useState(currentString);\n  const setFilterString = useUpdateAtom(exploreSearchStringAtom);\n  const debouncedLocalFilterString = useDebounce(localFilterString, 300);\n  const [isOpen, setIsOpen] = useState(false);\n  const colors = useSporeColors();\n  useEffect(() => {\n    setLocalFilterString(currentString);\n    if (currentString) {\n      setIsOpen(true);\n    }\n  }, [currentString]);\n  useEffect(() => {\n    setFilterString(debouncedLocalFilterString);\n  }, [debouncedLocalFilterString, setFilterString]);\n  const handleFocus = () => setIsOpen(true);\n  const handleBlur = () => {\n    if (localFilterString === \"\") {\n      setIsOpen(false);\n    }\n  };\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n  return <Trace\n    logFocus\n    eventOnTrigger={InterfaceEventName.EXPLORE_SEARCH_SELECTED}\n    element={InterfaceElementName.EXPLORE_SEARCH_INPUT}\n  >\r\n      <Flex\n    $md={{\n      position: isOpen ? \"absolute\" : \"relative\",\n      width: isOpen ? \"100%\" : \"auto\",\n      left: 0,\n      right: 0,\n      zIndex: zIndexes.mask,\n      height: 40\n    }}\n    height={40}\n    centered\n  >\r\n        <SearchIcon\n    fill={colors.neutral1.val}\n    style={{ position: \"absolute\", left: \"12px\" }}\n    width={20}\n    height={20}\n    pointerEvents=\"none\"\n  />\r\n        <Input\n    data-testid=\"explore-tokens-search-input\"\n    placeholder=\"Symbol or address...\"\n    placeholderTextColor=\"$neutral3\"\n    id=\"searchBar\"\n    autoComplete=\"off\"\n    value={localFilterString}\n    onChangeText={(value) => setLocalFilterString(value)}\n    backgroundColor=\"$surface1\"\n    borderRadius={12}\n    borderWidth={1}\n    borderColor={isOpen ? \"$accent1\" : \"$surface3\"}\n    height=\"100%\"\n    width={isOpen ? 230 : 0}\n    pl={34}\n    color=\"$neutral2\"\n    textOverflow=\"ellipsis\"\n    onFocus={handleFocus}\n    onBlur={handleBlur}\n    $platform-web={{\n      transitionDuration: transitions.duration.fast\n    }}\n    focusStyle={{\n      backgroundColor: \"$surface1\",\n      borderColor: \"$accent1\",\n      color: \"$neutral1\"\n    }}\n    hoverStyle={{\n      backgroundColor: \"$surface1\"\n    }}\n    $md={{\n      \"$platform-web\": {\n        transitionDuration: \"initial\"\n      },\n      width: isOpen ? \"100%\" : 0\n    }}\n  />\r\n        {isOpen && <Flex row centered position=\"absolute\" right={6} zIndex={zIndexes.mask}>\r\n            <IconButton size=\"xxsmall\" emphasis=\"secondary\" onPress={handleClose} icon={<X />} p={3} scale={0.8} />\r\n          </Flex>}\r\n      </Flex>\r\n    </Trace>;\n}\n","\"use strict\";\nimport { Flex, Text } from \"ui/src\";\nimport FilterPools from \"./FilterPools\";\nimport SearchBar from \"./SearchBar\";\nexport default function LiquidityPoolVoting() {\n  return <Flex>\n      <Text variant=\"heading3\">Select Liquidity Pools for Voting</Text>\n      <Flex mt=\"$spacing24\" row={true} gap=\"$gap16\" justifyContent=\"space-between\">\n        <FilterPools />\n        <SearchBar />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex, Separator, Text, styled as UiStyled } from \"ui/src\";\nexport default function VotingRound() {\n  const TextTypeOne = UiStyled(Text, {\n    variant: \"body3\",\n    color: \"$neutral2\",\n    fontSize: \"$small\"\n  });\n  const TextTypeTwo = UiStyled(TextTypeOne, {\n    color: \"$neutral3\"\n  });\n  return <Flex\n    row\n    borderStyle=\"solid\"\n    flexDirection=\"column\"\n    borderWidth={1}\n    borderColor=\"$surface2\"\n    borderRadius={\"$rounded12\"}\n    p={\"$spacing16\"}\n  >\n      <Flex className=\"top\" row justifyContent=\"space-between\" width={\"100%\"}>\n        <Flex className=\"left\" row gap={\"$spacing8\"} alignItems=\"center\">\n          <Text variant={\"body3\"}>Current voting round</Text>\n          <Text\n    variant={\"body3\"}\n    px={\"$spacing16\"}\n    py={\"$spacing6\"}\n    borderRadius={\"$roundedFull\"}\n    backgroundColor={\"$surface2\"}\n    textAlign=\"center\"\n  >\n            ends in 7 days\n          </Text>\n        </Flex>\n\n        <TextTypeTwo maxWidth={\"30rem\"} width={\"100%\"} variant={\"body3\"} color={\"$neutral3\"}>\n          Voters earn a share of transaction fees and incentives for helping govern how emissions are distributed.\n        </TextTypeTwo>\n      </Flex>\n\n      <Separator my={\"$spacing16\"} width={\"100%\"} />\n\n      <Flex className=\"bottom\" row justifyContent=\"space-between\" width={\"100%\"}>\n        <Flex className=\"left\" row centered gap={\"$spacing8\"}>\n          <TextTypeTwo>Total voting power this epoch:</TextTypeTwo>\n          <TextTypeOne>858.94M</TextTypeOne>\n        </Flex>\n\n        <Flex\n    className=\"right\"\n    maxWidth={\"30rem\"}\n    width={\"100%\"}\n    flexWrap=\"wrap\"\n    row\n    alignItems=\"center\"\n    gap={\"$spacing8\"}\n  >\n          {\n    /* total fees */\n  }\n          <Flex row gap={\"$spacing2\"} centered>\n            <TextTypeTwo>Total Fees:</TextTypeTwo>\n            <TextTypeOne> ~$2,809,68</TextTypeOne>\n          </Flex>\n          {\n    /* Total Incentives: */\n  }\n          <Flex row gap={\"$spacing2\"} centered>\n            <TextTypeTwo>Total Incentives:</TextTypeTwo>\n            <TextTypeOne> ~$12,478.6</TextTypeOne>\n          </Flex>\n          {\n    /*  */\n  }\n          <Flex row gap={\"$spacing2\"} centered>\n            <TextTypeTwo>Total Rewards:</TextTypeTwo>\n            <TextTypeOne> ~$2,791,18</TextTypeOne>\n          </Flex>\n          {\n    /*  */\n  }\n          <Flex row gap={\"$spacing2\"} centered>\n            <TextTypeTwo>New Emissions:</TextTypeTwo>\n            <TextTypeOne>6,347</TextTypeOne>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  flexRender,\n  getCoreRowModel,\n  useReactTable\n} from \"@tanstack/react-table\";\nimport { useParentSize } from \"@visx/responsive\";\nimport Loader from \"components/Icons/LoadingSpinner\";\nimport { ErrorModal } from \"components/Table/ErrorBox\";\nimport { ScrollButton } from \"components/Table/ScrollButton\";\nimport { TableSizeProvider, useTableSize } from \"components/Table/TableSizeProvider\";\nimport {\n  CellContainer,\n  HeaderRow,\n  LOAD_MORE_BOTTOM_OFFSET,\n  LoadingIndicator,\n  LoadingIndicatorContainer,\n  NoDataFoundTableRow,\n  SHOW_RETURN_TO_TOP_OFFSET,\n  TableBodyContainer,\n  TableContainer,\n  TableHead,\n  TableScrollMask\n} from \"components/Table/styled\";\nimport { getCommonPinningStyles } from \"components/Table/utils\";\nimport useDebounce from \"hooks/useDebounce\";\nimport { forwardRef, memo, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ScrollSync, ScrollSyncPane } from \"react-scroll-sync\";\nimport { ThemedText } from \"theme/components\";\nimport { Flex, styled } from \"ui/src\";\nimport { useSporeColors } from \"ui/src/hooks/useSporeColors\";\nimport { INTERFACE_NAV_HEIGHT, zIndexes } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nconst TableCell = memo(({ cell, colors }) => {\n  return <CellContainer style={getCommonPinningStyles(cell.column, colors)}>\r\n      {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n    </CellContainer>;\n});\nTableCell.displayName = \"TableCell\";\nconst DataRow = styled(Flex, {\n  row: true,\n  alignItems: \"center\",\n  width: \"fit-content\",\n  minWidth: \"100%\",\n  height: \"100%\"\n});\nconst TableRow = ({ row }) => {\n  const analyticsContext = useTrace();\n  const rowOriginal = row.original;\n  const linkState = rowOriginal.linkState;\n  const rowTestId = rowOriginal.testId;\n  const colors = useSporeColors();\n  const { width: tableWidth } = useTableSize();\n  const rowHeight = 180;\n  const cells = row.getVisibleCells().map((cell) => <TableCell key={cell.id} cell={cell} colors={colors} />);\n  return <Trace\n    logPress\n    element={rowOriginal.analytics?.elementName}\n    properties={{\n      ...rowOriginal.analytics?.properties,\n      ...analyticsContext\n    }}\n  >\r\n      <DataRow height={rowHeight} data-testid={rowTestId}>\r\n        {cells}\r\n      </DataRow>\r\n    </Trace>;\n};\nconst TableBody = forwardRef(({ table, loading, error }, ref) => {\n  const rows = table.getRowModel().rows;\n  if (loading || error) {\n    return <>\r\n        {Array.from({ length: 20 }, (_, rowIndex) => <DataRow key={`skeleton-row-${rowIndex}`}>\r\n            {table.getAllColumns().map((column, columnIndex) => <CellContainer key={`skeleton-row-${rowIndex}-column-${columnIndex}`}>\r\n                {flexRender(column.columnDef.cell, {})}\r\n              </CellContainer>)}\r\n          </DataRow>)}\r\n        {error && <ErrorModal\n      header={<Trans i18nKey=\"common.errorLoadingData.error\" />}\n      subtitle={<Trans i18nKey=\"error.dataUnavailable\" />}\n    />}\r\n      </>;\n  }\n  if (!rows.length) {\n    return <NoDataFoundTableRow py=\"$spacing20\">\r\n        <ThemedText.BodySecondary>\r\n          <Trans i18nKey=\"error.noData\" />\r\n        </ThemedText.BodySecondary>\r\n      </NoDataFoundTableRow>;\n  }\n  return <Flex ref={ref} position=\"relative\">\r\n      {rows.map((row) => <TableRow key={row.id} row={row} />)}\r\n    </Flex>;\n});\nTableBody.displayName = \"TableBody\";\nexport function Table({\n  columns,\n  data,\n  loading,\n  error,\n  loadMore,\n  maxWidth,\n  maxHeight,\n  defaultPinnedColumns = [],\n  forcePinning = false\n}) {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [showScrollRightButton, setShowScrollRightButton] = useState(false);\n  const [showScrollLeftButton, setShowScrollLeftButton] = useState(false);\n  const colors = useSporeColors();\n  const [pinnedColumns, setPinnedColumns] = useState([]);\n  const [scrollPosition, setScrollPosition] = useState({\n    distanceFromTop: 0,\n    distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n  });\n  const { distanceFromTop, distanceToBottom } = useDebounce(scrollPosition, 125);\n  const tableBodyRef = useRef(null);\n  const lastLoadedLengthRef = useRef(0);\n  const canLoadMore = useRef(true);\n  const isSticky = useMemo(() => !maxHeight, [maxHeight]);\n  const { parentRef, width, height, top, left } = useParentSize();\n  useEffect(() => {\n    const scrollableElement = maxHeight ? tableBodyRef.current : window;\n    if (scrollableElement === null) {\n      return void 0;\n    }\n    const updateScrollPosition = () => {\n      if (scrollableElement instanceof HTMLDivElement) {\n        const { scrollTop, scrollHeight, clientHeight } = scrollableElement;\n        setScrollPosition({\n          distanceFromTop: scrollTop,\n          distanceToBottom: scrollHeight - scrollTop - clientHeight\n        });\n      } else {\n        setScrollPosition({\n          distanceFromTop: scrollableElement.scrollY,\n          distanceToBottom: document.body.scrollHeight - scrollableElement.scrollY - scrollableElement.innerHeight\n        });\n      }\n    };\n    scrollableElement.addEventListener(\"scroll\", updateScrollPosition);\n    return () => scrollableElement.removeEventListener(\"scroll\", updateScrollPosition);\n  }, [loadMore, maxHeight, loadingMore, tableBodyRef]);\n  useEffect(() => {\n    if (distanceToBottom < LOAD_MORE_BOTTOM_OFFSET && !loadingMore && loadMore && canLoadMore.current && !error) {\n      setLoadingMore(true);\n      setScrollPosition({\n        distanceFromTop: SHOW_RETURN_TO_TOP_OFFSET,\n        distanceToBottom: LOAD_MORE_BOTTOM_OFFSET\n      });\n      loadMore({\n        onComplete: () => {\n          setLoadingMore(false);\n          if (data?.length === lastLoadedLengthRef.current) {\n            canLoadMore.current = false;\n          } else {\n            lastLoadedLengthRef.current = data?.length ?? 0;\n          }\n        }\n      });\n    }\n  }, [data?.length, distanceFromTop, distanceToBottom, error, loadMore, loading, loadingMore]);\n  const table = useReactTable({\n    columns,\n    data,\n    state: { columnPinning: { left: pinnedColumns } },\n    getCoreRowModel: getCoreRowModel()\n  });\n  useEffect(() => {\n    const resizeHandler = () => {\n      if (!defaultPinnedColumns.length) {\n        return;\n      }\n      if (maxWidth && window.innerWidth < maxWidth || forcePinning) {\n        setPinnedColumns(defaultPinnedColumns);\n      } else {\n        setPinnedColumns([]);\n      }\n    };\n    resizeHandler();\n    window.addEventListener(\"resize\", resizeHandler);\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler);\n    };\n  }, [maxWidth, defaultPinnedColumns, forcePinning, table]);\n  useEffect(() => {\n    const container = tableBodyRef.current?.parentElement;\n    if (!container || loading) {\n      return void 0;\n    }\n    const horizontalScrollHandler = () => {\n      const maxScrollLeft = container.scrollWidth - container.clientWidth;\n      const nextShowScrollRightButton = container.scrollLeft < maxScrollLeft;\n      if (showScrollRightButton !== nextShowScrollRightButton) {\n        setShowScrollRightButton(nextShowScrollRightButton);\n      }\n      const nextShowScrollLeftButton = container.scrollLeft > 0;\n      if (showScrollLeftButton !== nextShowScrollLeftButton) {\n        setShowScrollLeftButton(nextShowScrollLeftButton);\n      }\n    };\n    horizontalScrollHandler();\n    container.addEventListener(\"scroll\", horizontalScrollHandler);\n    return () => {\n      container.removeEventListener(\"scroll\", horizontalScrollHandler);\n    };\n  }, [loading, showScrollLeftButton, showScrollRightButton, tableBodyRef]);\n  const headerHeight = useMemo(() => {\n    const header = document.getElementById(\"AppHeader\");\n    return header?.clientHeight || INTERFACE_NAV_HEIGHT;\n  }, []);\n  const scrollButtonTop = useMemo(() => {\n    if (maxHeight) {\n      return height / 2;\n    } else if (isSticky) {\n      return (window.innerHeight - (headerHeight + 12)) / 2;\n    }\n    return 0;\n  }, [headerHeight, height, isSticky, maxHeight]);\n  const onScrollButtonPress = useCallback(\n    (direction) => () => {\n      const container = tableBodyRef.current?.parentElement;\n      if (!container) {\n        return;\n      }\n      const numPinnedVisibleColumns = table.getLeftVisibleLeafColumns().length;\n      const regularColumns = table.getAllColumns().slice(numPinnedVisibleColumns);\n      const widths = regularColumns.map((column) => column.getSize());\n      const cumulativeWidths = widths.reduce(\n        (acc, current) => {\n          const lastSum = acc.length > 0 ? acc[acc.length - 1] : 0;\n          return [...acc, lastSum + current];\n        },\n        [0]\n      );\n      if (direction === \"left\") {\n        cumulativeWidths.reverse();\n      }\n      const nextScrollLeft = cumulativeWidths.find((width2) => {\n        if (direction === \"left\") {\n          return width2 < container.scrollLeft;\n        }\n        return width2 > container.scrollLeft;\n      });\n      container.scrollTo({ left: nextScrollLeft, behavior: \"smooth\" });\n    },\n    [table]\n  );\n  const hasPinnedColumns = useMemo(() => pinnedColumns.length > 0, [pinnedColumns]);\n  const tableSize = useMemo(() => ({ width, height, top, left }), [width, height, top, left]);\n  return <TableSizeProvider value={tableSize}>\r\n      <ScrollSync horizontal>\r\n        <TableContainer maxWidth={maxWidth} maxHeight={maxHeight} position=\"relative\" ref={parentRef}>\r\n          <TableHead $isSticky={isSticky} $top={headerHeight}>\r\n            {hasPinnedColumns && <>\r\n                <Flex\n    position=\"absolute\"\n    top={scrollButtonTop}\n    left={table.getLeftTotalSize()}\n    pl=\"$spacing12\"\n    zIndex={zIndexes.default}\n  >\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"left\")}\n    opacity={showScrollLeftButton ? 1 : 0}\n    direction=\"left\"\n  />\r\n                </Flex>\r\n                <Flex position=\"absolute\" top={scrollButtonTop} right={0} pr=\"$spacing12\" zIndex={zIndexes.default}>\r\n                  <ScrollButton\n    onPress={onScrollButtonPress(\"right\")}\n    opacity={showScrollRightButton ? 1 : 0}\n    direction=\"right\"\n  />\r\n                </Flex>\r\n                <TableScrollMask\n    top={isSticky ? \"$spacing12\" : 0}\n    zIndex={zIndexes.dropdown - 1}\n    borderTopRightRadius=\"$rounded20\"\n  />\r\n              </>}\r\n            <ScrollSyncPane group=\"table-sync\">\r\n              <HeaderRow dimmed={!!error}>\r\n                {table.getFlatHeaders().map((header) => <CellContainer key={header.id} style={getCommonPinningStyles(header.column, colors)}>\r\n                    {flexRender(header.column.columnDef.header, header.getContext())}\r\n                  </CellContainer>)}\r\n              </HeaderRow>\r\n            </ScrollSyncPane>\r\n          </TableHead>\r\n          {hasPinnedColumns && <TableScrollMask zIndex={zIndexes.default} borderBottomRightRadius=\"$rounded20\" />}\r\n          <ScrollSyncPane group=\"table-sync\">\r\n            <TableBodyContainer maxHeight={maxHeight ? maxHeight - headerHeight : \"unset\"}>\r\n              <TableBody\n    loading={loading}\n    error={error}\n    table={table}\n    ref={tableBodyRef}\n  />\r\n            </TableBodyContainer>\r\n          </ScrollSyncPane>\r\n          {loadingMore && <LoadingIndicatorContainer>\r\n              <LoadingIndicator>\r\n                <Loader />\r\n                <Trans i18nKey=\"common.loading\" />\r\n              </LoadingIndicator>\r\n            </LoadingIndicatorContainer>}\r\n        </TableContainer>\r\n      </ScrollSync>\r\n    </TableSizeProvider>;\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { InterfaceElementName } from \"@uniswap/analytics-events\";\nimport QueryTokenLogo from \"components/Logo/QueryTokenLogo\";\nimport { Cell } from \"components/Table/Cell\";\nimport {\n  ClickableHeaderRow,\n  EllipsisText,\n  HeaderArrow,\n  HeaderCell,\n  HeaderSortText,\n  TableText\n} from \"components/Table/styled\";\nimport { DeltaArrow } from \"components/Tokens/TokenDetails/Delta\";\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from \"components/Tokens/constants\";\nimport {\n  TokenSortMethod,\n  exploreSearchStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom,\n  useSetSortMethod\n} from \"components/Tokens/state\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { OrderDirection, getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport useSimplePagination from \"hooks/useSimplePagination\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { memo, useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { TABLE_PAGE_SIZE, giveExploreStatDefaultValue } from \"state/explore\";\nimport { useTopTokens as useRestTopTokens } from \"state/explore/topTokens\";\nimport { Flex, Separator, Text, styled, useMedia } from \"ui/src\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { fromGraphQLChain, toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainIdFromChainUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { Table } from \"./Table\";\nconst TableWrapper = styled(Flex, {\n  m: \"0 auto\",\n  maxWidth: MAX_WIDTH_MEDIA_BREAKPOINT\n});\nfunction TokenDescription({ token }) {\n  return <Flex>\r\n      <Flex row gap=\"$gap8\" alignItems=\"center\" justifyContent=\"flex-start\">\r\n        <Flex row alignItems=\"center\" gap={\"$gap8\"} pr=\"$spacing4\">\r\n          <QueryTokenLogo token={token} size={40} />{\" \"}\r\n          <Flex ml={-15} height={40} width={40} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n            <img height={25} width={25} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n          </Flex>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\">\r\n          <Flex gap=\"$gap8\">\r\n            <EllipsisText data-testid=\"token-names\"> {token.symbol} / ABX </EllipsisText>\r\n          </Flex>\r\n          <Text fontSize={\"$small\"} color={\"$blueBase\"}>\r\n            Concentrated Volatile 200\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Separator my={\"$spacing12\"} />\r\n      <EllipsisText color={\"$neutral3\"}>TVL ~$145,481.92</EllipsisText>\r\n    </Flex>;\n}\nexport const PoolsTable = memo(function PoolsTable2() {\n  const { topTokens, tokenSortRank, isLoading, sparklines, isError } = useRestTopTokens();\n  console.log(useRestTopTokens());\n  const { page, loadMore } = useSimplePagination();\n  return <TableWrapper data-testid=\"top-tokens-explore-table\">\r\n      <TokenTable\n    tokens={topTokens?.slice(0, page * TABLE_PAGE_SIZE)}\n    tokenSortRank={tokenSortRank}\n    sparklines={sparklines}\n    loading={isLoading}\n    loadMore={loadMore}\n    error={isError}\n  />\r\n    </TableWrapper>;\n});\nconst HEADER_TEXT = {\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: \"Total Rewards\",\n  [TokenSortMethod.PRICE]: \"Fees\",\n  [TokenSortMethod.HOUR_CHANGE]: \"Total Rewards\",\n  [TokenSortMethod.DAY_CHANGE]: \"Incentives\",\n  [TokenSortMethod.VOLUME]: \"vAPR\"\n};\nexport const HEADER_DESCRIPTIONS = {\n  [TokenSortMethod.PRICE]: void 0,\n  [TokenSortMethod.DAY_CHANGE]: void 0,\n  [TokenSortMethod.HOUR_CHANGE]: void 0,\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: <Trans i18nKey=\"stats.fdv.description\" />,\n  [TokenSortMethod.VOLUME]: <Trans i18nKey=\"stats.volume.description\" />\n};\nfunction TokenTableHeader({\n  category,\n  isCurrentSortMethod,\n  direction\n}) {\n  const handleSortCategory = useSetSortMethod(category);\n  return <Flex width=\"100%\">\r\n      <MouseoverTooltip\n    disabled={!HEADER_DESCRIPTIONS[category]}\n    size={TooltipSize.Max}\n    text={HEADER_DESCRIPTIONS[category]}\n    placement=\"top\"\n  >\r\n        <ClickableHeaderRow justifyContent=\"flex-end\" onPress={handleSortCategory} group>\r\n          <HeaderArrow orderDirection={direction} size={14} opacity={isCurrentSortMethod ? 1 : 0} />\r\n          <HeaderSortText active={isCurrentSortMethod} variant=\"body3\">\r\n            {HEADER_TEXT[category]}\r\n          </HeaderSortText>\r\n        </ClickableHeaderRow>\r\n      </MouseoverTooltip>\r\n    </Flex>;\n}\nfunction TokenTable({\n  tokens,\n  tokenSortRank,\n  sparklines,\n  loading,\n  error,\n  loadMore\n}) {\n  const { formatFiatPrice, formatNumber, formatDelta } = useFormatter();\n  const { defaultChainId } = useEnabledChains();\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const orderDirection = sortAscending ? OrderDirection.Asc : OrderDirection.Desc;\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const timePeriod = useAtomValue(filterTimeAtom);\n  const tokenTableValues = useMemo(\n    () => tokens?.map((token, i) => {\n      const delta1d = token.pricePercentChange1Day?.value;\n      const currCurrencyId = buildCurrencyId(fromGraphQLChain(token.chain) ?? UniverseChainId.Mainnet, token.address);\n      const tokenSortIndex = tokenSortRank[currCurrencyId];\n      const chainId = getChainIdFromChainUrlParam(token.chain.toLowerCase());\n      const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n      return {\n        index: tokenSortIndex,\n        tokenDescription: <TokenDescription token={unwrappedToken} />,\n        price: giveExploreStatDefaultValue(token.price?.value),\n        testId: `token-table-row-${unwrappedToken.address}`,\n        percentChange1d: <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n              <DeltaArrow delta={delta1d} formattedDelta={formatDelta(delta1d)} />\r\n              <TableText>{formatDelta(delta1d)}</TableText>\r\n            </Flex>,\n        fdv: giveExploreStatDefaultValue(token.fullyDilutedValuation?.value),\n        volume: giveExploreStatDefaultValue(token.volume?.value),\n        link: getTokenDetailsURL({\n          address: unwrappedToken.address,\n          chain: toGraphQLChain(chainId ?? defaultChainId)\n        }),\n        analytics: {\n          elementName: InterfaceElementName.TOKENS_TABLE_ROW,\n          properties: {\n            chain_id: chainId,\n            token_address: token.address,\n            token_symbol: token.symbol,\n            token_list_index: i,\n            token_list_rank: tokenSortIndex,\n            token_list_length: tokens.length,\n            time_frame: timePeriod,\n            search_token_address_input: filterString\n          }\n        },\n        linkState: { preloadedLogoSrc: token.logo }\n      };\n    }) ?? [],\n    [defaultChainId, filterString, formatDelta, sparklines, timePeriod, tokenSortRank, tokens]\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const media = useMedia();\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    const filteredColumns = [\n      // !media.lg\n      //   ? columnHelper.accessor((row) => row.index, {\n      //       id: 'index',\n      //       size: 60,\n      //       header: () => (\n      //         <HeaderCell justifyContent=\"flex-start\">\n      //           <Text variant=\"body3\" color=\"$neutral2\">\n      //             #\n      //           </Text>\n      //         </HeaderCell>\n      //       ),\n      //       cell: (index) => (\n      //         <Cell height=\"100%\" justifyContent=\"flex-start\" loading={showLoadingSkeleton}>\n      //           <TableText>{index.getValue?.()}</TableText>\n      //         </Cell>\n      //       ),\n      //     })\n      //   : null,\n      columnHelper.accessor((row) => row.tokenDescription, {\n        id: \"tokenDescription\",\n        size: media.lg ? 150 : 300,\n        header: () => <HeaderCell justifyContent=\"flex-start\">\r\n            <Text variant=\"body3\" color=\"$neutral2\" fontWeight=\"500\">\r\n              Pools\r\n            </Text>\r\n          </HeaderCell>,\n        cell: (tokenDescription) => <Cell height=\"100%\" justifyContent=\"flex-start\" loading={showLoadingSkeleton} testId=\"name-cell\">\r\n            <TableText>{tokenDescription.getValue?.()}</TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.price, {\n        id: \"price\",\n        maxSize: 140,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.PRICE}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.PRICE}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (price) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex\n          height={\"100%\"}\n          width={\"100%\"}\n          my={\"$spacing1\"}\n          py={\"$spacing12\"}\n          px={\"$spacing12\"}\n          backgroundColor={\"$slate\"}\n          borderRadius={\"$rounded4\"}\n          flexDirection=\"column\"\n        >\r\n              <TableText textAlign=\"right\">\r\n                {\n          /* A simple 0 price indicates the price is not currently available from the api */\n        }\r\n                {price.getValue?.() === 0 ? \"-\" : formatFiatPrice({ price: price.getValue?.(), type: NumberType.FiatTokenPrice })}\r\n              </TableText>\r\n              <Separator my={\"$spacing8\"} />\r\n              <Flex gap={\"$gap8\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  55.34 ABX\r\n                </TableText>\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  136,971.19 ABX\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.percentChange1d, {\n        id: \"percentChange1d\",\n        maxSize: 120,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.DAY_CHANGE}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.DAY_CHANGE}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (percentChange1d) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex\n          height={\"100%\"}\n          width={\"100%\"}\n          my={\"$spacing1\"}\n          py={\"$spacing12\"}\n          px={\"$spacing12\"}\n          backgroundColor={\"$slate\"}\n          borderRadius={\"$rounded4\"}\n          flexDirection=\"column\"\n        >\r\n              {\n          /* <TableText>{percentChange1d.getValue?.()}</TableText> */\n        }\r\n              <TableText fontSize={\"$micro\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                No available incentives\r\n              </TableText>\r\n              <Separator my={\"$spacing8\"} />\r\n              <Flex gap={\"$gap8\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  55.34 ABX\r\n                </TableText>\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  136,971.19 ABX\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.fdv, {\n        id: \"fdv\",\n        maxSize: 120,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <TokenTableHeader\n          category={TokenSortMethod.FULLY_DILUTED_VALUATION}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.FULLY_DILUTED_VALUATION}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (fdv) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex\n          height={\"100%\"}\n          width={\"100%\"}\n          my={\"$spacing1\"}\n          py={\"$spacing12\"}\n          px={\"$spacing12\"}\n          backgroundColor={\"$slate\"}\n          borderRadius={\"$rounded4\"}\n          flexDirection=\"column\"\n        >\r\n              <EllipsisText textAlign=\"right\">\r\n                {formatNumber({ input: fdv.getValue?.(), type: NumberType.FiatTokenStats })}\r\n              </EllipsisText>\r\n              <Separator my={\"$spacing8\"} />\r\n              <Flex gap={\"$gap8\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  Fees + Incentives\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.volume, {\n        id: \"volume\",\n        maxSize: 150,\n        header: () => <HeaderCell>\r\n            <TokenTableHeader\n          category={TokenSortMethod.VOLUME}\n          isCurrentSortMethod={sortMethod === TokenSortMethod.VOLUME}\n          direction={orderDirection}\n        />\r\n          </HeaderCell>,\n        cell: (volume) => <Cell height=\"100%\" loading={showLoadingSkeleton} testId=\"fees-cell\">\r\n            <Flex\n          height={\"100%\"}\n          width={\"100%\"}\n          my={\"$spacing1\"}\n          py={\"$spacing12\"}\n          px={\"$spacing12\"}\n          backgroundColor={\"$slate\"}\n          borderRadius={\"$rounded4\"}\n          flexDirection=\"column\"\n        >\r\n              <EllipsisText textAlign=\"right\">\r\n                {formatNumber({ input: volume.getValue?.(), type: NumberType.FiatTokenStats })}\r\n              </EllipsisText>\r\n              <Separator my={\"$spacing8\"} />\r\n              <Flex gap={\"$gap8\"} justifyContent=\"flex-end\">\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  ~ 0.00059% Votes\r\n                </TableText>\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral3\"}>\r\n                  5,100.27 ABX\r\n                </TableText>\r\n              </Flex>\r\n              <Flex mt={\"$spacing12\"}>\r\n                <TableText fontSize={\"$small\"} textAlign=\"right\" color={\"$neutral2\"}>\r\n                  Vote\r\n                </TableText>\r\n              </Flex>\r\n            </Flex>\r\n          </Cell>\n      })\n    ];\n    return filteredColumns.filter((column) => Boolean(column));\n  }, [formatFiatPrice, formatNumber, orderDirection, showLoadingSkeleton, sortMethod, media]);\n  return <Table\n    columns={columns}\n    data={tokenTableValues}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxWidth={1200}\n    defaultPinnedColumns={[\"index\", \"tokenDescription\"]}\n  />;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { ExploreContextProvider } from \"state/explore\";\nimport { Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport LiquidityPoolVoting from \"./components/LiquidityPoolVoting\";\nimport VotingRound from \"./components/VotingRound\";\nimport { PoolsTable } from \"./components/table/PoolsTable\";\nexport default function Vote() {\n  return <Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={1200}\n    pb={\"$spacing40\"}\n    $xl={{\n      px: \"$spacing12\",\n      maxWidth: 1200,\n      mx: \"auto\"\n    }}\n  >\r\n      <VotingRound />\r\n\r\n      <Flex mt={\"$spacing48\"}>\r\n        <LiquidityPoolVoting />\r\n      </Flex>\r\n\r\n      <Flex mt={\"$spacing24\"}>\r\n        <Trace logImpression page={InterfacePageName.VOTE_PAGE}>\r\n          <ExploreContextProvider>\r\n            <PoolsTable />\r\n          </ExploreContextProvider>\r\n        </Trace>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  TokenSortMethod,\n  exploreSearchStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom\n} from \"components/Tokens/state\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { TimePeriod, unwrapToken } from \"graphql/data/util\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { useContext, useMemo } from \"react\";\nimport { ExploreContext, giveExploreStatDefaultValue } from \"state/explore\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { fromGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nimport { getChainIdFromChainUrlParam } from \"utils/chainParams\";\nconst TokenSortMethods = {\n  [TokenSortMethod.PRICE]: (a, b) => giveExploreStatDefaultValue(b?.price?.value) - giveExploreStatDefaultValue(a?.price?.value),\n  [TokenSortMethod.DAY_CHANGE]: (a, b) => giveExploreStatDefaultValue(b?.pricePercentChange1Day?.value) - giveExploreStatDefaultValue(a?.pricePercentChange1Day?.value),\n  [TokenSortMethod.HOUR_CHANGE]: (a, b) => giveExploreStatDefaultValue(b?.pricePercentChange1Hour?.value) - giveExploreStatDefaultValue(a?.pricePercentChange1Hour?.value),\n  [TokenSortMethod.VOLUME]: (a, b) => giveExploreStatDefaultValue(b?.volume?.value) - giveExploreStatDefaultValue(a?.volume?.value),\n  [TokenSortMethod.FULLY_DILUTED_VALUATION]: (a, b) => giveExploreStatDefaultValue(b?.fullyDilutedValuation?.value) - giveExploreStatDefaultValue(a?.fullyDilutedValuation?.value)\n};\nfunction convertPriceHistoryToPricePoints(priceHistory) {\n  return priceHistory?.values.map((value, index) => {\n    return {\n      timestamp: Number(priceHistory.start) + index * Number(priceHistory.step),\n      value\n    };\n  });\n}\nfunction convertTokenStatsToTokenStat(tokenStats, duration) {\n  let volume;\n  let priceHistory;\n  switch (duration) {\n    case TimePeriod.HOUR:\n      volume = tokenStats.volume1Hour;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryHour);\n      break;\n    case TimePeriod.DAY:\n      volume = tokenStats.volume1Day;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryDay);\n      break;\n    case TimePeriod.WEEK:\n      volume = tokenStats.volume1Week;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryWeek);\n      break;\n    case TimePeriod.MONTH:\n      volume = tokenStats.volume1Month;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryMonth);\n      break;\n    case TimePeriod.YEAR:\n      volume = tokenStats.volume1Year;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryYear);\n      break;\n    default:\n      volume = tokenStats.volume1Day;\n      priceHistory = convertPriceHistoryToPricePoints(tokenStats.priceHistoryDay);\n  }\n  return {\n    ...tokenStats,\n    priceHistory,\n    volume\n  };\n}\nfunction useSortedTokens(tokens) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  return useMemo(() => {\n    if (!tokens) {\n      return void 0;\n    }\n    const tokenArray = Array.from(tokens).sort(TokenSortMethods[sortMethod]);\n    return sortAscending ? tokenArray.reverse() : tokenArray;\n  }, [tokens, sortMethod, sortAscending]);\n}\nfunction useFilteredTokens(tokens) {\n  const filterString = useAtomValue(exploreSearchStringAtom);\n  const lowercaseFilterString = useMemo(() => filterString.toLowerCase(), [filterString]);\n  return useMemo(() => {\n    if (!tokens) {\n      return void 0;\n    }\n    let returnTokens = tokens;\n    if (lowercaseFilterString) {\n      returnTokens = returnTokens?.filter((token) => {\n        const addressIncludesFilterString = token?.address?.toLowerCase().includes(lowercaseFilterString);\n        const projectNameIncludesFilterString = token?.project?.name?.toLowerCase().includes(lowercaseFilterString);\n        const nameIncludesFilterString = token?.name?.toLowerCase().includes(lowercaseFilterString);\n        const symbolIncludesFilterString = token?.symbol?.toLowerCase().includes(lowercaseFilterString);\n        return projectNameIncludesFilterString || nameIncludesFilterString || symbolIncludesFilterString || addressIncludesFilterString;\n      });\n    }\n    return returnTokens;\n  }, [tokens, lowercaseFilterString]);\n}\nconst MAX_TOP_TOKENS = 100;\nexport function useTopTokens() {\n  const duration = useAtomValue(filterTimeAtom);\n  const {\n    exploreStats: { data, isLoading, error: isError }\n  } = useContext(ExploreContext);\n  const tokenStats = data?.stats?.tokenStats?.map(\n    (tokenStat) => convertTokenStatsToTokenStat(tokenStat, duration)\n  );\n  const sortedTokenStats = useSortedTokens(tokenStats);\n  const tokenSortRank = useMemo(\n    () => sortedTokenStats?.reduce((acc, cur, i) => {\n      if (!cur?.address) {\n        return acc;\n      }\n      const currCurrencyId = buildCurrencyId(fromGraphQLChain(cur.chain) ?? UniverseChainId.Mainnet, cur.address);\n      return {\n        ...acc,\n        [currCurrencyId]: i + 1\n      };\n    }, {}) ?? {},\n    [sortedTokenStats]\n  );\n  const filteredTokens = useFilteredTokens(sortedTokenStats)?.slice(0, MAX_TOP_TOKENS);\n  const sparklines = useMemo(() => {\n    const unwrappedTokens = filteredTokens?.map((tokenStat) => {\n      const chainId = getChainIdFromChainUrlParam(tokenStat?.chain.toLowerCase());\n      return chainId ? unwrapToken(chainId, tokenStat) : void 0;\n    });\n    const map = {};\n    unwrappedTokens?.forEach((current) => {\n      if (current !== void 0) {\n        const address = current?.address === NATIVE_CHAIN_ID ? NATIVE_CHAIN_ID : current?.address?.toLowerCase();\n        map[address] = current?.priceHistory;\n      }\n    });\n    return map;\n  }, [filteredTokens]);\n  return { topTokens: filteredTokens, sparklines, tokenSortRank, isLoading, isError };\n}\n"],"names":["DropdownIcon","props","svg","width","height","viewBox","fill","xmlns","path","d","MissingDataBars","color","clipRule","fillRule","stroke","strokeLinecap","strokeWidth","MissingDataIcon","rect","fillOpacity","rx","_cn2","_cn","FilterPools","activeFilter","setActiveFilter","useState","Button","styled","button","TextCotainer","UiStyled","Text","variant","cursor","hoverStyle","div","className","onClick","Checkmark","PlusSign","Check","size","Plus","SearchBar","tab","currentString","useAtomValue","exploreSearchStringAtom","localFilterString","setLocalFilterString","setFilterString","useUpdateAtom","debouncedLocalFilterString","useDebounce","isOpen","setIsOpen","colors","useSporeColors","useEffect","Trace","logFocus","eventOnTrigger","InterfaceEventName","EXPLORE_SEARCH_SELECTED","element","InterfaceElementName","EXPLORE_SEARCH_INPUT","Flex","$md","position","left","right","zIndex","zIndexes","mask","centered","SearchIcon","neutral1","val","style","pointerEvents","Input","data-testid","placeholder","placeholderTextColor","id","autoComplete","value","onChangeText","backgroundColor","borderRadius","borderWidth","borderColor","pl","textOverflow","onFocus","handleFocus","onBlur","handleBlur","$platform-web","transitionDuration","transitions","duration","fast","focusStyle","row","IconButton","emphasis","onPress","handleClose","icon","X","p","scale","LiquidityPoolVoting","_cn8","_cn7","_cn6","_cn5","_cn4","_cn3","VotingRound","TextTypeOne","fontSize","TextTypeTwo","px","py","textAlign","maxWidth","TableCell","memo","cell","CellContainer","getCommonPinningStyles","column","flexRender","columnDef","getContext","displayName","DataRow","alignItems","minWidth","TableRow","rowOriginal","analyticsContext","useTrace","original","rowTestId","linkState","testId","tableWidth","useTableSize","cells","getVisibleCells","map","logPress","analytics","elementName","properties","TableBody","forwardRef","table","loading","error","ref","rows","getRowModel","Array","from","length","_","rowIndex","getAllColumns","columnIndex","ErrorModal","header","Trans","i18nKey","subtitle","NoDataFoundTableRow","ThemedText","BodySecondary","Table","columns","data","loadMore","maxHeight","defaultPinnedColumns","forcePinning","loadingMore","setLoadingMore","showScrollRightButton","setShowScrollRightButton","showScrollLeftButton","setShowScrollLeftButton","pinnedColumns","setPinnedColumns","scrollPosition","setScrollPosition","distanceFromTop","distanceToBottom","LOAD_MORE_BOTTOM_OFFSET","tableBodyRef","useRef","lastLoadedLengthRef","canLoadMore","isSticky","useMemo","parentRef","top","useParentSize","scrollableElement","current","window","updateScrollPosition","HTMLDivElement","scrollTop","scrollHeight","clientHeight","scrollY","document","body","innerHeight","addEventListener","removeEventListener","SHOW_RETURN_TO_TOP_OFFSET","onComplete","useReactTable","state","columnPinning","getCoreRowModel","resizeHandler","innerWidth","container","parentElement","horizontalScrollHandler","maxScrollLeft","scrollWidth","clientWidth","nextShowScrollRightButton","scrollLeft","nextShowScrollLeftButton","headerHeight","getElementById","INTERFACE_NAV_HEIGHT","scrollButtonTop","onScrollButtonPress","useCallback","direction","numPinnedVisibleColumns","getLeftVisibleLeafColumns","cumulativeWidths","slice","getSize","reduce","acc","lastSum","reverse","nextScrollLeft","find","width2","scrollTo","behavior","hasPinnedColumns","tableSize","TableSizeProvider","ScrollSync","horizontal","TableContainer","TableHead","$isSticky","$top","getLeftTotalSize","default","ScrollButton","opacity","pr","TableScrollMask","dropdown","borderTopRightRadius","ScrollSyncPane","group","HeaderRow","dimmed","getFlatHeaders","borderBottomRightRadius","TableBodyContainer","LoadingIndicatorContainer","LoadingIndicator","Loader","_cn1","_cn0","_cn9","TableWrapper","m","MAX_WIDTH_MEDIA_BREAKPOINT","TokenDescription","token","QueryTokenLogo","img","src","alt","EllipsisText","symbol","PoolsTable","topTokens","tokenSortRank","isLoading","sparklines","isError","useRestTopTokens","console","log","page","useSimplePagination","TokenTable","tokens","TABLE_PAGE_SIZE","HEADER_TEXT","TokenSortMethod","FULLY_DILUTED_VALUATION","PRICE","HOUR_CHANGE","DAY_CHANGE","VOLUME","HEADER_DESCRIPTIONS","TokenTableHeader","category","isCurrentSortMethod","handleSortCategory","useSetSortMethod","MouseoverTooltip","disabled","TooltipSize","Max","text","placement","ClickableHeaderRow","justifyContent","HeaderArrow","orderDirection","HeaderSortText","active","formatFiatPrice","formatNumber","formatDelta","useFormatter","defaultChainId","useEnabledChains","sortAscendingAtom","OrderDirection","Asc","Desc","sortMethod","sortMethodAtom","filterString","timePeriod","filterTimeAtom","tokenTableValues","i","delta1d","pricePercentChange1Day","currCurrencyId","buildCurrencyId","fromGraphQLChain","chain","UniverseChainId","Mainnet","address","tokenSortIndex","chainId","getChainIdFromChainUrlParam","toLowerCase","unwrappedToken","unwrapToken","index","tokenDescription","price","giveExploreStatDefaultValue","percentChange1d","DeltaArrow","delta","formattedDelta","TableText","fdv","fullyDilutedValuation","volume","link","getTokenDetailsURL","toGraphQLChain","TOKENS_TABLE_ROW","chain_id","token_address","token_symbol","token_list_index","token_list_rank","token_list_length","time_frame","search_token_address_input","preloadedLogoSrc","logo","showLoadingSkeleton","media","useMedia","columnHelper","createColumnHelper","accessor","lg","HeaderCell","fontWeight","Cell","getValue","maxSize","type","NumberType","FiatTokenPrice","input","FiatTokenStats","filter","Boolean","Vote","logImpression","InterfacePageName","VOTE_PAGE","ExploreContextProvider","TokenSortMethods","a","b","pricePercentChange1Hour","convertPriceHistoryToPricePoints","priceHistory","values","timestamp","Number","start","step","MAX_TOP_TOKENS","useTopTokens","useFilteredTokens","exploreStats","useContext","ExploreContext","tokenStats","stats","tokenStat","TimePeriod","HOUR","volume1Hour","priceHistoryHour","DAY","volume1Day","priceHistoryDay","WEEK","volume1Week","priceHistoryWeek","MONTH","volume1Month","priceHistoryMonth","YEAR","volume1Year","priceHistoryYear","convertTokenStatsToTokenStat","sortedTokenStats","sortAscending","tokenArray","sort","useSortedTokens","cur","filteredTokens","lowercaseFilterString","returnTokens","addressIncludesFilterString","includes","projectNameIncludesFilterString","project","name","nameIncludesFilterString","symbolIncludesFilterString","unwrappedTokens","forEach","NATIVE_CHAIN_ID"],"sourceRoot":""}