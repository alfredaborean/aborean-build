{"version":3,"file":"static/js/3005.40a61e03.chunk.js","mappings":"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","sources":["../node_modules/viem/_esm/errors/ccip.js","../node_modules/viem/_esm/utils/ccip.js"],"sourcesContent":["import{stringify}from\"../utils/stringify.js\";import{BaseError}from\"./base.js\";import{getUrl}from\"./utils.js\";export class OffchainLookupError extends BaseError{constructor({callbackSelector:callbackSelector,cause:cause,data:data,extraData:extraData,sender:sender,urls:urls}){super(cause.shortMessage||\"An error occurred while fetching for an offchain result.\",{cause:cause,metaMessages:[...cause.metaMessages||[],cause.metaMessages?.length?\"\":[],\"Offchain Gateway Call:\",urls&&[\"  Gateway URL(s):\",...urls.map((url=>`    ${getUrl(url)}`))],`  Sender: ${sender}`,`  Data: ${data}`,`  Callback selector: ${callbackSelector}`,`  Extra data: ${extraData}`].flat(),name:\"OffchainLookupError\"})}}export class OffchainLookupResponseMalformedError extends BaseError{constructor({result:result,url:url}){super(\"Offchain gateway response is malformed. Response data must be a hex value.\",{metaMessages:[`Gateway URL: ${getUrl(url)}`,`Response: ${stringify(result)}`],name:\"OffchainLookupResponseMalformedError\"})}}export class OffchainLookupSenderMismatchError extends BaseError{constructor({sender:sender,to:to}){super(\"Reverted sender address does not match target contract address (`to`).\",{metaMessages:[`Contract address: ${to}`,`OffchainLookup sender address: ${sender}`],name:\"OffchainLookupSenderMismatchError\"})}}","import{call}from\"../actions/public/call.js\";import{OffchainLookupError,OffchainLookupResponseMalformedError,OffchainLookupSenderMismatchError}from\"../errors/ccip.js\";import{HttpRequestError}from\"../errors/request.js\";import{decodeErrorResult}from\"./abi/decodeErrorResult.js\";import{encodeAbiParameters}from\"./abi/encodeAbiParameters.js\";import{isAddressEqual}from\"./address/isAddressEqual.js\";import{concat}from\"./data/concat.js\";import{isHex}from\"./data/isHex.js\";import{localBatchGatewayRequest,localBatchGatewayUrl}from\"./ens/localBatchGatewayRequest.js\";import{stringify}from\"./stringify.js\";export const offchainLookupSignature=\"0x556f1830\";export const offchainLookupAbiItem={name:\"OffchainLookup\",type:\"error\",inputs:[{name:\"sender\",type:\"address\"},{name:\"urls\",type:\"string[]\"},{name:\"callData\",type:\"bytes\"},{name:\"callbackFunction\",type:\"bytes4\"},{name:\"extraData\",type:\"bytes\"}]};export async function offchainLookup(client,{blockNumber:blockNumber,blockTag:blockTag,data:data,to:to}){const{args:args}=decodeErrorResult({data:data,abi:[offchainLookupAbiItem]}),[sender,urls,callData,callbackSelector,extraData]=args,{ccipRead:ccipRead}=client,ccipRequest_=ccipRead&&\"function\"==typeof ccipRead?.request?ccipRead.request:ccipRequest;try{if(!isAddressEqual(to,sender))throw new OffchainLookupSenderMismatchError({sender:sender,to:to});const result=urls.includes(localBatchGatewayUrl)?await localBatchGatewayRequest({data:callData,ccipRequest:ccipRequest_}):await ccipRequest_({data:callData,sender:sender,urls:urls}),{data:data_}=await call(client,{blockNumber:blockNumber,blockTag:blockTag,data:concat([callbackSelector,encodeAbiParameters([{type:\"bytes\"},{type:\"bytes\"}],[result,extraData])]),to:to});return data_}catch(err){throw new OffchainLookupError({callbackSelector:callbackSelector,cause:err,data:data,extraData:extraData,sender:sender,urls:urls})}}export async function ccipRequest({data:data,sender:sender,urls:urls}){let error=new Error(\"An unknown error occurred.\");for(let i=0;i<urls.length;i++){const url=urls[i],method=url.includes(\"{data}\")?\"GET\":\"POST\",body=\"POST\"===method?{data:data,sender:sender}:void 0,headers=\"POST\"===method?{\"Content-Type\":\"application/json\"}:{};try{const response=await fetch(url.replace(\"{sender}\",sender.toLowerCase()).replace(\"{data}\",data),{body:JSON.stringify(body),headers:headers,method:method});let result;if(result=response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")?(await response.json()).data:await response.text(),!response.ok){error=new HttpRequestError({body:body,details:result?.error?stringify(result.error):response.statusText,headers:response.headers,status:response.status,url:url});continue}if(!isHex(result)){error=new OffchainLookupResponseMalformedError({result:result,url:url});continue}return result}catch(err){error=new HttpRequestError({body:body,details:err.message,url:url})}}throw error}"],"names":["OffchainLookupError","constructor","callbackSelector","cause","data","extraData","sender","urls","super","shortMessage","metaMessages","length","map","url","flat","name","OffchainLookupResponseMalformedError","result","stringify","OffchainLookupSenderMismatchError","to","offchainLookupSignature","offchainLookupAbiItem","type","inputs","async","offchainLookup","client","blockNumber","blockTag","args","decodeErrorResult","abi","callData","ccipRead","ccipRequest_","request","ccipRequest","isAddressEqual","includes","localBatchGatewayRequest","data_","call","concat","encodeAbiParameters","err","error","Error","i","method","body","headers","response","fetch","replace","toLowerCase","JSON","get","startsWith","json","text","ok","details","statusText","status","isHex","message"],"sourceRoot":""}