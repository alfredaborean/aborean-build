{"version":3,"file":"static/js/7678.c936f93c.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Incentivize/components/PoolCheckOptions.tsx?c1f5","webpack://@uniswap/interface/./src/pages/Incentivize/components/StepOnePools.tsx?7991","webpack://@uniswap/interface/./src/pages/Incentivize/index.tsx?cf38","webpack://@uniswap/interface/./src/components/PoolAndGaugeAddress.tsx?f51f","webpack://@uniswap/interface/./src/pages/Incentivize/components/IncentivizePoolFirstStep.tsx?b97e","webpack://@uniswap/interface/./src/pages/Incentivize/components/IncentiveInput.tsx?3810","webpack://@uniswap/interface/./src/pages/Incentivize/components/VoteEmissionDeadline.tsx?d21e","webpack://@uniswap/interface/./src/pages/Incentivize/components/AllowConfirmAccess.tsx?7f2e","webpack://@uniswap/interface/./src/pages/Incentivize/components/PoolInfoModal.tsx?adfd","webpack://@uniswap/interface/./src/pages/Incentivize/components/PoolInfoAndChange.tsx?4b67","webpack://@uniswap/interface/./src/pages/Incentivize/components/SinglePool.tsx?6330","webpack://@uniswap/interface/./src/pages/Incentivize/components/UnderstandCheckbox.tsx?d4bb","webpack://@uniswap/interface/./src/components/AddressCopy.tsx?d736","webpack://@uniswap/interface/./src/pages/Incentivize/components/IncetiveAmountEdit.tsx?f203","webpack://@uniswap/interface/./src/pages/Incentivize/components/CurrencySelector.tsx?ab3d","webpack://@uniswap/interface/./src/pages/Incentivize/components/ChangePoolAndIncetivizeButton.tsx?cf38","webpack://@uniswap/interface/./src/pages/Incentivize/components/EditAmoutAndAllowButton.tsx?b577","components/AddressCopy.tsx","components/PoolAndGaugeAddress.tsx","pages/Incentivize/ContextProvider.tsx","pages/Incentivize/components/CurrencySelector.tsx","pages/Incentivize/components/PoolCheckOptions.tsx","pages/Incentivize/components/SinglePool.tsx","pages/Incentivize/components/StepOnePools.tsx","pages/Incentivize/components/IncentivizePoolFirstStep.tsx","pages/Incentivize/components/ChangePoolAndIncetivizeButton.tsx","pages/Incentivize/components/IncentiveInput.tsx","pages/Incentivize/components/UnderstandCheckbox.tsx","pages/Incentivize/components/VoteEmissionDeadline.tsx","pages/Incentivize/components/MainPoolSection.tsx","pages/Incentivize/components/PoolInfoAndChange.tsx","pages/Incentivize/components/PoolInfoModal.tsx","pages/Incentivize/components/IncentivizePoolSecondStep.tsx","pages/Incentivize/components/EditAmoutAndAllowButton.tsx","pages/Incentivize/components/AllowConfirmAccess.tsx","pages/Incentivize/components/IncetiveAmountEdit.tsx","pages/Incentivize/components/IncentivizePoolThirdStep.tsx","pages/Incentivize/index.tsx","../node_modules/@tamagui/button/dist/esm/Button.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useCallback } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Flex, Text, useMedia, useSporeColors } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport default function AddressCopy({ address }) {\n  const colors = useSporeColors();\n  const [isCopied, setCopied] = useCopyClipboard();\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && !isCopied;\n  const copyCallBack = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  return <Flex row gap={\"$gap8\"} onPress={copyCallBack} cursor=\"pointer\" alignItems=\"center\">\n      <Text variant=\"body4\" color={colors.neutral2.val}>\n        {shortenAddress(address)}\n      </Text>\n      <Copy\n    data-testid=\"breadcrumb-hover-copy\"\n    size={13}\n    color={shouldShowActions ? colors.neutral3.val : \"transparent\"}\n  />\n    </Flex>;\n}\n","\"use strict\";\nimport AddressCopy from \"components/AddressCopy\";\nimport { Flex, Separator, Text } from \"ui/src\";\nexport default function PoolAndGaugeAddress({\n  poolAddress,\n  gaugeAddress\n}) {\n  return <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Pool Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n      <Separator width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n      <Flex row gap={\"$gap24\"}>\n        <Text variant=\"body4\" fontWeight={\"$medium\"}>\n          Gauge Address\n        </Text>{\" \"}\n        <AddressCopy address=\"0x3470fe9a968013bb02b8496cd3c1d0a5743be76d\" />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { createContext, useContext, useState } from \"react\";\nexport const IncentivizeContext = createContext(null);\nexport const IncentivizeProvider = ({ children }) => {\n  const [incentivizeStep, setIncentivizeStep] = useState(\"step-1\");\n  return <IncentivizeContext.Provider value={{ setIncentivizeStep, incentivizeStep }}>\n      {children}\n    </IncentivizeContext.Provider>;\n};\nexport const useIncentivizeContext = () => {\n  const context = useContext(IncentivizeContext);\n  if (!context) {\n    throw new Error(\"useIncentivize must be used within a IncentivizeProvider\");\n  }\n  return context;\n};\n","\"use strict\";\nimport { DropdownButton, Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { TokenLogo } from \"uniswap/src/components/CurrencyLogo/TokenLogo\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nexport const CurrencySelector = ({\n  currencyInfo,\n  onPress,\n  emphasis\n}) => {\n  const getCurrencyData = useCurrencyInfo(currencyId(currencyInfo)) || void 0;\n  const currency = getCurrencyData?.currency;\n  return <DropdownButton\n    emphasis={emphasis}\n    onPress={onPress}\n    elementPositioning=\"grouped\"\n    isExpanded={false}\n    py={\"$spacing24\"}\n  >\n      <Flex row gap={\"$spacing8\"} alignItems=\"center\">\n        {currency && <TokenLogo\n    size={iconSizes.icon24}\n    chainId={currency.chainId}\n    name={currency.name}\n    symbol={currency.symbol}\n    url={getCurrencyData?.logoUrl}\n  />}\n        <Text variant=\"buttonLabel2\" color={currency ? \"$neutral1\" : \"$surface1\"}>\n          {currency ? currency.symbol : \"Select Token\"}\n        </Text>\n      </Flex>\n    </DropdownButton>;\n};\n","\"use strict\";\nimport { useState } from \"react\";\nimport { Check } from \"react-feather\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nexport default function PoolCheckOptions() {\n  const colors = useSporeColors();\n  const [selectPool, setSelectPool] = useState(0);\n  const CheckIcon = () => <Flex height={18} width={18} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n      <Check color={colors.surface1.val} size={15} />\n    </Flex>;\n  const poolOptions = [\n    {\n      title: \"Concentrated Pools\",\n      text: \"These pools require you to specify a price range in which your liquidity will be active. The range is defined using evenly spaced price intervals called ticks.\"\n    },\n    {\n      title: \"Basic Pools\",\n      text: \"Also known as constant product AMMs, these pools spread liquidity across the full price range (0 to \\u221E) and require little to no active management.\"\n    }\n  ];\n  return <Flex $platform-web={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }} gap={\"$gap24\"}>\n      {poolOptions.map((option, index) => <Flex\n    key={option.title}\n    p={\"$spacing12\"}\n    borderWidth={1}\n    borderColor={index === selectPool ? \"$neutral3\" : \"$surface3\"}\n    borderRadius={\"$rounded12\"}\n    cursor=\"pointer\"\n    onPress={() => setSelectPool((prev) => prev === index ? -1 : index)}\n  >\n          <Flex row justifyContent=\"space-between\" gap={\"$gap6\"}>\n            <Text variant=\"body2\" fontWeight={\"$medium\"}>\n              {option.title}\n            </Text>{\" \"}\n            {index === selectPool && <CheckIcon />}\n          </Flex>\n\n          <Text mt={\"$gap12\"} variant=\"body3\" color={\"$neutral2\"} wordWrap=\"break-word\">\n            {option.text}\n          </Text>\n        </Flex>)}\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { Button } from \"tamagui\";\nimport { Flex, Separator, Text, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled, Plus } from \"ui/src/components/icons\";\nimport { useIncentivizeContext } from \"../ContextProvider\";\nexport default function SinglePool() {\n  const { setIncentivizeStep } = useIncentivizeContext();\n  const colors = useSporeColors();\n  const rowData = [\n    {\n      label: \"APR\",\n      value: \"6.3188%\"\n    },\n    {\n      label: \"TVL\",\n      value: \"56.4M\"\n    }\n  ];\n  return <Flex\n    style={{\n      background: `linear-gradient(10deg, ${colors.surface1.variable} 0%, ${colors.slate.variable} 100%)`\n    }}\n    p={\"$padding12\"}\n    borderRadius={\"$rounded12\"}\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    hoverStyle={{ borderColor: \"$surface3Hovered\" }}\n    group\n    cursor=\"pointer\"\n    onPress={() => setIncentivizeStep(\"step-2\")}\n  >\n      <Flex className=\"top\" $platform-web={{ display: \"grid\", gridTemplateColumns: \"3fr 1fr 1fr\" }}>\n        <Flex className=\"left\" row gap={\"$gap12\"}>\n          <Flex row alignItems=\"center\">\n            <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>{\" \"}\n            <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap4\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n              <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n                <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n                  0.23%\n                </Text>\n              </MouseoverTooltip>\n              <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n                <Flex transition=\"opacity 0.3s ease\" opacity={0} $group-hover={{ opacity: 1 }}>\n                  <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n                </Flex>\n              </MouseoverTooltip>\n            </Flex>\n            <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n              Basic Volatile\n            </Text>\n          </Flex>\n        </Flex>\n        {rowData.map((item) => <Flex\n    key={item.label}\n    className=\"rebase\"\n    flexDirection=\"column\"\n    gap={\"$gap12\"}\n    justifyContent=\"center\"\n    alignItems=\"flex-end\"\n  >\n            <Text variant=\"body3\" color={\"$neutral2\"}>\n              {item.label}\n            </Text>\n            <Text variant=\"body3\" fontSize={\"$small\"}>\n              {item.value}\n            </Text>\n          </Flex>)}\n      </Flex>\n      <Separator my={\"$gap12\"} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n      <Flex className=\"bottom\" row justifyContent=\"space-between\" alignItems=\"center\" gap={\"$gap12\"}>\n        <Text variant=\"body4\">No deposits</Text>\n        <Button\n    py={\"$padding16\"}\n    px={\"$padding12\"}\n    borderRadius={\"$rounded8\"}\n    transition=\"all 0.3s ease\"\n    $group-hover={{ backgroundColor: \"$accent2\" }}\n  >\n          <Flex row gap={\"$gap4\"} alignItems=\"center\">\n            <Plus size={\"$icon.12\"} color={\"$neutral2\"} />\n            <Text variant=\"buttonLabel4\">Add Incetive</Text>\n          </Flex>\n        </Button>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex } from \"ui/src\";\nimport SinglePool from \"./SinglePool\";\nexport default function StepOnePools() {\n  return <Flex marginTop={\"$spacing36\"} mt={\"$spacing24\"} flexDirection=\"column\" gap={\"$gap24\"}>\n      {Array.from({ length: 4 }, (_, index) => <SinglePool key={index} />)}\n    </Flex>;\n}\n","\"use strict\";\nimport CurrencySearchModal from \"components/SearchModal/CurrencySearchModal\";\nimport { useEffect, useState } from \"react\";\nimport { Flex, Separator, Text, useSporeColors } from \"ui/src\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { CurrencySelector } from \"./CurrencySelector\";\nimport PoolCheckOptions from \"./PoolCheckOptions\";\nimport StepOnePools from \"./StepOnePools\";\nexport default function IncentivizePoolFirstStep() {\n  const [selectedInputToken, setSelectedInputToken] = useState(\"\");\n  const [isOpenCurrencyModal, setIsOpenCurrencyModal] = useState(false);\n  const [token0, setToken0] = useState(\"\");\n  const [token1, setToken1] = useState(\"\");\n  const { chains } = useEnabledChains();\n  const colors = useSporeColors();\n  const handleCurrencySelect = (currency) => {\n    setIsOpenCurrencyModal(false);\n    if (selectedInputToken === \"token0\") {\n      setToken0(currency);\n    } else {\n      setToken1(currency);\n    }\n  };\n  const handleCurrentyModal = (token) => {\n    setSelectedInputToken(token);\n    setIsOpenCurrencyModal(true);\n  };\n  useEffect(() => {\n    if (token0 === token1) {\n      selectedInputToken === \"token0\" ? setToken1(\"\") : setToken0(\"\");\n    }\n  }, [token0, token1]);\n  return <Flex>\n      <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    maxWidth={700}\n    width={\"100%\"}\n    style={{\n      background: `linear-gradient(180deg, ${colors.surface2.variable} 0%, transparent 100%)`\n    }}\n  >\n        <Text variant=\"subheading1\">Incentivize Pool</Text>\n\n        <Separator my={\"$spacing24\"} $sm={{ my: \"$spacing24\" }} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n        <Flex $platform-web={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\" }} gap={\"$gap24\"}>\n          <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n            <Text variant=\"body2\" fontWeight=\"$medium\" color={\"$neutral2\"}>\n              Token you want to incentivize\n            </Text>\n            <CurrencySelector\n    emphasis={token0 ? void 0 : \"primary\"}\n    currencyInfo={token0}\n    onPress={() => handleCurrentyModal(\"token0\")}\n  />\n          </Flex>\n          <Flex flexDirection=\"column\" gap={\"$gap12\"}>\n            <Text variant=\"body2\" fontWeight=\"$medium\" color={\"$neutral2\"}>\n              Token you want to pair with\n            </Text>\n            <CurrencySelector\n    emphasis={token1 ? void 0 : \"primary\"}\n    currencyInfo={token1}\n    onPress={() => handleCurrentyModal(\"token1\")}\n  />\n          </Flex>\n        </Flex>\n        <Separator my={\"$spacing36\"} $sm={{ my: \"$spacing24\" }} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n        <PoolCheckOptions />\n\n        <CurrencySearchModal\n    isOpen={isOpenCurrencyModal}\n    onDismiss={() => setIsOpenCurrencyModal(false)}\n    onCurrencySelect={handleCurrencySelect}\n    chainIds={chains}\n  />\n      </Flex>\n\n      <StepOnePools />\n    </Flex>;\n}\n","\"use strict\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { useIncentivizeContext } from \"../ContextProvider\";\nexport default function ChangePoolAndIncetivizeButton() {\n  const { setIncentivizeStep } = useIncentivizeContext();\n  const colors = useSporeColors();\n  const Button = styled.button`\n    all: unset;\n    padding: 16px 10px;\n    background-color: ${(props) => props.$lock ? colors.surface2Hovered.val : colors.accent1.val};\n    color: ${(props) => props.$lock ? colors.neutral1.val : colors.surface1.val};\n    border-radius: 12px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    transition: all 0.2s ease;\n    &:hover {\n      opacity: 0.7;\n    }\n  `;\n  return <Flex mt={\"$spacing24\"} row gap={\"$gap12\"} alignItems=\"center\">\n      <Button role=\"button\" $lock onClick={() => setIncentivizeStep(\"step-1\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Change Pool\n        </Text>\n      </Button>\n      <Button role=\"button\" onClick={() => setIncentivizeStep(\"step-3\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Incentivize\n        </Text>\n      </Button>\n    </Flex>;\n}\n","\"use strict\";\nimport CurrencySearchModal from \"components/SearchModal/CurrencySearchModal\";\nimport { useRef, useState } from \"react\";\nimport { Flex, Input, Text, useSporeColors } from \"ui/src\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { CurrencySelector } from \"./CurrencySelector\";\nexport default function IncentivizeInput() {\n  const inputRef = useRef(null);\n  const [value, setValue] = useState(\"\");\n  const handleChange = (text) => {\n    const numericValue = text.replace(/[^0-9.]/g, \"\");\n    setValue(numericValue);\n  };\n  const [isOpenCurrencyModal, setIsOpenCurrencyModal] = useState(false);\n  const [selectedToken, setSelectedToken] = useState({\n    chainId: 1,\n    decimals: 18,\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    isNative: true,\n    isToken: false,\n    address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\n  });\n  const { chains } = useEnabledChains();\n  const colors = useSporeColors();\n  const handleCurrencySelect = (currency) => {\n    setIsOpenCurrencyModal(false);\n    setSelectedToken(currency);\n  };\n  return <Flex mt={\"$gap24\"}>\n      <Flex row alignItems=\"center\" justifyContent=\"space-between\" gap={\"$gap12\"}>\n        <Text variant=\"body3\" fontWeight={\"$medium\"}>\n          Your Incentive\n        </Text>\n        <Flex row alignItems=\"center\" gap={\"$gap4\"}>\n          <Text variant=\"body3\" color={\"$neutral2\"}>\n            Balance:\n          </Text>\n          <Text variant=\"body3\">12.4ABX</Text>\n        </Flex>\n      </Flex>\n      <Flex\n    row\n    mt={\"$gap12\"}\n    px=\"$spacing16\"\n    py=\"$spacing16\"\n    borderWidth={1}\n    borderColor={\"$surface3\"}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    gap={\"$gap12\"}\n    borderRadius={\"$rounded12\"}\n    onPress={() => inputRef.current?.focus()}\n    $platform-web={{\n      focusWithinStyle: { borderColor: \"$neutral2\" }\n    }}\n    transition=\"border-color 0.3s ease\"\n  >\n        <Flex>\n          <CurrencySelector\n    emphasis={selectedToken ? void 0 : \"primary\"}\n    currencyInfo={selectedToken}\n    onPress={() => setIsOpenCurrencyModal(true)}\n  />\n        </Flex>\n        <Flex grow flexDirection=\"column\" gap={\"$gap8\"}>\n          <Input\n    ref={inputRef}\n    py={\"$padding20\"}\n    textAlign=\"right\"\n    placeholder=\"0\"\n    fontSize={\"28px\"}\n    backgroundColor={\"none\"}\n    width={\"100%\"}\n    inputMode=\"numeric\"\n    keyboardType=\"numeric\"\n    value={value}\n    onChangeText={handleChange}\n  />\n          <Text variant=\"body3\" color={\"$neutral3\"} textAlign=\"right\">\n            ~$0\n          </Text>\n        </Flex>\n        <CurrencySearchModal\n    isOpen={isOpenCurrencyModal}\n    onDismiss={() => setIsOpenCurrencyModal(false)}\n    onCurrencySelect={handleCurrencySelect}\n    chainIds={chains}\n  />\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport { useState } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nimport { Checkbox } from \"ui/src/components/checkbox/Checkbox\";\nexport default function UnderstandCheckbox() {\n  const [checked, setChecked] = useState(false);\n  return <Flex\n    row\n    gap={\"$gap12\"}\n    onPress={() => setChecked(!checked)}\n    backgroundColor={checked ? \"$surface2\" : \"$slate\"}\n    px={\"$spacing12\"}\n    py={\"$spacing24\"}\n    borderRadius={\"$rounded12\"}\n    borderWidth={1}\n    borderColor={checked ? \"$surface3\" : \"$surface2\"}\n    mt={\"$spacing12\"}\n  >\n      <Checkbox size={\"$icon.16\"} checked={checked} />\n      <Text>\n        I understand that once incentives are added, these are non-refundable and can NOT be withdrawn under any\n        circumstances.\n      </Text>\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { Flex, Text, styled, useSporeColors } from \"ui/src\";\nexport default function VoteEmissionDeadline() {\n  const colors = useSporeColors();\n  const FlexWrapper = styled(Flex, {\n    row: true,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    py: \"$spacing16\",\n    gap: \"$gap12\"\n  });\n  return <Flex mt={\"$spacing24\"}>\n      <FlexWrapper>\n        <Text variant=\"body3\" fontWeight={\"$medium\"}>\n          Pool votes\n        </Text>\n        <Text variant=\"body3\">8,770,741.14</Text>\n      </FlexWrapper>\n      <FlexWrapper borderTopWidth={1} borderColor={\"$surface3\"}>\n        <Text variant=\"body3\" fontWeight={\"$medium\"}>\n          Total new emissions\n        </Text>\n        <Flex row alignItems=\"center\" gap={\"$gap8\"}>\n          <Flex\n    height={20}\n    width={20}\n    backgroundColor={\"$neutral1\"}\n    centered\n    borderRadius={\"$roundedFull\"}\n    mr={\"$spacing8\"}\n  >\n            <LogoProvider color={colors.surface1.val} size={16} />\n          </Flex>\n          <Text variant=\"body3\">065,988.4</Text>{\" \"}\n          <Text color={\"$neutral2\"} variant=\"body3\">\n            ABX\n          </Text>\n        </Flex>\n      </FlexWrapper>\n\n      <FlexWrapper borderTopWidth={1} borderColor={\"$surface3\"}>\n        <Text variant=\"body3\" fontWeight={\"$medium\"}>\n          Voting and incentives deadline\n        </Text>\n        <Text variant=\"body3\">ends in 7 days</Text>\n      </FlexWrapper>\n    </Flex>;\n}\n","\"use strict\";\nimport { Flex, useSporeColors } from \"ui/src\";\nimport ChangePoolAndIncetivizeButton from \"./ChangePoolAndIncetivizeButton\";\nimport IncentiveInput from \"./IncentiveInput\";\nimport UnderstandCheckbox from \"./UnderstandCheckbox\";\nimport VoteEmissionDeadline from \"./VoteEmissionDeadline\";\nexport default function MainPoolSection() {\n  const colors = useSporeColors();\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    maxWidth={700}\n    mt={\"$spacing12\"}\n    width={\"100%\"}\n    style={{\n      background: `linear-gradient(180deg, ${colors.surface2.variable} 0%, transparent 100%)`\n    }}\n  >\n      <VoteEmissionDeadline />\n      <UnderstandCheckbox />\n      <IncentiveInput />\n      <ChangePoolAndIncetivizeButton />\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { Button } from \"tamagui\";\nimport { Flex, Separator, Text, styled, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nexport default function PoolInfoAndChange() {\n  const colors = useSporeColors();\n  const { toggleModal: togglePoolInfoModal } = useModalState(ModalName.PoolInfo);\n  const ButtonContainer = styled(Button, {\n    py: \"$padding16\",\n    px: \"$padding16\",\n    borderRadius: \"$rounded16\",\n    transition: \"all 0.3s ease\",\n    backgroundColor: \"$accent2\"\n  });\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    maxWidth={700}\n    width={\"100%\"}\n    backgroundColor={\"$surface2\"}\n  >\n      <Text variant=\"subheading1\">Incentivize Pool</Text>\n\n      <Separator my={\"$spacing24\"} $sm={{ my: \"$spacing24\" }} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n\n      <Flex group row justifyContent=\"space-between\" gap={\"$gap12\"}>\n        <Flex className=\"left\" row gap={\"$gap12\"}>\n          <Flex row alignItems=\"center\">\n            <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>{\" \"}\n            <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap4\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n              <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n                <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n                  0.23%\n                </Text>\n              </MouseoverTooltip>\n              <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n                <Flex transition=\"opacity 0.3s ease\" opacity={0} $group-hover={{ opacity: 1 }}>\n                  <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n                </Flex>\n              </MouseoverTooltip>\n            </Flex>\n            <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n              Basic Volatile\n            </Text>\n          </Flex>\n        </Flex>\n        <Flex className=\"right\" row gap={\"$gap12\"}>\n          {\" \"}\n          <ButtonContainer onPress={togglePoolInfoModal}>\n            <Text variant=\"buttonLabel4\">Pool info</Text>\n          </ButtonContainer>{\" \"}\n          <ButtonContainer>\n            <Text variant=\"buttonLabel4\">Change</Text>\n          </ButtonContainer>\n        </Flex>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { X } from \"react-feather\";\nimport styled from \"styled-components\";\nimport { Flex, Separator, Text, useSporeColors } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport PoolAndGaugeAddress from \"components/PoolAndGaugeAddress\";\nconst Button = styled.button`\n  all: unset;\n  padding: 8px 12px;\n  cursor: pointer;\n`;\nexport default function PoolInfoModal() {\n  const modalName = ModalName.PoolInfo;\n  const { isOpen: isModalOpen, toggleModal: togglePoolInfoModal } = useModalState(modalName);\n  const colors = useSporeColors();\n  const onClose = () => {\n    togglePoolInfoModal();\n  };\n  const infoData = [\n    {\n      label: \"APR\",\n      value: \"11.41%\"\n    },\n    {\n      label: \"TVL\",\n      value: \"~$20.72M\"\n    },\n    {\n      label: \"Volume\",\n      value: \"~$1,163,018.7\"\n    },\n    {\n      label: \"Fees\",\n      value: \"~$3,489.05\"\n    },\n    {\n      label: \"Trading fee\",\n      value: \"0.3%\"\n    }\n  ];\n  return <Modal\n    extendOnKeyboardVisible\n    fullScreen\n    hideKeyboardOnDismiss\n    hideKeyboardOnSwipeDown\n    renderBehindBottomInset\n    backgroundColor={colors.surface1.val}\n    isModalOpen={isModalOpen}\n    maxWidth={400}\n    maxHeight={410}\n    name={modalName}\n    padding=\"$none\"\n    height=\"100vh\"\n    onClose={onClose}\n  >\n      <Flex py={\"$spacing24\"} px={\"$spacing20\"}>\n        <Flex row justifyContent=\"space-between\" alignItems=\"center\">\n          <Text variant=\"subheading2\">Pool info</Text>\n          <Button onClick={onClose}>\n            <Flex\n    height={28}\n    width={28}\n    hoverStyle={{ backgroundColor: colors.surface2Hovered.val }}\n    centered\n    borderRadius={\"$roundedFull\"}\n  >\n              <X color={colors.accent1.val} size={24} />\n            </Flex>\n          </Button>\n        </Flex>\n\n        <Separator mt={\"$spacing8\"} width={\"100%\"} borderColor={\"$surface3\"} height={1} />\n\n        <Flex group className=\"info\" row gap={\"$gap12\"} mt={\"$spacing24\"}>\n          <Flex row alignItems=\"center\">\n            <Flex height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>{\" \"}\n            <Flex ml={-10} height={34} width={34} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n              <LogoProvider color={colors.surface1.val} size={24} />\n            </Flex>\n          </Flex>\n\n          <Flex flexDirection=\"column\" justifyContent=\"center\" gap={\"$gap4\"}>\n            <Flex row gap={\"$gap12\"} alignItems=\"center\">\n              <Text variant=\"subheading2\">WETH/USDC</Text>{\" \"}\n              <MouseoverTooltip text=\"Pool Trading Fee\" size={TooltipSize.Max} placement=\"top\">\n                <Text\n    backgroundColor={\"$surface3\"}\n    py={\"$padding4\"}\n    px={\"$padding8\"}\n    borderRadius={\"$rounded8\"}\n    variant=\"body4\"\n    cursor=\"pointer\"\n    hoverStyle={{ backgroundColor: \"$surface3Hovered\" }}\n  >\n                  0.23%\n                </Text>\n              </MouseoverTooltip>\n              <MouseoverTooltip text={<PoolAndGaugeAddress />} size={TooltipSize.Max} placement=\"top\">\n                <Flex transition=\"opacity 0.3s ease\" opacity={0} $group-hover={{ opacity: 1 }}>\n                  <InfoCircleFilled size={\"$icon.16\"} color={\"$neutral2\"} />\n                </Flex>\n              </MouseoverTooltip>\n            </Flex>\n            <Text variant=\"body4\" fontWeight={\"$medium\"} color={\"$neutral2\"}>\n              Basic Volatile\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex mt={\"$spacing24\"}>\n          {infoData.map((item, index) => <Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    gap={\"$gap12\"}\n    key={index}\n    py={\"$spacing12\"}\n    borderTopWidth={1}\n    borderColor={index > 0 ? \"$surface3\" : \"transparent\"}\n  >\n              <Text variant=\"body3\" color={\"$neutral2\"}>\n                {item.label}\n              </Text>\n              <Text variant=\"body3\">{item.value}</Text>\n            </Flex>)}\n        </Flex>\n      </Flex>\n    </Modal>;\n}\n","\"use strict\";\nimport MainPoolSection from \"./MainPoolSection\";\nimport PoolInfoAndChange from \"./PoolInfoAndChange\";\nimport PoolInfoModal from \"./PoolInfoModal\";\nexport default function IncentivizePoolSecondStep() {\n  return <>\n      <PoolInfoAndChange />\n      <MainPoolSection />\n      <PoolInfoModal />\n    </>;\n}\n","\"use strict\";\nimport styled from \"styled-components\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { useIncentivizeContext } from \"../ContextProvider\";\nexport default function EditAmoutAndAllowButton() {\n  const { setIncentivizeStep } = useIncentivizeContext();\n  const colors = useSporeColors();\n  const Button = styled.button`\n    all: unset;\n    padding: 16px 10px;\n    background-color: ${(props) => props.$lock ? colors.surface2Hovered.val : colors.accent1.val};\n    color: ${(props) => props.$lock ? colors.neutral1.val : colors.surface1.val};\n    border-radius: 12px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    transition: all 0.2s ease;\n    &:hover {\n      opacity: 0.7;\n    }\n  `;\n  return <Flex mt={\"$spacing24\"} row gap={\"$gap12\"} alignItems=\"center\">\n      <Button role=\"button\" $lock onClick={() => setIncentivizeStep(\"step-2\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Edit amount\n        </Text>\n      </Button>\n      <Button role=\"button\" onClick={() => setIncentivizeStep(\"step-1\")}>\n        <Text variant=\"buttonLabel3\" color={\"inherit\"}>\n          Allow\n        </Text>\n      </Button>\n    </Flex>;\n}\n","\"use strict\";\nimport { RoundedLogo } from \"components/Logo/LogoProvider\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport EditAmoutAndAllowButton from \"./EditAmoutAndAllowButton\";\nexport default function AllowConfirmAccess() {\n  const colors = useSporeColors();\n  return <Flex\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    maxWidth={700}\n    width={\"100%\"}\n    style={{\n      background: `linear-gradient(180deg, ${colors.surface2.variable} 0%, transparent 100%)`\n    }}\n    position=\"relative\"\n    overflow='hidden'\n  >\n      <Flex>\n        <RoundedLogo position=\"absolute\" pointerEvents=\"none\" size={\"100%\"} />\n\n        <Flex\n    position=\"absolute\"\n    pointerEvents=\"none\"\n    backgroundColor=\"rgba(255, 0, 0, 0.5)\"\n    height={\"100%\"}\n    width={\"100%\"}\n    inset={0}\n  />\n      </Flex>\n      <Flex flexDirection=\"column\" alignItems=\"center\" gap={\"$gap16\"} py={\"$spacing24\"} $sm={{ py: \"$spacing16\" }}>\n        <RoundedLogo size={54} />\n        <Text variant=\"subheading1\" textAlign=\"center\">\n          Confirm access <br /> to ABX\n        </Text>\n      </Flex>\n\n      <EditAmoutAndAllowButton />\n    </Flex>;\n}\n","\"use strict\";\nimport LogoProvider from \"components/Logo/LogoProvider\";\nimport { Check } from \"react-feather\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nexport default function IncetiveAmountEdit() {\n  const colors = useSporeColors();\n  return <Flex\n    row\n    gap={\"$gap8\"}\n    alignItems=\"center\"\n    backgroundColor={\"$surface2\"}\n    p={\"$spacing24\"}\n    $sm={{ p: \"$spacing16\" }}\n    borderRadius={\"$rounded12\"}\n    justifyContent=\"space-between\"\n  >\n      <Flex row gap={\"$gap8\"} alignItems=\"center\">\n        <Flex height={18} width={18} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n          <Check color={colors.surface1.val} size={15} />\n        </Flex>\n        <Text variant=\"buttonLabel3\">Incentive amount</Text>\n      </Flex>\n\n      <Flex row alignItems=\"center\" gap={\"$gap12\"}>\n        <Flex height={20} width={20} backgroundColor={\"$neutral1\"} centered borderRadius={\"$roundedFull\"}>\n          <LogoProvider color={colors.surface1.val} size={16} />\n        </Flex>\n        <Text variant=\"body3\">065,988.4 ABX</Text>\n\n        <Text variant=\"body3\" color={\"$neutral2\"}>\n          ~$0.73399\n        </Text>\n      </Flex>\n    </Flex>;\n}\n","\"use strict\";\nimport AllowConfirmAccess from \"./AllowConfirmAccess\";\nimport IncetiveAmountEdit from \"./IncetiveAmountEdit\";\nimport PoolInfoAndChange from \"./PoolInfoAndChange\";\nimport PoolInfoModal from \"./PoolInfoModal\";\nexport default function IncentivizePoolThirdStep() {\n  return <>\n      <PoolInfoAndChange />\n      <IncetiveAmountEdit />\n      <AllowConfirmAccess />\n      <PoolInfoModal />\n    </>;\n}\n","\"use strict\";\nimport { Flex } from \"ui/src\";\nimport { IncentivizeProvider, useIncentivizeContext } from \"./ContextProvider\";\nimport IncentivizePoolFirstStep from \"./components/IncentivizePoolFirstStep\";\nimport IncentivizePoolSecondStep from \"./components/IncentivizePoolSecondStep\";\nimport IncentivizePoolThirdStep from \"./components/IncentivizePoolThirdStep\";\nconst Incentivize = () => {\n  const { incentivizeStep } = useIncentivizeContext();\n  return <Flex\n    mt=\"$spacing24\"\n    width=\"100%\"\n    px=\"$spacing40\"\n    maxWidth={780}\n    pb={\"$spacing40\"}\n    $xl={{\n      px: \"$spacing12\",\n      mx: \"auto\"\n    }}\n    flexDirection=\"column\"\n    gap={\"$gap12\"}\n  >\r\n      {\n    /* <TokenWrapper />\n    \n       */\n  }{\" \"}\r\n      {incentivizeStep === \"step-1\" && <IncentivizePoolFirstStep />}\r\n      {incentivizeStep === \"step-2\" && <IncentivizePoolSecondStep />}\r\n      {incentivizeStep === \"step-3\" && <IncentivizePoolThirdStep />}\r\n    </Flex>;\n};\nconst ConntextWrapper = () => {\n  return <IncentivizeProvider>\r\n      <Incentivize />\r\n    </IncentivizeProvider>;\n};\nexport default ConntextWrapper;\n","import { getFontSize } from \"@tamagui/font-size\";\nimport { getButtonSized } from \"@tamagui/get-button-sized\";\nimport { withStaticProperties } from \"@tamagui/helpers\";\nimport { useGetThemedIcon } from \"@tamagui/helpers-tamagui\";\nimport { ButtonNestingContext, ThemeableStack } from \"@tamagui/stacks\";\nimport { SizableText, wrapChildrenInText } from \"@tamagui/text\";\nimport { createStyledContext, getVariableValue, spacedChildren, styled, useProps } from \"@tamagui/web\";\nimport { useContext } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nconst ButtonContext = createStyledContext({\n    // keeping these here means they work with styled() passing down color to text\n    color: void 0,\n    ellipse: void 0,\n    fontFamily: void 0,\n    fontSize: void 0,\n    fontStyle: void 0,\n    fontWeight: void 0,\n    letterSpacing: void 0,\n    maxFontSizeMultiplier: void 0,\n    size: void 0,\n    textAlign: void 0,\n    variant: void 0\n  }),\n  BUTTON_NAME = \"Button\",\n  ButtonFrame = styled(ThemeableStack, {\n    name: BUTTON_NAME,\n    tag: \"button\",\n    context: ButtonContext,\n    role: \"button\",\n    focusable: !0,\n    variants: {\n      unstyled: {\n        false: {\n          size: \"$true\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"nowrap\",\n          flexDirection: \"row\",\n          cursor: \"pointer\",\n          hoverTheme: !0,\n          pressTheme: !0,\n          backgrounded: !0,\n          borderWidth: 1,\n          borderColor: \"transparent\",\n          focusVisibleStyle: {\n            outlineColor: \"$outlineColor\",\n            outlineStyle: \"solid\",\n            outlineWidth: 2\n          }\n        }\n      },\n      variant: {\n        outlined: {\n          backgroundColor: \"transparent\",\n          borderWidth: 2,\n          borderColor: \"$borderColor\",\n          hoverStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorHover\"\n          },\n          pressStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorPress\"\n          },\n          focusVisibleStyle: {\n            backgroundColor: \"transparent\",\n            borderColor: \"$borderColorFocus\"\n          }\n        }\n      },\n      size: {\n        \"...size\": getButtonSized,\n        \":number\": getButtonSized\n      },\n      disabled: {\n        true: {\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonText = styled(SizableText, {\n    name: \"Button\",\n    context: ButtonContext,\n    variants: {\n      unstyled: {\n        false: {\n          userSelect: \"none\",\n          cursor: \"pointer\",\n          // flexGrow 1 leads to inconsistent native style where text pushes to start of view\n          flexGrow: 0,\n          flexShrink: 1,\n          ellipse: !0,\n          color: \"$color\"\n        }\n      }\n    },\n    defaultVariants: {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\"\n    }\n  }),\n  ButtonIcon = props => {\n    const {\n        children,\n        scaleIcon = 1\n      } = props,\n      {\n        size,\n        color\n      } = useContext(ButtonContext),\n      iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size)) * scaleIcon;\n    return useGetThemedIcon({\n      size: iconSize,\n      color\n    })(children);\n  },\n  ButtonComponent = ButtonFrame.styleable(function (props, ref) {\n    const {\n      props: buttonProps\n    } = useButton(props);\n    return /* @__PURE__ */jsx(ButtonFrame, {\n      \"data-disable-theme\": !0,\n      ...buttonProps,\n      ref\n    });\n  }),\n  Button2 = withStaticProperties(ButtonComponent, {\n    Text: ButtonText,\n    Icon: ButtonIcon\n  });\nfunction useButton({\n  textProps,\n  ...propsIn\n}, {\n  Text = Button2.Text\n} = {\n  Text: Button2.Text\n}) {\n  const isNested = useContext(ButtonNestingContext),\n    propsActive = useProps(propsIn, {\n      noNormalize: !0,\n      noExpand: !0\n    }),\n    {\n      icon,\n      iconAfter,\n      space,\n      spaceFlex,\n      scaleIcon = 1,\n      scaleSpace = 0.66,\n      separator,\n      noTextWrap,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      tag,\n      ellipse,\n      maxFontSizeMultiplier,\n      ...restProps\n    } = propsActive,\n    size = propsActive.size || (propsActive.unstyled ? void 0 : \"$true\"),\n    color = propsActive.color,\n    iconSize = (typeof size == \"number\" ? size * 0.5 : getFontSize(size, {\n      font: fontFamily?.[0] === \"$\" ? fontFamily : void 0\n    })) * scaleIcon,\n    getThemedIcon = useGetThemedIcon({\n      size: iconSize,\n      color\n    }),\n    [themedIcon, themedIconAfter] = [icon, iconAfter].map(getThemedIcon),\n    spaceSize = space ?? getVariableValue(iconSize) * scaleSpace,\n    contents = noTextWrap ? [propsIn.children] : wrapChildrenInText(Text, {\n      children: propsIn.children,\n      fontFamily,\n      fontSize,\n      textProps,\n      fontWeight,\n      fontStyle,\n      letterSpacing,\n      ellipse,\n      maxFontSizeMultiplier\n    }, Text === ButtonText && propsActive.unstyled !== !0 ? {\n      unstyled: process.env.TAMAGUI_HEADLESS === \"1\",\n      size\n    } : void 0),\n    inner = spacedChildren({\n      // a bit arbitrary but scaling to font size is necessary so long as button does\n      space: spaceSize === !1 ? 0 : spaceSize == !0 ? \"$true\" : spaceSize,\n      spaceFlex,\n      ensureKeys: !0,\n      separator,\n      direction: propsActive.flexDirection === \"column\" || propsActive.flexDirection === \"column-reverse\" ? \"vertical\" : \"horizontal\",\n      // for keys to stay the same we keep indices as similar a possible\n      // so even if icons are undefined we still pass them\n      children: [themedIcon, ...contents, themedIconAfter]\n    }),\n    props = {\n      size,\n      ...(propsIn.disabled && {\n        // in rnw - false still has keyboard tabIndex, undefined = not actually focusable\n        focusable: void 0,\n        // even with tabIndex unset, it will keep focusVisibleStyle on web so disable it here\n        focusVisibleStyle: {\n          borderColor: \"$background\"\n        }\n      }),\n      // fixes SSR issue + DOM nesting issue of not allowing button in button\n      tag: tag ?? (isNested ? \"span\" :\n      // defaults to <a /> when accessibilityRole = link\n      // see https://github.com/tamagui/tamagui/issues/505\n      propsActive.accessibilityRole === \"link\" || propsActive.role === \"link\" ? \"a\" : \"button\"),\n      ...restProps,\n      children: /* @__PURE__ */jsx(ButtonNestingContext.Provider, {\n        value: !0,\n        children: inner\n      }),\n      // forces it to be a runtime pressStyle so it passes through context text colors\n      disableClassName: !0\n    };\n  return {\n    spaceSize,\n    isNested,\n    props\n  };\n}\nexport { Button2 as Button, ButtonContext, ButtonFrame, ButtonIcon, ButtonText, useButton };\n//# sourceMappingURL=Button.mjs.map\n"],"names":["_cn","AddressCopy","address","colors","useSporeColors","isCopied","setCopied","useCopyClipboard","shouldShowActions","useMedia","md","copyCallBack","useCallback","div","onClick","className","Text","variant","color","neutral2","val","shortenAddress","Copy","data-testid","size","neutral3","_cn3","_cn2","PoolAndGaugeAddress","poolAddress","gaugeAddress","fontWeight","IncentivizeContext","createContext","IncentivizeProvider","children","incentivizeStep","setIncentivizeStep","useState","Provider","value","useIncentivizeContext","context","useContext","Error","CurrencySelector","currencyInfo","onPress","emphasis","getCurrencyData","useCurrencyInfo","currencyId","currency","DropdownButton","elementPositioning","isExpanded","py","TokenLogo","iconSizes","icon24","chainId","name","symbol","url","logoUrl","PoolCheckOptions","selectPool","setSelectPool","CheckIcon","Check","surface1","Flex","$platform-web","display","gridTemplateColumns","gap","title","text","map","option","index","prev","concatClassName","mt","wordWrap","SinglePool","style","background","variable","slate","p","borderRadius","borderWidth","borderColor","hoverStyle","group","cursor","LogoProvider","MouseoverTooltip","TooltipSize","Max","placement","backgroundColor","px","transition","opacity","$group-hover","InfoCircleFilled","label","item","fontSize","Button","Plus","StepOnePools","Array","from","length","_","IncentivizePoolFirstStep","selectedInputToken","setSelectedInputToken","isOpenCurrencyModal","setIsOpenCurrencyModal","token0","setToken0","token1","setToken1","chains","useEnabledChains","handleCurrentyModal","token","useEffect","$sm","maxWidth","width","surface2","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","chainIds","ChangePoolAndIncetivizeButton","styled","button","props","$lock","surface2Hovered","accent1","neutral1","role","IncentivizeInput","inputRef","useRef","setValue","selectedToken","setSelectedToken","decimals","isNative","isToken","row","justifyContent","alignItems","current","focus","focusWithinStyle","Input","ref","textAlign","placeholder","inputMode","keyboardType","onChangeText","numericValue","replace","UnderstandCheckbox","checked","setChecked","Checkbox","VoteEmissionDeadline","FlexWrapper","borderTopWidth","MainPoolSection","IncentiveInput","PoolInfoAndChange","toggleModal","togglePoolInfoModal","useModalState","ModalName","PoolInfo","ButtonContainer","PoolInfoModal","modalName","isModalOpen","onClose","Modal","extendOnKeyboardVisible","fullScreen","hideKeyboardOnDismiss","hideKeyboardOnSwipeDown","renderBehindBottomInset","maxHeight","padding","height","centered","X","IncentivizePoolSecondStep","EditAmoutAndAllowButton","AllowConfirmAccess","position","overflow","RoundedLogo","pointerEvents","br","IncetiveAmountEdit","IncentivizePoolThirdStep","Incentivize","ConntextWrapper","ButtonContext","ellipse","fontFamily","fontStyle","letterSpacing","maxFontSizeMultiplier","ButtonFrame","tag","focusable","variants","unstyled","false","flexWrap","flexDirection","hoverTheme","pressTheme","backgrounded","focusVisibleStyle","outlineColor","outlineStyle","outlineWidth","outlined","pressStyle","disabled","true","defaultVariants","TAMAGUI_HEADLESS","ButtonText","userSelect","flexGrow","flexShrink","ButtonComponent","styleable","buttonProps","textProps","propsIn","Button2","isNested","propsActive","noNormalize","noExpand","icon","iconAfter","space","spaceFlex","scaleIcon","scaleSpace","separator","noTextWrap","restProps","iconSize","font","getThemedIcon","themedIcon","themedIconAfter","spaceSize","contents","inner","ensureKeys","direction","accessibilityRole","jsx","disableClassName","useButton","Icon"],"sourceRoot":""}