{"version":3,"file":"static/js/2514.a0d037e7.chunk.js","mappings":"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","sources":["../packages/uniswap/src/components/gating/Rows.tsx","webpack://@uniswap/interface/./src/components/FeatureFlagModal/FeatureFlagModal.tsx?be7e","components/FeatureFlagModal/FeatureFlagModal.tsx","pages/ExtensionPasskeyAuthPopUp/useExternallyConnectableExtensionId.ts"],"sourcesContent":["import { useCallback } from 'react'\r\nimport { Flex, Input, Switch, Text } from 'ui/src'\r\nimport { Experiments, LayerProperties, Layers } from 'uniswap/src/features/gating/experiments'\r\nimport { getOverrideAdapter, useExperiment, useLayer } from 'uniswap/src/features/gating/sdk/statsig'\r\n\r\nexport function LayerRow({\r\n  value: layerName,\r\n  layerDefault = false,\r\n}: {\r\n  value: Layers\r\n  layerDefault?: unknown\r\n}): JSX.Element {\r\n  const { get: getLayerValue } = useLayer(layerName)\r\n\r\n  const value = Object.values(LayerProperties[layerName]).reduce(\r\n    (acc, key) => ({ ...acc, [key]: getLayerValue(key) ?? layerDefault }),\r\n    {},\r\n  )\r\n\r\n  const overrideValue = useCallback(\r\n    <T,>(newPairs: Record<string, T>) => {\r\n      getOverrideAdapter().overrideLayer(layerName, { ...value, ...newPairs })\r\n    },\r\n    [layerName, value],\r\n  )\r\n\r\n  return <Row target={layerName} values={value} overrideValue={overrideValue} />\r\n}\r\n\r\nexport function ExperimentRow({ value: experimentName }: { value: Experiments }): JSX.Element {\r\n  const { value } = useExperiment(experimentName)\r\n\r\n  const overrideValue = useCallback(\r\n    <T,>(newPairs: Record<string, T>) => {\r\n      getOverrideAdapter().overrideExperiment(experimentName, newPairs)\r\n    },\r\n    [experimentName],\r\n  )\r\n\r\n  return <Row target={experimentName} values={value} overrideValue={overrideValue} />\r\n}\r\n\r\nfunction Row({\r\n  target,\r\n  values,\r\n  overrideValue,\r\n}: {\r\n  target: Experiments | Layers\r\n  values: Record<string, unknown>\r\n  overrideValue: <T>(newPairs: Record<string, T>) => void\r\n}): JSX.Element {\r\n  const handleBooleanChange = useCallback(\r\n    (key: string) => (newValue: boolean) => {\r\n      overrideValue<boolean>({ [key]: newValue })\r\n    },\r\n    [overrideValue],\r\n  )\r\n\r\n  const handleNumberChange = useCallback(\r\n    (key: string) => (newValue: string) => {\r\n      overrideValue<number>({ [key]: Number(newValue) })\r\n    },\r\n    [overrideValue],\r\n  )\r\n\r\n  const handleStringChange = useCallback(\r\n    (key: string) => (newValue: string) => {\r\n      overrideValue<string>({ [key]: newValue })\r\n    },\r\n    [overrideValue],\r\n  )\r\n\r\n  const paramRows = Object.entries(values).map(([key, val]) => {\r\n    let valueElement: JSX.Element | undefined\r\n\r\n    if (typeof val === 'boolean') {\r\n      valueElement = <Switch key={key} checked={val} variant=\"branded\" onCheckedChange={handleBooleanChange(key)} />\r\n    } else if (typeof val === 'number') {\r\n      valueElement = <Input value={val.toString()} onChangeText={handleNumberChange(key)} />\r\n    } else if (typeof val === 'string') {\r\n      valueElement = <Input value={val} onChangeText={handleStringChange(key)} />\r\n    }\r\n\r\n    return (\r\n      valueElement && (\r\n        <Flex key={key} row alignItems=\"center\" gap=\"$spacing16\" justifyContent=\"space-between\">\r\n          <Text variant=\"body1\">{key}</Text>\r\n          {valueElement}\r\n        </Flex>\r\n      )\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Flex>\r\n      <Text variant=\"body1\">{target}</Text>\r\n      <Flex>\r\n        <Flex gap=\"$spacing8\" pl=\"$spacing8\">\r\n          {paramRows}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport styledDep from \"lib/styled-components\";\nimport { useExternallyConnectableExtensionId } from \"pages/ExtensionPasskeyAuthPopUp/useExternallyConnectableExtensionId\";\nimport { useCallback } from \"react\";\nimport { Button, Flex, ModalCloseIcon, Text, styled } from \"ui/src\";\nimport { LayerRow } from \"uniswap/src/components/gating/Rows\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport {\n  DynamicConfigs,\n  ExternallyConnectableExtensionConfigKey,\n  NetworkRequestsConfigKey\n} from \"uniswap/src/features/gating/configs\";\nimport { Layers } from \"uniswap/src/features/gating/experiments\";\nimport { FeatureFlags, getFeatureFlagName } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithExposureLoggingDisabled } from \"uniswap/src/features/gating/hooks\";\nimport { getOverrideAdapter } from \"uniswap/src/features/gating/sdk/statsig\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { isPlaywrightEnv } from \"utilities/src/environment/env\";\nimport { TRUSTED_CHROME_EXTENSION_IDS } from \"utilities/src/environment/extensionId\";\nconst CenteredRow = styled(Flex, {\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  py: \"$gap8\",\n  maxWidth: \"100%\",\n  gap: \"$gap4\"\n});\nconst FlagInfo = styled(Flex, {\n  pl: \"$padding8\",\n  flexShrink: 1\n});\nfunction FeatureFlagGroup({ name, children }) {\n  return <>\r\n      <CenteredRow key={name}>\r\n        <Text variant=\"body1\">{name}</Text>\r\n      </CenteredRow>\r\n      {children}\r\n    </>;\n}\nconst FlagVariantSelection = styledDep.select`\n  border-radius: 12px;\n  padding: 8px;\n  background: ${({ theme }) => theme.surface3};\n  font-weight: 535;\n  font-size: 16px;\n  border: none;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  :hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nfunction Variant({ option }) {\n  return <option value={option}>{option}</option>;\n}\nfunction FeatureFlagOption({ flag, label }) {\n  const enabled = useFeatureFlagWithExposureLoggingDisabled(flag);\n  const name = getFeatureFlagName(flag);\n  const onFlagVariantChange = useCallback(\n    (e) => {\n      getOverrideAdapter().overrideGate(name, e.target.value === \"Enabled\" ? true : false);\n    },\n    [name]\n  );\n  return <CenteredRow key={flag}>\r\n      <FlagInfo>\r\n        <Text variant=\"body2\">{name}</Text>\r\n        <Text variant=\"body4\" color=\"$neutral2\">\r\n          {label}\r\n        </Text>\r\n      </FlagInfo>\r\n      <FlagVariantSelection id={name} onChange={onFlagVariantChange} value={enabled ? \"Enabled\" : \"Disabled\"}>\r\n        {[\"Enabled\", \"Disabled\"].map((variant) => <Variant key={variant} option={variant} />)}\r\n      </FlagVariantSelection>\r\n    </CenteredRow>;\n}\nfunction DynamicConfigDropdown({\n  config,\n  configKey,\n  label,\n  options,\n  selected,\n  parser,\n  allowMultiple = true\n}) {\n  const handleSelectChange = useCallback(\n    (e) => {\n      const selectedValues = Array.from(e.target.selectedOptions, (opt) => parser(opt.value));\n      getOverrideAdapter().overrideDynamicConfig(config, {\n        [configKey]: allowMultiple ? selectedValues : selectedValues[0]\n      });\n    },\n    [allowMultiple, config, configKey, parser]\n  );\n  return <CenteredRow key={config}>\r\n      <FlagInfo>\r\n        <Text variant=\"body2\">{config}</Text>\r\n        <Text variant=\"body4\" color=\"$neutral2\">\r\n          {label}\r\n        </Text>\r\n      </FlagInfo>\r\n      <select multiple={allowMultiple} onChange={handleSelectChange}>\r\n        {Array.isArray(options) ? options.map((opt) => <option key={opt} value={opt} selected={selected.includes(opt)}>\r\n                {opt}\r\n              </option>) : Object.entries(options).map(([key, value]) => <option key={key} value={value} selected={selected.includes(value)}>\r\n                {key}\r\n              </option>)}\r\n      </select>\r\n    </CenteredRow>;\n}\nexport default function FeatureFlagModal() {\n  const { isOpen, closeModal } = useModalState(ModalName.FeatureFlags);\n  const removeAllOverrides = () => {\n    getOverrideAdapter().removeAllOverrides();\n  };\n  return <Modal name={ModalName.FeatureFlags} isModalOpen={isOpen} onClose={closeModal} padding={0}>\r\n      <Flex py=\"$gap20\" px=\"$gap16\" gap=\"$gap8\">\r\n        <CenteredRow borderBottomColor=\"$surface3\" borderBottomWidth={1}>\r\n          <Flex row grow alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Text variant=\"subheading2\">Feature Flag Settings</Text>\r\n            <Button onPress={removeAllOverrides} variant=\"branded\" size=\"small\" fill={false}>\r\n              Clear Overrides\r\n            </Button>\r\n          </Flex>\r\n          <ModalCloseIcon onClose={closeModal} />\r\n        </CenteredRow>\r\n        <Flex maxHeight=\"600px\" pb=\"$gap8\" overflow=\"scroll\" $md={{ maxHeight: \"unset\" }}>\r\n          <FeatureFlagGroup name=\"Swap Refactor\">\r\n            <FeatureFlagOption\n    flag={FeatureFlags.ServiceBasedSwapTransactionInfo}\n    label=\"Enable service-based swap transaction info\"\n  />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Swap Features\">\r\n            <FeatureFlagOption flag={FeatureFlags.BatchedSwaps} label=\"Enable Batched Swaps\" />\r\n            <FeatureFlagOption flag={FeatureFlags.IndicativeSwapQuotes} label=\"Enable Quick Routes\" />\r\n            <FeatureFlagOption flag={FeatureFlags.UniquoteEnabled} label=\"Enable Uniquote\" />\r\n            <FeatureFlagOption flag={FeatureFlags.ViemProviderEnabled} label=\"Enable Viem Provider\" />\r\n            <FeatureFlagOption flag={FeatureFlags.InstantTokenBalanceUpdate} label=\"Instant token balance update\" />\r\n            <FeatureFlagOption flag={FeatureFlags.LimitsFees} label=\"Enable Limits fees\" />\r\n            <FeatureFlagOption flag={FeatureFlags.EnablePermitMismatchUX} label=\"Enable Permit2 mismatch detection\" />\r\n            <FeatureFlagOption\n    flag={FeatureFlags.ForcePermitTransactions}\n    label=\"Force Permit2 transaction instead of signatures, always\"\n  />\r\n            <FeatureFlagOption flag={FeatureFlags.SwapSettingsV4HooksToggle} label=\"Swap Settings V4 Hooks Toggle\" />\r\n            <FeatureFlagOption\n    flag={FeatureFlags.ForceDisableWalletGetCapabilities}\n    label=\"Force disable wallet get capabilities result\"\n  />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"UniswapX\">\r\n            <FeatureFlagOption flag={FeatureFlags.UniswapX} label=\"Enable UniswapX\" />\r\n            <FeatureFlagOption\n    flag={FeatureFlags.UniswapXPriorityOrdersBase}\n    label=\"UniswapX Priority Orders (on Base)\"\n  />\r\n            <FeatureFlagOption\n    flag={FeatureFlags.UniswapXPriorityOrdersUnichain}\n    label=\"UniswapX Priority Orders (on Unichain)\"\n  />\r\n            <FeatureFlagOption flag={FeatureFlags.ArbitrumDutchV3} label=\"Enable Dutch V3 on Arbitrum\" />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"LP\">\r\n            <FeatureFlagOption flag={FeatureFlags.LpIncentives} label=\"Enable LP Incentives\" />\r\n            <FeatureFlagOption flag={FeatureFlags.PositionPageV2} label=\"Enable Position Page V2\" />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Embedded Wallet\">\r\n            <FeatureFlagOption flag={FeatureFlags.EmbeddedWallet} label=\"Add internal embedded wallet functionality\" />\r\n            <DynamicConfigDropdown\n    selected={[useExternallyConnectableExtensionId()]}\n    options={TRUSTED_CHROME_EXTENSION_IDS}\n    parser={(id) => id}\n    config={DynamicConfigs.ExternallyConnectableExtension}\n    configKey={ExternallyConnectableExtensionConfigKey.ExtensionId}\n    label=\"Which Extension the web app will communicate with\"\n    allowMultiple={false}\n  />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Search\">\r\n            <FeatureFlagOption flag={FeatureFlags.SearchRevamp} label=\"Enable search revamp\" />\r\n            <FeatureFlagOption\n    flag={FeatureFlags.PoolSearch}\n    label=\"Enable pool search (turn on search_revamp as well to see)\"\n  />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"New Chains\">\r\n            <FeatureFlagOption flag={FeatureFlags.MonadTestnet} label=\"Enable Monad Testnet\" />\r\n            <FeatureFlagOption flag={FeatureFlags.Soneium} label=\"Enable Soneium\" />\r\n            <FeatureFlagOption flag={FeatureFlags.MonadTestnetDown} label=\"Enable Monad Testnet Down Banner\" />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Network Requests\">\r\n            <DynamicConfigDropdown\n    selected={[30]}\n    options={[1, 10, 20, 30]}\n    parser={Number.parseInt}\n    config={DynamicConfigs.NetworkRequests}\n    configKey={NetworkRequestsConfigKey.BalanceMaxRefetchAttempts}\n    label=\"Max refetch attempts\"\n  />\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Debug\">\r\n            <FeatureFlagOption flag={FeatureFlags.TraceJsonRpc} label=\"Enables JSON-RPC tracing\" />\r\n            <FeatureFlagOption flag={FeatureFlags.AATestWeb} label=\"A/A Test for Web\" />\r\n            {isPlaywrightEnv() && <FeatureFlagOption flag={FeatureFlags.DummyFlagTest} label=\"Dummy Flag Test\" />}\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Misc\" />\r\n          <FeatureFlagGroup name=\"Experiments\">\r\n            <Flex ml=\"$padding8\">{\n    /* add `ExperimentRow`s here */\n  }</Flex>\r\n          </FeatureFlagGroup>\r\n          <FeatureFlagGroup name=\"Layers\">\r\n            <Flex ml=\"$padding8\">\r\n              <LayerRow value={Layers.SwapPage} />\r\n            </Flex>\r\n          </FeatureFlagGroup>\r\n        </Flex>\r\n        <Button onPress={window.location.reload} variant=\"default\" emphasis=\"secondary\" size=\"small\" fill={false}>\r\n          Reload\r\n        </Button>\r\n      </Flex>\r\n    </Modal>;\n}\n","\"use strict\";\nimport { DynamicConfigs, ExternallyConnectableExtensionConfigKey } from \"uniswap/src/features/gating/configs\";\nimport { useDynamicConfigValue } from \"uniswap/src/features/gating/hooks\";\nimport { TRUSTED_CHROME_EXTENSION_IDS } from \"utilities/src/environment/extensionId\";\nexport function useExternallyConnectableExtensionId() {\n  const extensionId = useDynamicConfigValue(\n    DynamicConfigs.ExternallyConnectableExtension,\n    ExternallyConnectableExtensionConfigKey.ExtensionId,\n    TRUSTED_CHROME_EXTENSION_IDS.prod\n  );\n  return extensionId;\n}\n"],"names":["_ref","layerName","value","_ref$layerDefault","layerDefault","getLayerValue","useLayer","get","Object","values","LayerProperties","reduce","acc","key","_getLayerValue","assign","_defineProperty2","default","overrideValue","useCallback","newPairs","getOverrideAdapter","overrideLayer","_jsxRuntime","jsx","Row","target","_react","require","_src","_experiments","_statsig","_ref3","handleBooleanChange","newValue","handleNumberChange","Number","handleStringChange","paramRows","entries","map","_ref4","valueElement","_ref5","_slicedToArray2","val","Switch","checked","variant","onCheckedChange","Input","toString","onChangeText","jsxs","Flex","row","alignItems","gap","justifyContent","children","Text","pl","_cn4","_cn3","_cn2","_cn","CenteredRow","styled","flexDirection","py","maxWidth","FlagInfo","flexShrink","FeatureFlagGroup","name","FlagVariantSelection","styledDep","select","theme","surface3","neutral1","Variant","option","FeatureFlagOption","flag","label","enabled","useFeatureFlagWithExposureLoggingDisabled","getFeatureFlagName","onFlagVariantChange","e","overrideGate","color","id","onChange","DynamicConfigDropdown","config","configKey","options","selected","parser","allowMultiple","handleSelectChange","selectedValues","Array","from","selectedOptions","opt","overrideDynamicConfig","multiple","isArray","includes","FeatureFlagModal","isOpen","closeModal","useModalState","ModalName","FeatureFlags","Modal","isModalOpen","onClose","padding","div","className","borderBottomColor","borderBottomWidth","Button","onPress","removeAllOverrides","size","fill","ModalCloseIcon","ServiceBasedSwapTransactionInfo","BatchedSwaps","IndicativeSwapQuotes","UniquoteEnabled","ViemProviderEnabled","InstantTokenBalanceUpdate","LimitsFees","EnablePermitMismatchUX","ForcePermitTransactions","SwapSettingsV4HooksToggle","ForceDisableWalletGetCapabilities","UniswapX","UniswapXPriorityOrdersBase","UniswapXPriorityOrdersUnichain","ArbitrumDutchV3","LpIncentives","PositionPageV2","EmbeddedWallet","useExternallyConnectableExtensionId","TRUSTED_CHROME_EXTENSION_IDS","DynamicConfigs","ExternallyConnectableExtension","ExternallyConnectableExtensionConfigKey","ExtensionId","SearchRevamp","PoolSearch","MonadTestnet","Soneium","MonadTestnetDown","parseInt","NetworkRequests","NetworkRequestsConfigKey","BalanceMaxRefetchAttempts","TraceJsonRpc","AATestWeb","isPlaywrightEnv","DummyFlagTest","LayerRow","Layers","SwapPage","window","location","reload","emphasis","useDynamicConfigValue","prod"],"sourceRoot":""}