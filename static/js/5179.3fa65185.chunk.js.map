{"version":3,"file":"static/js/5179.3fa65185.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/LpIncentives/LpIncentivesAprDisplay.tsx?0b0c","webpack://@uniswap/interface/./src/components/Liquidity/LPIncentiveFeeStatTooltip.tsx?bd3f","../packages/ui/src/components/icons/DocumentList.tsx","../packages/uniswap/src/data/rest/getPools.ts","../packages/ui/src/components/icons/Magic.tsx","components/Liquidity/LPIncentiveFeeStatTooltip.tsx","components/Liquidity/hooks.ts","hooks/useIsTickAtLimit.ts","components/LpIncentives/LpIncentivesAprDisplay.tsx","components/LpIncentives/constants.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [DocumentList, AnimatedDocumentList] = createIcon({\n  name: \"DocumentList\",\n  getIcon: (props) => <Svg viewBox=\"0 0 29 28\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M25 13.4167V21.2917C25 22.0967 24.3467 22.75 23.5417 22.75C22.7367 22.75 22.0833 22.0967 22.0833 21.2917V11.6667H23.25C24.216 11.6667 25 12.4507 25 13.4167ZM20.3333 22.1667V7C20.3333 4.66667 19.1667 3.5 16.8333 3.5H7.5C5.16667 3.5 4 4.66667 4 7V21C4 23.3333 5.16667 24.5 7.5 24.5H22.6667C21.3787 24.5 20.3333 23.4558 20.3333 22.1667ZM8.08333 19.5417C7.60033 19.5417 7.20833 19.1497 7.20833 18.6667C7.20833 18.1837 7.60033 17.7917 8.08333 17.7917C8.56633 17.7917 8.95833 18.1837 8.95833 18.6667C8.95833 19.1497 8.56633 19.5417 8.08333 19.5417ZM8.08333 14.875C7.60033 14.875 7.20833 14.483 7.20833 14C7.20833 13.517 7.60033 13.125 8.08333 13.125C8.56633 13.125 8.95833 13.517 8.95833 14C8.95833 14.483 8.56633 14.875 8.08333 14.875ZM8.08333 10.2083C7.60033 10.2083 7.20833 9.81633 7.20833 9.33333C7.20833 8.85033 7.60033 8.45833 8.08333 8.45833C8.56633 8.45833 8.95833 8.85033 8.95833 9.33333C8.95833 9.81633 8.56633 10.2083 8.08333 10.2083ZM16.25 19.5417H11C10.517 19.5417 10.125 19.1497 10.125 18.6667C10.125 18.1837 10.517 17.7917 11 17.7917H16.25C16.733 17.7917 17.125 18.1837 17.125 18.6667C17.125 19.1497 16.733 19.5417 16.25 19.5417ZM16.25 14.875H11C10.517 14.875 10.125 14.483 10.125 14C10.125 13.517 10.517 13.125 11 13.125H16.25C16.733 13.125 17.125 13.517 17.125 14C17.125 14.483 16.733 14.875 16.25 14.875ZM16.25 10.2083H11C10.517 10.2083 10.125 9.81633 10.125 9.33333C10.125 8.85033 10.517 8.45833 11 8.45833H16.25C16.733 8.45833 17.125 8.85033 17.125 9.33333C17.125 9.81633 16.733 10.2083 16.25 10.2083Z\"\n    fill={\"currentColor\"}\n  />\r\n    </Svg>,\n  defaultFill: \"#7D7D7D\"\n});\n","\"use strict\";\nimport { useQuery } from \"@connectrpc/connect-query\";\nimport { listPools } from \"@uniswap/client-pools/dist/pools/v1/api-PoolsService_connectquery\";\nimport { uniswapGetTransport } from \"uniswap/src/data/rest/base\";\nexport function useGetPoolsByTokens(input, enabled = true) {\n  return useQuery(listPools, input, { transport: uniswapGetTransport, enabled });\n}\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Magic, AnimatedMagic] = createIcon({\n  name: \"Magic\",\n  getIcon: (props) => <Svg viewBox=\"0 0 18 19\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M9.01511 16.2499C8.85761 16.2499 8.7151 16.1449 8.6701 15.9949L8.1151 14.0599C7.6126 12.2824 6.22509 10.9024 4.44759 10.3999L2.50512 9.84487C2.31762 9.79237 2.2051 9.59737 2.2576 9.40987C2.2876 9.28987 2.38512 9.19987 2.50512 9.16237L4.44759 8.60736C6.22509 8.10486 7.6126 6.72486 8.1151 4.94736L8.6701 3.01237C8.7226 2.82487 8.91762 2.71237 9.11262 2.76487C9.23262 2.80237 9.32258 2.89237 9.36008 3.01237L9.91508 4.94736C10.4176 6.72486 11.8051 8.10486 13.5826 8.60736L15.5251 9.16237C15.7126 9.23737 15.8026 9.45487 15.7276 9.64237C15.6901 9.73237 15.6151 9.80737 15.5251 9.84487L13.5826 10.3999C11.8051 10.9024 10.4176 12.2899 9.91508 14.0599L9.36008 15.9949C9.31508 16.1449 9.17261 16.2499 9.01511 16.2499ZM4.38012 16.1749L4.5526 15.5899C4.7026 15.0574 5.12258 14.6449 5.65508 14.4949L6.2401 14.3299C6.3001 14.3074 6.32262 14.2399 6.30012 14.1874C6.28512 14.1574 6.2701 14.1424 6.2401 14.1274L5.65508 13.9624C5.12258 13.8124 4.7026 13.3999 4.5526 12.8674L4.38012 12.2824C4.36512 12.2224 4.30508 12.1924 4.24508 12.2074C4.20758 12.2149 4.1851 12.2449 4.1701 12.2824L4.00512 12.8674C3.85512 13.3999 3.43509 13.8124 2.90259 13.9624L2.31762 14.1274C2.25762 14.1424 2.22759 14.2024 2.24259 14.2624C2.25009 14.2999 2.28012 14.3224 2.31762 14.3374L2.90259 14.5024C3.43509 14.6524 3.85512 15.0649 4.00512 15.5974L4.1701 16.1824C4.1851 16.2424 4.24509 16.2724 4.30509 16.2574C4.34259 16.2499 4.36512 16.2199 4.38012 16.1824V16.1749ZM14.4751 5.39737L14.5876 5.00736C14.6851 4.65486 14.9626 4.37736 15.3226 4.27986L15.7126 4.16737C15.7501 4.15237 15.7651 4.10736 15.7501 4.06986C15.7426 4.05486 15.7276 4.03987 15.7126 4.03237L15.3226 3.91986C14.9701 3.82236 14.6926 3.54486 14.5876 3.19236L14.4751 2.80237C14.4676 2.76487 14.4226 2.74236 14.3851 2.75736C14.3626 2.75736 14.3476 2.77987 14.3401 2.80237L14.2276 3.19236C14.1301 3.54486 13.8526 3.82236 13.4926 3.91986L13.1026 4.03237C13.0651 4.03987 13.0426 4.08487 13.0576 4.12237C13.0576 4.14487 13.0801 4.15987 13.1026 4.16737L13.4926 4.27986C13.8451 4.37736 14.1226 4.65486 14.2276 5.00736L14.3401 5.39737C14.3476 5.43487 14.3926 5.45736 14.4301 5.44236C14.4526 5.44236 14.4676 5.41987 14.4751 5.39737Z\"\n    fill=\"oklch(0.92 0.004 286.32)\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { Magic } from \"ui/src/components/icons/Magic\";\nimport { SplitLogo } from \"uniswap/src/components/CurrencyLogo/SplitLogo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nfunction LPIncentiveFeeStatTooltip({\n  currency0Info,\n  currency1Info,\n  poolApr,\n  lpIncentiveRewardApr,\n  totalApr,\n  chainId = UniverseChainId.Mainnet\n}) {\n  const { t } = useTranslation();\n  const { formatPercent } = useLocalizationContext();\n  const displayPoolApr = poolApr ? formatPercent(poolApr) : \"-\";\n  const displayRewardApr = lpIncentiveRewardApr ? formatPercent(lpIncentiveRewardApr) : \"-\";\n  const displayTotalApr = totalApr ? formatPercent(totalApr) : \"-\";\n  return <Flex\n    flexDirection=\"column\"\n    gap=\"$spacing4\"\n    id=\"boosted-apr-tooltip\"\n    paddingTop=\"$spacing8\"\n    paddingBottom={5}\n    px=\"$spacing4\"\n  >\r\n      <TooltipRow>\r\n        <TooltipLabel\n    icon={<SplitLogo\n      inputCurrencyInfo={currency0Info}\n      outputCurrencyInfo={currency1Info}\n      size={16}\n      chainId={chainId}\n    />}\n    label={t(\"pool.aprText\")}\n  />\r\n        <Text variant=\"body4\" color=\"$neutral1\">\r\n          {displayPoolApr}\r\n        </Text>\r\n      </TooltipRow>\r\n      <TooltipRow>\r\n        {\n    /* <TooltipLabel\n      icon={<CurrencyLogo currency={LP_INCENTIVES_REWARD_TOKEN} size={16} />}\n      label={t('pool.rewardAPR')}\n    /> */\n  }\r\n\r\n        <TooltipLabel\n    icon={<Flex height={14} width={14} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n        <img height={12} width={12} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n      </Flex>}\n    label={t(\"pool.rewardAPR\")}\n  />\r\n        <Text variant=\"body4\" color=\"$neutral1\">\r\n          {displayRewardApr}\r\n        </Text>\r\n      </TooltipRow>\r\n      <TooltipRow backgroundColor=\"$accent2\" borderBottomLeftRadius=\"$rounded6\" borderBottomRightRadius=\"$rounded6\">\r\n        <TooltipLabel icon={<Magic size=\"$icon.16\" color=\"$accent1\" />} label={t(\"pool.totalAPR\")} color=\"$accent1\" />\r\n        <Text variant=\"body4\" color=\"$accent1\">\r\n          {displayTotalApr}\r\n        </Text>\r\n      </TooltipRow>\r\n    </Flex>;\n}\nexport default LPIncentiveFeeStatTooltip;\nconst TooltipRow = ({\n  children,\n  backgroundColor,\n  borderBottomLeftRadius,\n  borderBottomRightRadius\n}) => <Flex\n  row\n  justifyContent=\"space-between\"\n  alignItems=\"center\"\n  px=\"$spacing8\"\n  height=\"$spacing24\"\n  gap=\"$spacing4\"\n  backgroundColor={backgroundColor}\n  borderBottomLeftRadius={borderBottomLeftRadius}\n  borderBottomRightRadius={borderBottomRightRadius}\n>\r\n    {children}\r\n  </Flex>;\nconst TooltipLabel = ({ icon, label, color = \"$neutral2\" }) => <Flex row alignItems=\"center\" gap=\"$spacing6\">\r\n    {icon}\r\n    <Text variant=\"body4\" color={color}>\r\n      {label}\r\n    </Text>\r\n  </Flex>;\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport {\n  calculateInvertedValues,\n  getDefaultFeeTiersForChainWithDynamicFeeTier,\n  mergeFeeTiers\n} from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport useIsTickAtLimit from \"hooks/useIsTickAtLimit\";\nimport JSBI from \"jsbi\";\nimport { getCurrencyAddressForTradingApi, getSortedCurrenciesTupleWithWrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppSelector } from \"state/hooks\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { PollingInterval } from \"uniswap/src/constants/misc\";\nimport { useGetPoolsByTokens } from \"uniswap/src/data/rest/getPools\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nfunction getPriceOrderingFromPositionForUI(position) {\n  if (!position) {\n    return {};\n  }\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0\n  };\n}\nexport const MAX_FEE_TIER_DECIMALS = 4;\nexport function useAllFeeTierPoolData({\n  chainId,\n  protocolVersion,\n  currencies,\n  withDynamicFeeTier = false,\n  hook\n}) {\n  const { t } = useTranslation();\n  const { formatPercent } = useFormatter();\n  const sortedCurrencies = getSortedCurrenciesTupleWithWrap(currencies[0], currencies[1], protocolVersion);\n  const { data: poolData } = useGetPoolsByTokens(\n    {\n      chainId,\n      protocolVersions: [protocolVersion],\n      token0: getCurrencyAddressForTradingApi(sortedCurrencies[0]),\n      token1: getCurrencyAddressForTradingApi(sortedCurrencies[1]),\n      hooks: hook ?? ZERO_ADDRESS\n    },\n    Boolean(chainId && sortedCurrencies?.[0] && sortedCurrencies?.[1])\n  );\n  return useMemo(() => {\n    const liquiditySum = poolData?.pools.reduce(\n      (sum, pool) => BigNumber.from(pool.totalLiquidityUsd.split(\".\")?.[0] ?? \"0\").add(sum),\n      BigNumber.from(0)\n    );\n    const feeTierData = {};\n    if (poolData && liquiditySum && sortedCurrencies?.[0] && sortedCurrencies?.[1]) {\n      for (const pool of poolData.pools) {\n        const feeTier = pool.fee;\n        const totalLiquidityUsdTruncated = Number(pool.totalLiquidityUsd.split(\".\")?.[0] ?? \"0\");\n        const percentage = liquiditySum.isZero() ? new Percent(0, 100) : new Percent(totalLiquidityUsdTruncated, liquiditySum.toString());\n        if (feeTierData[feeTier]) {\n          feeTierData[feeTier].totalLiquidityUsd += totalLiquidityUsdTruncated;\n          feeTierData[feeTier].percentage = feeTierData[feeTier].percentage.add(percentage);\n        } else {\n          feeTierData[feeTier] = {\n            id: pool.poolId,\n            fee: {\n              feeAmount: pool.fee,\n              tickSpacing: pool.tickSpacing\n            },\n            formattedFee: formatPercent(new Percent(pool.fee, 1e6), MAX_FEE_TIER_DECIMALS),\n            totalLiquidityUsd: totalLiquidityUsdTruncated,\n            percentage,\n            tvl: pool.totalLiquidityUsd,\n            created: true,\n            boostedApr: pool.boostedApr\n          };\n        }\n      }\n    }\n    return {\n      feeTierData: mergeFeeTiers(\n        feeTierData,\n        Object.values(\n          getDefaultFeeTiersForChainWithDynamicFeeTier({\n            chainId,\n            dynamicFeeTierEnabled: withDynamicFeeTier,\n            protocolVersion\n          })\n        ),\n        formatPercent,\n        t(\"fee.dynamic\")\n      ),\n      hasExistingFeeTiers: Object.values(feeTierData).length > 0\n    };\n  }, [poolData, sortedCurrencies, chainId, withDynamicFeeTier, formatPercent, protocolVersion, t]);\n}\nexport function usePositionDerivedInfo(positionInfo) {\n  const {\n    token0UncollectedFees,\n    token1UncollectedFees,\n    currency0Amount,\n    currency1Amount,\n    liquidity,\n    tickLower,\n    tickUpper,\n    apr\n  } = positionInfo ?? {};\n  const { price: price0 } = useUSDCPrice(currency0Amount?.currency, PollingInterval.Normal);\n  const { price: price1 } = useUSDCPrice(currency1Amount?.currency, PollingInterval.Normal);\n  const { feeValue0, feeValue1 } = useMemo(() => {\n    if (!currency0Amount || !currency1Amount) {\n      return {};\n    }\n    return {\n      feeValue0: token0UncollectedFees ? CurrencyAmount.fromRawAmount(currency0Amount.currency, token0UncollectedFees) : void 0,\n      feeValue1: token1UncollectedFees ? CurrencyAmount.fromRawAmount(currency1Amount.currency, token1UncollectedFees) : void 0\n    };\n  }, [currency0Amount, currency1Amount, token0UncollectedFees, token1UncollectedFees]);\n  const { fiatFeeValue0, fiatFeeValue1 } = useMemo(() => {\n    const amount0 = feeValue0 ? price0?.quote(feeValue0) : void 0;\n    const amount1 = feeValue1 ? price1?.quote(feeValue1) : void 0;\n    return {\n      fiatFeeValue0: amount0,\n      fiatFeeValue1: amount1\n    };\n  }, [price0, price1, feeValue0, feeValue1]);\n  const { fiatValue0, fiatValue1 } = useMemo(() => {\n    if (!price0 || !price1 || !currency0Amount || !currency1Amount) {\n      return {};\n    }\n    const amount0 = price0.quote(currency0Amount);\n    const amount1 = price1.quote(currency1Amount);\n    return {\n      fiatValue0: amount0,\n      fiatValue1: amount1\n    };\n  }, [price0, price1, currency0Amount, currency1Amount]);\n  const priceOrdering = useMemo(() => {\n    if (positionInfo?.version !== ProtocolVersion.V3 && positionInfo?.version !== ProtocolVersion.V4 || !positionInfo.position || !liquidity || !tickLower || !tickUpper) {\n      return {};\n    }\n    return getPriceOrderingFromPositionForUI(positionInfo.position);\n  }, [liquidity, tickLower, tickUpper, positionInfo]);\n  return useMemo(() => {\n    const baseInfo = {\n      fiatFeeValue0,\n      fiatFeeValue1,\n      fiatValue0,\n      fiatValue1,\n      priceOrdering,\n      feeValue0,\n      feeValue1,\n      apr,\n      token0CurrentPrice: void 0,\n      token1CurrentPrice: void 0\n    };\n    if (!positionInfo) {\n      return baseInfo;\n    }\n    if (positionInfo.version === ProtocolVersion.V2) {\n      return {\n        ...baseInfo,\n        version: ProtocolVersion.V2,\n        token0CurrentPrice: void 0,\n        token1CurrentPrice: void 0\n      };\n    }\n    return {\n      ...baseInfo,\n      version: positionInfo.version,\n      token0CurrentPrice: positionInfo.pool?.token0Price,\n      token1CurrentPrice: positionInfo.pool?.token1Price\n    };\n  }, [fiatFeeValue0, fiatFeeValue1, fiatValue0, fiatValue1, priceOrdering, feeValue0, feeValue1, positionInfo, apr]);\n}\nexport function useGetRangeDisplay({\n  priceOrdering,\n  pricesInverted,\n  tickSpacing,\n  tickLower,\n  tickUpper\n}) {\n  const { formatTickPrice } = useFormatter();\n  const { priceLower, priceUpper, base, quote } = calculateInvertedValues({\n    ...priceOrdering,\n    invert: pricesInverted\n  });\n  const isTickAtLimit = useIsTickAtLimit(tickSpacing, Number(tickLower), Number(tickUpper));\n  const minPrice = formatTickPrice({\n    price: priceLower,\n    atLimit: isTickAtLimit,\n    direction: Bound.LOWER,\n    numberType: NumberType.TokenTx\n  });\n  const maxPrice = formatTickPrice({\n    price: priceUpper,\n    atLimit: isTickAtLimit,\n    direction: Bound.UPPER,\n    numberType: NumberType.TokenTx\n  });\n  const tokenASymbol = quote?.symbol;\n  const tokenBSymbol = base?.symbol;\n  return {\n    minPrice,\n    maxPrice,\n    tokenASymbol,\n    tokenBSymbol,\n    isFullRange: isTickAtLimit[Bound.LOWER] && isTickAtLimit[Bound.UPPER]\n  };\n}\nexport function usePositionCurrentPrice(positionInfo) {\n  return useMemo(() => {\n    if (positionInfo?.version === ProtocolVersion.V2) {\n      return positionInfo.pair?.token1Price;\n    }\n    return positionInfo?.pool?.token1Price;\n  }, [positionInfo]);\n}\nexport function useModalLiquidityInitialState() {\n  const modalState = useAppSelector((state) => state.application.openModal);\n  return modalState?.initialState;\n}\nexport function useGetPoolTokenPercentage(positionInfo) {\n  const { totalSupply, liquidityAmount } = positionInfo ?? {};\n  const poolTokenPercentage = useMemo(() => {\n    return !!liquidityAmount && !!totalSupply && JSBI.greaterThanOrEqual(totalSupply.quotient, liquidityAmount.quotient) ? new Percent(liquidityAmount.quotient, totalSupply.quotient) : void 0;\n  }, [liquidityAmount, totalSupply]);\n  return poolTokenPercentage;\n}\n","\"use strict\";\nimport { TickMath, nearestUsableTick } from \"@uniswap/v3-sdk\";\nimport { useMemo } from \"react\";\nimport { Bound } from \"state/mint/v3/actions\";\nexport default function useIsTickAtLimit(tickSpacing, tickLower, tickUpper) {\n  return useMemo(\n    () => ({\n      [Bound.LOWER]: tickSpacing && tickLower ? tickLower === nearestUsableTick(TickMath.MIN_TICK, tickSpacing) : void 0,\n      [Bound.UPPER]: tickSpacing && tickUpper ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, tickSpacing) : void 0\n    }),\n    [tickSpacing, tickLower, tickUpper]\n  );\n}\n","\"use strict\";\nimport LPIncentiveFeeStatTooltip from \"components/Liquidity/LPIncentiveFeeStatTooltip\";\nimport { LP_INCENTIVES_CHAIN_ID, LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text } from \"ui/src\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { buildCurrencyId } from \"uniswap/src/utils/currencyId\";\nexport function LpIncentivesAprDisplay({\n  lpIncentiveRewardApr,\n  isSmall,\n  hideBackground,\n  showTokenSymbol,\n  tooltipProps,\n  ...rest\n}) {\n  const { t } = useTranslation();\n  const { formatPercent } = useLocalizationContext();\n  const rewardCurrencyInfo = useCurrencyInfo(\n    buildCurrencyId(LP_INCENTIVES_CHAIN_ID, LP_INCENTIVES_REWARD_TOKEN.address)\n  );\n  const content = <Flex\n    row\n    backgroundColor={hideBackground ? void 0 : \"$accent2\"}\n    px={hideBackground ? void 0 : \"$spacing6\"}\n    borderRadius={hideBackground ? void 0 : \"$rounded6\"}\n    gap=\"$spacing6\"\n    alignItems=\"center\"\n    width=\"fit-content\"\n    {...tooltipProps ? ClickableTamaguiStyle : {}}\n    {...rest}\n  >\r\n      {\n    /* <CurrencyLogo currencyInfo={rewardCurrencyInfo} size={isSmall ? 12 : 16} /> */\n  }\r\n      <Flex height={14} width={14} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n        <img height={12} width={12} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n      </Flex>\r\n      <Text variant={isSmall ? \"body4\" : \"body3\"} color=\"$accent1\">\r\n        {showTokenSymbol ? `${formatPercent(lpIncentiveRewardApr)} ${LP_INCENTIVES_REWARD_TOKEN.symbol}` : t(\"pool.rewardAPR.percent\", { pct: formatPercent(lpIncentiveRewardApr) })}\r\n      </Text>\r\n    </Flex>;\n  if (tooltipProps) {\n    return <MouseoverTooltip\n      padding={0}\n      text={<LPIncentiveFeeStatTooltip\n        currency0Info={tooltipProps.currency0Info}\n        currency1Info={tooltipProps.currency1Info}\n        chainId={LP_INCENTIVES_CHAIN_ID}\n        poolApr={tooltipProps.poolApr}\n        lpIncentiveRewardApr={lpIncentiveRewardApr}\n        totalApr={tooltipProps.totalApr}\n      />}\n      size={TooltipSize.Small}\n      placement=\"top\"\n    >\r\n        {content}\r\n      </MouseoverTooltip>;\n  }\n  return content;\n}\n","\"use strict\";\nimport { ABX } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nexport const LP_INCENTIVES_CHAIN_ID = UniverseChainId.Mainnet;\nexport const LP_INCENTIVES_REWARD_TOKEN = ABX[LP_INCENTIVES_CHAIN_ID];\n"],"names":["DocumentList","AnimatedDocumentList","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","defaultFill","useGetPoolsByTokens","input","enabled","useQuery","listPools","transport","uniswapGetTransport","Magic","AnimatedMagic","currency0Info","currency1Info","poolApr","lpIncentiveRewardApr","totalApr","chainId","UniverseChainId","Mainnet","t","useTranslation","formatPercent","useLocalizationContext","displayPoolApr","displayRewardApr","displayTotalApr","Flex","flexDirection","gap","id","paddingTop","paddingBottom","px","TooltipRow","TooltipLabel","icon","SplitLogo","inputCurrencyInfo","outputCurrencyInfo","size","label","Text","variant","color","div","className","img","height","width","src","alt","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","children","row","justifyContent","alignItems","MAX_FEE_TIER_DECIMALS","useAllFeeTierPoolData","protocolVersion","currencies","withDynamicFeeTier","hook","sortedCurrencies","useFormatter","getSortedCurrenciesTupleWithWrap","data","poolData","protocolVersions","token0","getCurrencyAddressForTradingApi","token1","hooks","ZERO_ADDRESS","Boolean","useMemo","liquiditySum","pools","reduce","sum","pool","BigNumber","from","totalLiquidityUsd","split","add","feeTierData","feeTier","fee","totalLiquidityUsdTruncated","Number","percentage","isZero","Percent","toString","poolId","feeAmount","tickSpacing","formattedFee","tvl","created","boostedApr","mergeFeeTiers","Object","values","getDefaultFeeTiersForChainWithDynamicFeeTier","dynamicFeeTierEnabled","hasExistingFeeTiers","length","usePositionDerivedInfo","positionInfo","currency0Amount","currency1Amount","token0UncollectedFees","token1UncollectedFees","liquidity","tickLower","tickUpper","apr","price","price0","useUSDCPrice","currency","PollingInterval","Normal","price1","feeValue0","feeValue1","CurrencyAmount","fromRawAmount","fiatFeeValue0","fiatFeeValue1","quote","fiatValue0","fiatValue1","priceOrdering","version","ProtocolVersion","V3","V4","position","amount0","amount1","priceLower","token0PriceLower","priceUpper","token0PriceUpper","base","getPriceOrderingFromPositionForUI","baseInfo","token0CurrentPrice","token1CurrentPrice","V2","token0Price","token1Price","useGetRangeDisplay","pricesInverted","formatTickPrice","calculateInvertedValues","invert","isTickAtLimit","Bound","LOWER","nearestUsableTick","TickMath","MIN_TICK","UPPER","MAX_TICK","useIsTickAtLimit","minPrice","atLimit","direction","numberType","NumberType","TokenTx","maxPrice","tokenASymbol","symbol","tokenBSymbol","isFullRange","usePositionCurrentPrice","pair","useModalLiquidityInitialState","modalState","useAppSelector","state","application","openModal","initialState","useGetPoolTokenPercentage","totalSupply","liquidityAmount","JSBI","quotient","_cn","LpIncentivesAprDisplay","isSmall","hideBackground","showTokenSymbol","tooltipProps","rest","content","useCurrencyInfo","buildCurrencyId","LP_INCENTIVES_CHAIN_ID","LP_INCENTIVES_REWARD_TOKEN","address","borderRadius","ClickableTamaguiStyle","pct","MouseoverTooltip","padding","text","LPIncentiveFeeStatTooltip","TooltipSize","Small","placement","ABX"],"sourceRoot":""}