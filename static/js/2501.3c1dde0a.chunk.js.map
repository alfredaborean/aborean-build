{"version":3,"file":"static/js/2501.3c1dde0a.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Liquidity/LPIncentiveFeeStatTooltip.tsx?bd3f","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx?a14d","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/index.tsx?277b","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDescription.tsx?c965","webpack://@uniswap/interface/./src/components/NavBar/MobileBottomBar/TDPActionTabs.tsx?3eff","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/TokenDetailsHeader.tsx?2181","webpack://@uniswap/interface/./src/components/Tokens/TokenDetails/tables/TransactionsTable.tsx?a1e8","../packages/ui/src/components/icons/Magic.tsx","components/Liquidity/LPIncentiveFeeStatTooltip.tsx","featureFlags/flags/outageBanner.ts","hooks/useSwapTaxes.ts","components/Icons/Sell.tsx","components/NavBar/MobileBottomBar/TDPActionTabs.tsx","graphql/data/pools/usePoolsFromTokenAddress.ts","components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx","graphql/data/useTokenTransactions.ts","components/Tokens/TokenDetails/tables/TransactionsTable.tsx","components/Tokens/TokenDetails/ActivitySection.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Icons/Globe.tsx","components/Tokens/TokenDetails/TokenDescription.tsx","../node_modules/react-feather/dist/icons/more-horizontal.js","components/Tokens/TokenDetails/TokenDetailsHeader.tsx","components/Tokens/TokenDetails/index.tsx","utils/getInitialLogoURL.ts","pages/TokenDetails/utils.ts","pages/TokenDetails/index.tsx","shared-cloud/metatags.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Magic, AnimatedMagic] = createIcon({\n  name: \"Magic\",\n  getIcon: (props) => <Svg viewBox=\"0 0 18 19\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M9.01511 16.2499C8.85761 16.2499 8.7151 16.1449 8.6701 15.9949L8.1151 14.0599C7.6126 12.2824 6.22509 10.9024 4.44759 10.3999L2.50512 9.84487C2.31762 9.79237 2.2051 9.59737 2.2576 9.40987C2.2876 9.28987 2.38512 9.19987 2.50512 9.16237L4.44759 8.60736C6.22509 8.10486 7.6126 6.72486 8.1151 4.94736L8.6701 3.01237C8.7226 2.82487 8.91762 2.71237 9.11262 2.76487C9.23262 2.80237 9.32258 2.89237 9.36008 3.01237L9.91508 4.94736C10.4176 6.72486 11.8051 8.10486 13.5826 8.60736L15.5251 9.16237C15.7126 9.23737 15.8026 9.45487 15.7276 9.64237C15.6901 9.73237 15.6151 9.80737 15.5251 9.84487L13.5826 10.3999C11.8051 10.9024 10.4176 12.2899 9.91508 14.0599L9.36008 15.9949C9.31508 16.1449 9.17261 16.2499 9.01511 16.2499ZM4.38012 16.1749L4.5526 15.5899C4.7026 15.0574 5.12258 14.6449 5.65508 14.4949L6.2401 14.3299C6.3001 14.3074 6.32262 14.2399 6.30012 14.1874C6.28512 14.1574 6.2701 14.1424 6.2401 14.1274L5.65508 13.9624C5.12258 13.8124 4.7026 13.3999 4.5526 12.8674L4.38012 12.2824C4.36512 12.2224 4.30508 12.1924 4.24508 12.2074C4.20758 12.2149 4.1851 12.2449 4.1701 12.2824L4.00512 12.8674C3.85512 13.3999 3.43509 13.8124 2.90259 13.9624L2.31762 14.1274C2.25762 14.1424 2.22759 14.2024 2.24259 14.2624C2.25009 14.2999 2.28012 14.3224 2.31762 14.3374L2.90259 14.5024C3.43509 14.6524 3.85512 15.0649 4.00512 15.5974L4.1701 16.1824C4.1851 16.2424 4.24509 16.2724 4.30509 16.2574C4.34259 16.2499 4.36512 16.2199 4.38012 16.1824V16.1749ZM14.4751 5.39737L14.5876 5.00736C14.6851 4.65486 14.9626 4.37736 15.3226 4.27986L15.7126 4.16737C15.7501 4.15237 15.7651 4.10736 15.7501 4.06986C15.7426 4.05486 15.7276 4.03987 15.7126 4.03237L15.3226 3.91986C14.9701 3.82236 14.6926 3.54486 14.5876 3.19236L14.4751 2.80237C14.4676 2.76487 14.4226 2.74236 14.3851 2.75736C14.3626 2.75736 14.3476 2.77987 14.3401 2.80237L14.2276 3.19236C14.1301 3.54486 13.8526 3.82236 13.4926 3.91986L13.1026 4.03237C13.0651 4.03987 13.0426 4.08487 13.0576 4.12237C13.0576 4.14487 13.0801 4.15987 13.1026 4.16737L13.4926 4.27986C13.8451 4.37736 14.1226 4.65486 14.2276 5.00736L14.3401 5.39737C14.3476 5.43487 14.3926 5.45736 14.4301 5.44236C14.4526 5.44236 14.4676 5.41987 14.4751 5.39737Z\"\n    fill=\"oklch(0.92 0.004 286.32)\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { Magic } from \"ui/src/components/icons/Magic\";\nimport { SplitLogo } from \"uniswap/src/components/CurrencyLogo/SplitLogo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nfunction LPIncentiveFeeStatTooltip({\n  currency0Info,\n  currency1Info,\n  poolApr,\n  lpIncentiveRewardApr,\n  totalApr,\n  chainId = UniverseChainId.Mainnet\n}) {\n  const { t } = useTranslation();\n  const { formatPercent } = useLocalizationContext();\n  const displayPoolApr = poolApr ? formatPercent(poolApr) : \"-\";\n  const displayRewardApr = lpIncentiveRewardApr ? formatPercent(lpIncentiveRewardApr) : \"-\";\n  const displayTotalApr = totalApr ? formatPercent(totalApr) : \"-\";\n  return <Flex\n    flexDirection=\"column\"\n    gap=\"$spacing4\"\n    id=\"boosted-apr-tooltip\"\n    paddingTop=\"$spacing8\"\n    paddingBottom={5}\n    px=\"$spacing4\"\n  >\r\n      <TooltipRow>\r\n        <TooltipLabel\n    icon={<SplitLogo\n      inputCurrencyInfo={currency0Info}\n      outputCurrencyInfo={currency1Info}\n      size={16}\n      chainId={chainId}\n    />}\n    label={t(\"pool.aprText\")}\n  />\r\n        <Text variant=\"body4\" color=\"$neutral1\">\r\n          {displayPoolApr}\r\n        </Text>\r\n      </TooltipRow>\r\n      <TooltipRow>\r\n        {\n    /* <TooltipLabel\n      icon={<CurrencyLogo currency={LP_INCENTIVES_REWARD_TOKEN} size={16} />}\n      label={t('pool.rewardAPR')}\n    /> */\n  }\r\n\r\n        <TooltipLabel\n    icon={<Flex height={14} width={14} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n        <img height={12} width={12} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n      </Flex>}\n    label={t(\"pool.rewardAPR\")}\n  />\r\n        <Text variant=\"body4\" color=\"$neutral1\">\r\n          {displayRewardApr}\r\n        </Text>\r\n      </TooltipRow>\r\n      <TooltipRow backgroundColor=\"$accent2\" borderBottomLeftRadius=\"$rounded6\" borderBottomRightRadius=\"$rounded6\">\r\n        <TooltipLabel icon={<Magic size=\"$icon.16\" color=\"$accent1\" />} label={t(\"pool.totalAPR\")} color=\"$accent1\" />\r\n        <Text variant=\"body4\" color=\"$accent1\">\r\n          {displayTotalApr}\r\n        </Text>\r\n      </TooltipRow>\r\n    </Flex>;\n}\nexport default LPIncentiveFeeStatTooltip;\nconst TooltipRow = ({\n  children,\n  backgroundColor,\n  borderBottomLeftRadius,\n  borderBottomRightRadius\n}) => <Flex\n  row\n  justifyContent=\"space-between\"\n  alignItems=\"center\"\n  px=\"$spacing8\"\n  height=\"$spacing24\"\n  gap=\"$spacing4\"\n  backgroundColor={backgroundColor}\n  borderBottomLeftRadius={borderBottomLeftRadius}\n  borderBottomRightRadius={borderBottomRightRadius}\n>\r\n    {children}\r\n  </Flex>;\nconst TooltipLabel = ({ icon, label, color = \"$neutral2\" }) => <Flex row alignItems=\"center\" gap=\"$spacing6\">\r\n    {icon}\r\n    <Text variant=\"body4\" color={color}>\r\n      {label}\r\n    </Text>\r\n  </Flex>;\n","\"use strict\";\nimport { atomWithReset, useResetAtom, useUpdateAtom } from \"jotai/utils\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport const manualChainOutageAtom = atomWithReset(void 0);\nexport function useUpdateManualOutage({\n  chainId,\n  errorV3,\n  errorV2\n}) {\n  const setManualOutage = useUpdateAtom(manualChainOutageAtom);\n  const resetManualOutage = useResetAtom(manualChainOutageAtom);\n  resetManualOutage();\n  if (errorV3 && chainId) {\n    setManualOutage({ chainId });\n  }\n  if (errorV2 && chainId) {\n    setManualOutage({ chainId, version: ProtocolVersion.V2 });\n  }\n}\n","\"use strict\";\nimport { InterfaceEventName } from \"@uniswap/analytics-events\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { WETH_ADDRESS as getWethAddress } from \"@uniswap/universal-router-sdk\";\nimport { BIPS_BASE, ZERO_PERCENT } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useContract } from \"hooks/useContract\";\nimport { useEffect, useState } from \"react\";\nimport FOT_DETECTOR_ABI from \"uniswap/src/abis/fee-on-transfer-detector.json\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { logger } from \"utilities/src/logger/logger\";\nfunction getFeeOnTransferAddress(chainId) {\n  switch (chainId) {\n    case UniverseChainId.Mainnet:\n      return \"0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f\";\n    case UniverseChainId.Optimism:\n      return \"0xa7c17505B43955A474fb6AFE61E093907a7567c9\";\n    case UniverseChainId.Bnb:\n      return \"0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB\";\n    case UniverseChainId.Polygon:\n      return \"0x92bCCCb6c8c199AAcA38408621E38Ab6dBfA00B5\";\n    case UniverseChainId.Base:\n      return \"0x331f6D0AAB4A1F039f0d75A613a7F1593DbDE1BB\";\n    case UniverseChainId.ArbitrumOne:\n      return \"0x64CF365CC5CCf5E64380bc05Acd5df7D0618c118\";\n    case UniverseChainId.Celo:\n      return \"0x3dfF0145E68a5880EAbE8F56b6Bc30C4AdCF3413\";\n    case UniverseChainId.Avalanche:\n      return \"0xBF2B9F6A6eCc4541b31ab2dCF8156D33644Ca3F3\";\n    default:\n      return void 0;\n  }\n}\nfunction useFeeOnTransferDetectorContract(chainId) {\n  const account = useAccount();\n  const contract = useContract(getFeeOnTransferAddress(chainId), FOT_DETECTOR_ABI, true, chainId);\n  useEffect(() => {\n    if (contract && account.address) {\n      sendAnalyticsEvent(InterfaceEventName.WALLET_PROVIDER_USED, {\n        source: \"useFeeOnTransferDetectorContract\",\n        contract: {\n          name: \"FeeOnTransferDetector\",\n          address: getFeeOnTransferAddress(chainId)\n        }\n      });\n    }\n  }, [account.address, chainId, contract]);\n  return contract;\n}\nconst AMOUNT_TO_BORROW = 1e4;\nconst FEE_CACHE = {};\nasync function getSwapTaxes(fotDetector, inputTokenAddress, outputTokenAddress, chainId) {\n  const addresses = [];\n  if (inputTokenAddress && FEE_CACHE[inputTokenAddress] === void 0) {\n    addresses.push(inputTokenAddress);\n  }\n  if (outputTokenAddress && FEE_CACHE[outputTokenAddress] === void 0) {\n    addresses.push(outputTokenAddress);\n  }\n  try {\n    if (addresses.length) {\n      const data = await fotDetector.callStatic.batchValidate(addresses, getWethAddress(chainId), AMOUNT_TO_BORROW);\n      addresses.forEach((address, index) => {\n        const { sellFeeBps, buyFeeBps } = data[index];\n        const sellTax = new Percent(sellFeeBps.toNumber(), BIPS_BASE);\n        const buyTax = new Percent(buyFeeBps.toNumber(), BIPS_BASE);\n        FEE_CACHE[address] = { sellTax, buyTax };\n      });\n    }\n  } catch (e) {\n    logger.warn(\"useSwapTaxes\", \"getSwapTaxes\", \"Failed to get swap taxes for token(s):\", addresses, e);\n  }\n  const inputTax = (inputTokenAddress ? FEE_CACHE[inputTokenAddress]?.sellTax : ZERO_PERCENT) ?? ZERO_PERCENT;\n  const outputTax = (outputTokenAddress ? FEE_CACHE[outputTokenAddress]?.buyTax : ZERO_PERCENT) ?? ZERO_PERCENT;\n  return { inputTax, outputTax };\n}\nexport function useSwapTaxes(inputTokenAddress, outputTokenAddress, tokenChainId) {\n  const account = useAccount();\n  const chainId = tokenChainId ?? account.chainId;\n  const fotDetector = useFeeOnTransferDetectorContract(chainId);\n  const [{ inputTax, outputTax }, setTaxes] = useState({ inputTax: ZERO_PERCENT, outputTax: ZERO_PERCENT });\n  useEffect(() => {\n    if (!fotDetector || !chainId) {\n      return;\n    }\n    getSwapTaxes(fotDetector, inputTokenAddress, outputTokenAddress, chainId).then(setTaxes);\n  }, [fotDetector, inputTokenAddress, outputTokenAddress, chainId]);\n  return { inputTax, outputTax };\n}\n","\"use strict\";\nexport function Sell(props) {\n  return <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <path\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    d=\"M1.28516 11.9999C1.28516 6.08243 6.08194 1.28564 11.9994 1.28564C17.9169 1.28564 22.7137 6.08243 22.7137 11.9999C22.7137 17.9174 17.9169 22.7142 11.9994 22.7142C6.08194 22.7142 1.28516 17.9174 1.28516 11.9999ZM10.9816 7.49994C10.9816 6.9378 11.4373 6.48209 11.9995 6.48209C12.5616 6.48209 13.0173 6.9378 13.0173 7.49994V14.0426L15.7798 11.2802C16.1772 10.8827 16.8217 10.8827 17.2192 11.2802C17.6167 11.6777 17.6167 12.3222 17.2192 12.7197L12.7192 17.2197C12.3217 17.6172 11.6772 17.6172 11.2798 17.2197L6.77975 12.7197C6.38225 12.3222 6.38225 11.6777 6.77975 11.2802C7.17725 10.8827 7.82172 10.8827 8.21922 11.2802L10.9816 14.0426V7.49994Z\"\n    fill={props.fill || \"white\"}\n  />\r\n    </svg>;\n}\n","\"use strict\";\nimport { CreditCardIcon } from \"components/Icons/CreditCard\";\nimport { Sell } from \"components/Icons/Sell\";\nimport { Send } from \"components/Icons/Send\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Flex, useMedia } from \"ui/src\";\nexport function TDPActionTabs() {\n  const { t } = useTranslation();\n  const { currencyChain, currencyChainId, address, tokenColor } = useTDPContext();\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const chainUrlParam = currencyChain.toLowerCase();\n  const addressUrlParam = address === NATIVE_CHAIN_ID ? \"ETH\" : address;\n  const media = useMedia();\n  const showIcons = !media.xs;\n  const toActionLink = useCallback(\n    async (href) => {\n      if (account.chainId && account.chainId !== currencyChainId) {\n        await switchChain(currencyChainId);\n      }\n      navigate(href);\n    },\n    [account, currencyChainId, switchChain, navigate]\n  );\n  const tabs = [\n    {\n      label: t(\"common.buy.label\"),\n      href: `/swap/?chain=${chainUrlParam}&outputCurrency=${addressUrlParam}`,\n      icon: <CreditCardIcon fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.sell.label\"),\n      href: `/swap?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Sell fill=\"currentColor\" />\n    },\n    {\n      label: t(\"common.send.button\"),\n      href: `/send?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Send fill=\"currentColor\" />\n    }\n  ];\n  return <Flex row justifyContent=\"center\" gap=\"$spacing8\" width=\"100%\">\r\n      {tabs.map((tab) => <Button\n    key={tab.label}\n    onPress={() => toActionLink(tab.href)}\n    backgroundColor={tokenColor}\n    icon={showIcons ? tab.icon : void 0}\n    size=\"medium\"\n  >\r\n          {tab.label}\r\n        </Button>)}\r\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  V2_BIPS,\n  calculate1DVolOverTvl,\n  calculateApr,\n  sortPools\n} from \"graphql/data/pools/useTopPools\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  useTopV2PairsQuery,\n  useTopV3PoolsQuery,\n  useTopV4PoolsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nconst DEFAULT_QUERY_SIZE = 20;\nexport function usePoolsFromTokenAddress(tokenAddress, sortState, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const chain = toGraphQLChain(chainId ?? defaultChainId);\n  const {\n    loading: loadingV4,\n    error: errorV4,\n    data: dataV4,\n    fetchMore: fetchMoreV4\n  } = useTopV4PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    }\n  });\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useTopV3PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    }\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useTopV2PairsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain\n    },\n    skip: !chainId\n  });\n  const loading = loadingV4 || loadingV3 || loadingV2;\n  const loadingMoreV4 = useRef(false);\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const sizeRef = useRef(DEFAULT_QUERY_SIZE);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV4.current || loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV4.current = true;\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      sizeRef.current += DEFAULT_QUERY_SIZE;\n      fetchMoreV4({\n        variables: {\n          cursor: dataV4?.topV4Pools?.[dataV4.topV4Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV4.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV4Pools: [...(prev.topV4Pools ?? []).slice(), ...(fetchMoreResult.topV4Pools ?? []).slice()]\n          };\n          loadingMoreV4.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.topV3Pools?.[dataV3.topV3Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV3.current = false;\n            return prev;\n          }\n          if (!loadingMoreV2.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV3Pools: [...(prev.topV3Pools ?? []).slice(), ...(fetchMoreResult.topV3Pools ?? []).slice()]\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.topV2Pairs?.[dataV2.topV2Pairs.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            loadingMoreV2.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV2Pairs: [...(prev.topV2Pairs ?? []).slice(), ...(fetchMoreResult.topV2Pairs ?? []).slice()]\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [dataV2?.topV2Pairs, dataV3?.topV3Pools, dataV4?.topV4Pools, fetchMoreV2, fetchMoreV3, fetchMoreV4]\n  );\n  return useMemo(() => {\n    const topV4Pools = dataV4?.topV4Pools?.map((pool) => {\n      return {\n        hash: pool.poolId,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion,\n        hookAddress: pool.hook?.address\n      };\n    }) ?? [];\n    const topV3Pools = dataV3?.topV3Pools?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const topV2Pairs = dataV2?.topV2Pairs?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volume30d: pool.volume30d?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, V2_BIPS),\n        feeTier: V2_BIPS,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const pools = sortPools([...topV4Pools, ...topV3Pools, ...topV2Pairs], sortState).slice(0, sizeRef.current);\n    return { loading, errorV2, errorV3, errorV4, pools, loadMore };\n  }, [\n    dataV2?.topV2Pairs,\n    dataV3?.topV3Pools,\n    dataV4?.topV4Pools,\n    errorV2,\n    errorV3,\n    errorV4,\n    loadMore,\n    loading,\n    sortState\n  ]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { PoolsTable, sortAscendingAtom, sortMethodAtom } from \"components/Pools/PoolTable/PoolTable\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { usePoolsFromTokenAddress } from \"graphql/data/pools/usePoolsFromTokenAddress\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAtomValue, useResetAtom } from \"jotai/utils\";\nimport { useEffect, useMemo } from \"react\";\nimport { Flex } from \"ui/src\";\nconst HIDDEN_COLUMNS = [PoolSortFields.VolOverTvl, PoolSortFields.RewardApr];\nexport function TokenDetailsPoolsTable({\n  chainId,\n  referenceToken\n}) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const sortState = useMemo(\n    () => ({ sortBy: sortMethod, sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc }),\n    [sortAscending, sortMethod]\n  );\n  const { pools, loading, errorV2, errorV3, loadMore } = usePoolsFromTokenAddress(\n    referenceToken.address,\n    sortState,\n    chainId\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Pools for token ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !pools.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  return <Flex data-testid={`tdp-pools-table-${referenceToken.address.toLowerCase()}`}>\r\n      <PoolsTable\n    pools={pools}\n    loading={allDataStillLoading}\n    error={combinedError}\n    maxHeight={600}\n    hiddenColumns={HIDDEN_COLUMNS}\n    loadMore={loadMore}\n    forcePinning\n  />\r\n    </Flex>;\n}\n","\"use strict\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  Chain,\n  PoolTransactionType,\n  useV2TokenTransactionsQuery,\n  useV3TokenTransactionsQuery,\n  useV4TokenTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nexport var TokenTransactionType = /* @__PURE__ */ ((TokenTransactionType2) => {\n  TokenTransactionType2[\"BUY\"] = \"Buy\";\n  TokenTransactionType2[\"SELL\"] = \"Sell\";\n  return TokenTransactionType2;\n})(TokenTransactionType || {});\nconst TokenTransactionDefaultQuerySize = 25;\nexport function useTokenTransactions(address, chainId, filter = [\"Buy\" /* BUY */, \"Sell\" /* SELL */]) {\n  const { defaultChainId } = useEnabledChains();\n  const {\n    data: dataV4,\n    loading: loadingV4,\n    fetchMore: fetchMoreV4,\n    error: errorV4\n  } = useV4TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: toGraphQLChain(chainId ?? defaultChainId),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV3,\n    loading: loadingV3,\n    fetchMore: fetchMoreV3,\n    error: errorV3\n  } = useV3TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: toGraphQLChain(chainId ?? defaultChainId),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV2,\n    loading: loadingV2,\n    error: errorV2,\n    fetchMore: fetchMoreV2\n  } = useV2TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      first: TokenTransactionDefaultQuerySize,\n      chain: toGraphQLChain(chainId)\n    }\n  });\n  const loadingMoreV4 = useRef(false);\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const querySizeRef = useRef(TokenTransactionDefaultQuerySize);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV4.current || loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV4.current = true;\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      querySizeRef.current += TokenTransactionDefaultQuerySize;\n      fetchMoreV4({\n        variables: {\n          cursor: dataV4?.token?.v4Transactions?.[dataV4.token?.v4Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV4.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v4Transactions: [...prev.token?.v4Transactions ?? [], ...fetchMoreResult.token?.v4Transactions ?? []]\n            }\n          };\n          loadingMoreV4.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.token?.v3Transactions?.[dataV3.token?.v3Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV3.current = false;\n            return prev;\n          }\n          if (!loadingMoreV2.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v3Transactions: [...prev.token?.v3Transactions ?? [], ...fetchMoreResult.token?.v3Transactions ?? []]\n            }\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.token?.v2Transactions?.[dataV2.token?.v2Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            loadingMoreV2.current = false;\n            return prev;\n          }\n          if (!loadingMoreV3.current && !loadingMoreV4.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v2Transactions: [...prev.token?.v2Transactions ?? [], ...fetchMoreResult.token?.v2Transactions ?? []]\n            }\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [\n      dataV2?.token?.v2Transactions,\n      dataV3?.token?.v3Transactions,\n      dataV4?.token?.v4Transactions,\n      fetchMoreV2,\n      fetchMoreV3,\n      fetchMoreV4\n    ]\n  );\n  const filterTransaction = useCallback(\n    (tx) => {\n      if (!tx) {\n        return false;\n      }\n      const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n      return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n    },\n    [address, filter]\n  );\n  const transactions = useMemo(\n    () => [\n      ...dataV4?.token?.v4Transactions ?? [],\n      ...dataV3?.token?.v3Transactions ?? [],\n      ...dataV2?.token?.v2Transactions ?? []\n    ].filter(filterTransaction).sort(\n      (a, b) => a?.timestamp && b?.timestamp ? b.timestamp - a.timestamp : a?.timestamp === null ? -1 : 1\n    ).slice(0, querySizeRef.current),\n    [dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, dataV4?.token?.v4Transactions, filterTransaction]\n  );\n  return useMemo(\n    () => ({\n      transactions,\n      loading: loadingV4 || loadingV3 || loadingV2,\n      loadMore,\n      errorV2,\n      errorV3,\n      errorV4\n    }),\n    [transactions, loadingV4, loadingV3, loadingV2, loadMore, errorV2, errorV3, errorV4]\n  );\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport {\n  EllipsisText,\n  FilterHeaderRow,\n  HeaderCell,\n  HeaderSortText,\n  StyledExternalLink,\n  TableText,\n  TimestampCell,\n  TokenLinkCell\n} from \"components/Table/styled\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { TokenTransactionType, useTokenTransactions } from \"graphql/data/useTokenTransactions\";\nimport { unwrapToken } from \"graphql/data/util\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, Text, styled, useMedia } from \"ui/src\";\nimport { useAppFiatCurrency } from \"uniswap/src/features/fiatCurrency/hooks\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TableWrapper = styled(Flex, {\n  position: \"relative\",\n  minHeight: 158\n});\nexport function TransactionsTable({ chainId, referenceToken }) {\n  const activeLocalCurrency = useAppFiatCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([TokenTransactionType.BUY, TokenTransactionType.SELL]);\n  const { transactions, loading, loadMore, errorV2, errorV3 } = useTokenTransactions(\n    referenceToken.address,\n    chainId,\n    filter\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Transactions for token: ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !transactions.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const unwrappedReferenceToken = unwrapToken(chainId, referenceToken);\n  const data = useMemo(\n    () => transactions.map((transaction) => {\n      const swapLeg0 = {\n        address: transaction.token0.address,\n        symbol: transaction.token0.symbol,\n        amount: parseFloat(transaction.token0Quantity),\n        token: transaction.token0\n      };\n      const swapLeg1 = {\n        address: transaction.token1.address,\n        symbol: transaction.token1.symbol,\n        amount: parseFloat(transaction.token1Quantity),\n        token: transaction.token1\n      };\n      const token0IsBeingSold = parseFloat(transaction.token0Quantity) > 0;\n      return {\n        hash: transaction.hash,\n        timestamp: transaction.timestamp,\n        input: token0IsBeingSold ? swapLeg0 : swapLeg1,\n        output: token0IsBeingSold ? swapLeg1 : swapLeg0,\n        usdValue: transaction.usdValue.value,\n        makerAddress: transaction.account\n      };\n    }),\n    [transactions]\n  );\n  const media = useMedia();\n  const showLoadingSkeleton = allDataStillLoading || !!combinedError;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        maxSize: 80,\n        header: () => <HeaderCell justifyContent=\"flex-start\" grow>\r\n            <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n              <Text variant=\"body3\" color=\"$neutral2\">\r\n                <Trans i18nKey=\"common.time\" />\r\n              </Text>\r\n            </Flex>\r\n          </HeaderCell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\" grow>\r\n            <TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().hash, ExplorerDataType.TRANSACTION)}\n        />\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.output.address, {\n        id: \"swap-type\",\n        maxSize: 80,\n        header: () => <HeaderCell justifyContent=\"flex-start\" grow>\r\n            <FilterHeaderRow\n          clickable={filterModalIsOpen}\n          onPress={filterModalIsOpen ? void 0 : toggleFilterModal}\n          alignItems=\"center\"\n          ref={filterAnchorRef}\n        >\r\n              <Filter\n          allFilters={Object.values(TokenTransactionType)}\n          activeFilter={filter}\n          setFilters={setFilters}\n          isOpen={filterModalIsOpen}\n          toggleFilterModal={toggleFilterModal}\n          anchorRef={filterAnchorRef}\n        />\r\n              <Text variant=\"body3\" color=\"$neutral2\">\r\n                <Trans i18nKey=\"common.type.label\" />\r\n              </Text>\r\n            </FilterHeaderRow>\r\n          </HeaderCell>,\n        cell: (outputTokenAddress) => {\n          const isBuy = String(outputTokenAddress.getValue?.()).toLowerCase() === referenceToken.address.toLowerCase();\n          return <Cell loading={showLoadingSkeleton} justifyContent=\"flex-start\" grow>\r\n              <TableText color={isBuy ? \"$statusSuccess\" : \"$statusCritical\"}>\r\n                {isBuy ? <Trans i18nKey=\"common.buy.label\" /> : <Trans i18nKey=\"common.sell.label\" />}\r\n              </TableText>\r\n            </Cell>;\n        }\n      }),\n      columnHelper.accessor(\n        (row) => row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.input.amount : row.output.amount,\n        {\n          id: \"reference-amount\",\n          maxSize: 80,\n          header: () => <HeaderCell justifyContent=\"flex-end\">\r\n              <Text variant=\"body3\" color=\"$neutral2\">\r\n                ${unwrappedReferenceToken.symbol}\r\n              </Text>\r\n            </HeaderCell>,\n          cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\">\r\n              <TableText>\r\n                {formatNumber({\n            input: Math.abs(inputTokenAmount.getValue?.()) || 0\n          })}\r\n              </TableText>\r\n            </Cell>\n        }\n      ),\n      columnHelper.accessor(\n        (row) => {\n          const nonReferenceSwapLeg = row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.output : row.input;\n          return <Flex row gap=\"$gap8\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n              <EllipsisText maxWidth={75}>\r\n                {formatNumber({\n            input: Math.abs(nonReferenceSwapLeg.amount) || 0,\n            type: NumberType.TokenQuantityStats\n          })}\r\n              </EllipsisText>\r\n              <TokenLinkCell token={nonReferenceSwapLeg.token} />\r\n            </Flex>;\n        },\n        {\n          id: \"non-reference-amount\",\n          maxSize: 160,\n          header: () => <HeaderCell justifyContent=\"flex-end\">\r\n              <Text variant=\"body3\" color=\"$neutral2\">\r\n                <Trans i18nKey=\"common.for\" />\r\n              </Text>\r\n            </HeaderCell>,\n          cell: (swapOutput) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\">\r\n              <TableText>{swapOutput.getValue?.()}</TableText>\r\n            </Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.usdValue, {\n        id: \"fiat-value\",\n        maxSize: 100,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <Flex row gap=\"$gap4\" justifyContent=\"flex-end\">\r\n              <HeaderSortText>{activeLocalCurrency}</HeaderSortText>\r\n            </Flex>\r\n          </HeaderCell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\">\r\n            <TableText>{formatFiatPrice({ price: fiat.getValue?.() })}</TableText>\r\n          </Cell>\n      }),\n      columnHelper.accessor((row) => row.makerAddress, {\n        id: \"maker-address\",\n        maxSize: 130,\n        header: () => <HeaderCell justifyContent=\"flex-end\">\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              <Trans i18nKey=\"common.wallet.label\" />\r\n            </Text>\r\n          </HeaderCell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} justifyContent=\"flex-end\">\r\n            <StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>\r\n              <TableText>{shortenAddress(makerAddress.getValue?.())}</TableText>\r\n            </StyledExternalLink>\r\n          </Cell>\n      })\n    ];\n  }, [\n    showLoadingSkeleton,\n    chainId,\n    filterModalIsOpen,\n    filter,\n    referenceToken.address,\n    unwrappedReferenceToken.symbol,\n    formatNumber,\n    activeLocalCurrency,\n    formatFiatPrice\n  ]);\n  return <TableWrapper>\r\n      <Table\n    columns={columns}\n    data={data}\n    loading={allDataStillLoading}\n    error={combinedError}\n    loadMore={loadMore}\n    maxHeight={600}\n    defaultPinnedColumns={[\"timestamp\", \"swap-type\"]}\n    forcePinning={media.xxl}\n  />\r\n    </TableWrapper>;\n}\n","\"use strict\";\nimport { TokenDetailsPoolsTable } from \"components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable\";\nimport { TransactionsTable } from \"components/Tokens/TokenDetails/tables/TransactionsTable\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, styled, Text } from \"ui/src\";\nconst Container = styled(Flex, {\n  width: \"100%\"\n});\nconst Tab = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"heading3\",\n  ...ClickableTamaguiStyle\n});\nvar ActivityTab = /* @__PURE__ */ ((ActivityTab2) => {\n  ActivityTab2[ActivityTab2[\"Txs\"] = 0] = \"Txs\";\n  ActivityTab2[ActivityTab2[\"Pools\"] = 1] = \"Pools\";\n  return ActivityTab2;\n})(ActivityTab || {});\nexport function ActivitySection() {\n  const { wrapped: referenceToken, chainId } = useTDPContext().currency;\n  const [activityInView, setActivityInView] = useState(0 /* Txs */);\n  if (!referenceToken) {\n    return null;\n  }\n  return <Container data-testid=\"token-details-activity-section\">\r\n      <Flex row gap=\"$spacing24\" mb=\"$spacing24\" id=\"activity-header\">\r\n        <Tab\n    color={activityInView === 0 /* Txs */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(0 /* Txs */)}\n  >\r\n          <Trans i18nKey=\"common.transactions\" />\r\n        </Tab>\r\n        <Tab\n    color={activityInView === 1 /* Pools */ ? \"$neutral1\" : \"$neutral2\"}\n    onPress={() => setActivityInView(1 /* Pools */)}\n  >\r\n          <Trans i18nKey=\"common.pools\" />\r\n        </Tab>\r\n      </Flex>\r\n      {activityInView === 0 /* Txs */ && <TransactionsTable chainId={chainId} referenceToken={referenceToken} />}\r\n      {activityInView === 1 /* Pools */ && <TokenDetailsPoolsTable chainId={chainId} referenceToken={referenceToken} />}\r\n    </Container>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { getTokenDetailsURL, gqlToCurrency, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { breakpoints } from \"ui/src/theme\";\nimport { Chain } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst BalancesCard = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: fit-content;\n  width: 100%;\n\n  @media screen and (min-width: ${breakpoints.lg}px) {\n    display: flex;\n  }\n`;\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`;\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`;\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BalanceAmountsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-left: 12px;\n  ${({ $alignLeft }) => $alignLeft && `\n    justify-content: start;\n    gap: 8px;\n  `}\n`;\nconst Balance = ({\n  currency,\n  chainId = UniverseChainId.Mainnet,\n  gqlBalance,\n  alignLeft = false,\n  onClick\n}) => {\n  const { formatNumber } = useFormatter();\n  const currencies = useMemo(() => [currency], [currency]);\n  const formattedGqlBalance = formatNumber({\n    input: gqlBalance?.quantity,\n    type: NumberType.TokenNonTx\n  });\n  const formattedUsdGqlValue = formatNumber({\n    input: gqlBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance\n  });\n  return <BalanceRow onClick={onClick}>\r\n      <PortfolioLogo\n    currencies={currencies}\n    chainId={chainId}\n    images={[gqlBalance?.token?.project?.logoUrl]}\n    size={32}\n  />\r\n      <BalanceAmountsContainer $alignLeft={alignLeft}>\r\n        <BalanceItem>\r\n          <ThemedText.BodyPrimary>{formattedUsdGqlValue}</ThemedText.BodyPrimary>\r\n        </BalanceItem>\r\n        <BalanceItem>\r\n          <ThemedText.BodySecondary>{formattedGqlBalance}</ThemedText.BodySecondary>\r\n        </BalanceItem>\r\n      </BalanceAmountsContainer>\r\n    </BalanceRow>;\n};\nexport const PageChainBalanceSummary = ({\n  pageChainBalance,\n  alignLeft = false\n}) => {\n  if (!pageChainBalance || !pageChainBalance.token) {\n    return null;\n  }\n  const currency = gqlToCurrency(pageChainBalance.token);\n  return <BalanceSection>\r\n      <ThemedText.HeadlineSmall color=\"neutral1\">\r\n        <Trans i18nKey=\"tdp.balanceSummary.title\" />\r\n      </ThemedText.HeadlineSmall>\r\n      <Balance currency={currency} chainId={currency?.chainId} gqlBalance={pageChainBalance} alignLeft={alignLeft} />\r\n    </BalanceSection>;\n};\nconst OtherChainsBalanceSummary = ({\n  otherChainBalances,\n  hasPageChainBalance\n}) => {\n  const navigate = useNavigate();\n  const { defaultChainId } = useEnabledChains();\n  if (!otherChainBalances.length) {\n    return null;\n  }\n  return <BalanceSection>\r\n      {hasPageChainBalance ? <ThemedText.SubHeaderSmall>\r\n          <Trans i18nKey=\"tdp.balanceSummary.otherNetworks\">On other networks</Trans>\r\n        </ThemedText.SubHeaderSmall> : <ThemedText.HeadlineSmall>\r\n          <Trans i18nKey=\"tdp.balanceSummary.otherNetworksBalance\">Balance on other networks</Trans>\r\n        </ThemedText.HeadlineSmall>}\r\n      {otherChainBalances.map((balance) => {\n    const currency = balance.token && gqlToCurrency(balance.token);\n    const chainId = (balance.token && supportedChainIdFromGQLChain(balance.token.chain)) ?? defaultChainId;\n    return <Balance\n      key={balance.id}\n      currency={currency}\n      chainId={chainId}\n      gqlBalance={balance}\n      onClick={() => navigate(\n        getTokenDetailsURL({\n          address: balance.token?.address,\n          chain: balance.token?.chain ?? Chain.Ethereum\n        })\n      )}\n    />;\n  })}\r\n    </BalanceSection>;\n};\nexport default function BalanceSummary() {\n  const account = useAccount();\n  const { currencyChain, multiChainMap } = useTDPContext();\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const otherChainBalances = [];\n  for (const [key, value] of Object.entries(multiChainMap)) {\n    if (key !== currencyChain && value?.balance !== void 0) {\n      otherChainBalances.push(value.balance);\n    }\n  }\n  const hasBalances = pageChainBalance || Boolean(otherChainBalances.length);\n  if (!account.isConnected || !hasBalances) {\n    return null;\n  }\n  return <BalancesCard>\r\n      <PageChainBalanceSummary pageChainBalance={pageChainBalance} />\r\n      <OtherChainsBalanceSummary otherChainBalances={otherChainBalances} hasPageChainBalance={!!pageChainBalance} />\r\n    </BalancesCard>;\n}\n","\"use strict\";\nexport const Globe = (props) => <svg\n  width=\"18\"\n  height=\"18\"\n  viewBox=\"0 0 18 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  stroke=\"transparent\"\n  {...props}\n>\r\n    <path\n  d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n  fill={props.fill ?? \"#607BEE\"}\n/>\r\n  </svg>;\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport { NoInfoAvailable, truncateDescription } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { FOTTooltipContent } from \"components/swap/SwapLineItem\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useSwapTaxes } from \"hooks/useSwapTaxes\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useReducer } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ThemedText } from \"theme/components\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { ClickableTamaguiStyle, EllipsisTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Paragraph, Text, styled } from \"ui/src\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst TokenInfoSection = styled(Flex, {\n  gap: \"$gap16\",\n  width: \"100%\",\n  $xl: {\n    gap: 24\n  }\n});\nconst TokenNameRow = styled(Flex, {\n  row: true,\n  gap: \"$gap8\",\n  width: \"100%\"\n});\nconst TokenButtonRow = styled(TokenNameRow, {\n  flexWrap: \"wrap\"\n});\nconst TokenInfoButton = styled(Text, {\n  variant: \"buttonLabel3\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  gap: \"$gap4\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  borderRadius: \"$rounded20\",\n  backgroundColor: \"$surface2\",\n  width: \"max-content\",\n  ...ClickableTamaguiStyle,\n  color: \"$neutral1\"\n});\nconst TokenDescriptionContainer = styled(Text, {\n  variant: \"body1\",\n  color: \"$neutral1\",\n  maxWidth: \"100%\",\n  maxHeight: \"fit-content\",\n  ...EllipsisTamaguiStyle,\n  whiteSpace: \"pre-wrap\",\n  lineHeight: 24\n});\nconst DescriptionVisibilityWrapper = styled(Paragraph, {\n  fontWeight: \"$book\",\n  variants: {\n    visible: {\n      true: {\n        display: \"inline\"\n      },\n      false: {\n        display: \"none\"\n      }\n    }\n  }\n});\nconst TRUNCATE_CHARACTER_COUNT = 200;\nexport function TokenDescription() {\n  const { t } = useTranslation();\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { neutral1 } = useTheme();\n  const { description, homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true);\n  const truncatedDescription = truncateDescription(description ?? \"\", TRUNCATE_CHARACTER_COUNT);\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT;\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated;\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(address, address, currency.chainId);\n  const { formatPercent } = useFormatter();\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee)\n  };\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)));\n  const sameFee = sellFeeString === buyFeeString;\n  return <TokenInfoSection data-testid=\"token-details-info-section\">\r\n      <Text variant=\"heading3\">\r\n        <Trans i18nKey=\"common.info.label\" />\r\n      </Text>\r\n      <TokenButtonRow data-testid=\"token-details-info-links\">\r\n        {!currency.isNative && <MouseoverTooltip\n    disabled\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    forceShow={isCopied}\n    text={t(\"common.copied\")}\n  >\r\n            <TokenInfoButton onPress={copy}>\r\n              <Copy width=\"18px\" height=\"18px\" color={neutral1} />\r\n              {shortenAddress(currency.address)}\r\n            </TokenInfoButton>\r\n          </MouseoverTooltip>}\r\n        <ExternalLink href={explorerUrl}>\r\n          <TokenInfoButton>\r\n            <EtherscanLogo width=\"18px\" height=\"18px\" fill={neutral1} />\r\n            {currency.chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"common.etherscan\" /> : <Trans i18nKey=\"common.explorer\" />}\r\n          </TokenInfoButton>\r\n        </ExternalLink>\r\n        {homepageUrl && <ExternalLink href={homepageUrl}>\r\n            <TokenInfoButton>\r\n              <Globe width=\"18px\" height=\"18px\" fill={neutral1} />\r\n              <Trans i18nKey=\"common.website\" />\r\n            </TokenInfoButton>\r\n          </ExternalLink>}\r\n        {twitterName && <ExternalLink href={`https://x.com/${twitterName}`}>\r\n            <TokenInfoButton>\r\n              <TwitterXLogo width=\"18px\" height=\"18px\" fill={neutral1} />\r\n              <Trans i18nKey=\"common.twitter\" />\r\n            </TokenInfoButton>\r\n          </ExternalLink>}\r\n      </TokenButtonRow>\r\n      <TokenDescriptionContainer>\r\n        {!description && <NoInfoAvailable>\r\n            <Trans i18nKey=\"tdp.noInfoAvailable\" />\r\n          </NoInfoAvailable>}\r\n        {description && <>\r\n            <DescriptionVisibilityWrapper data-testid=\"token-description-full\" visible={!showTruncatedDescription}>\r\n              {description}\r\n            </DescriptionVisibilityWrapper>\r\n            <DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" visible={showTruncatedDescription}>\r\n              {truncatedDescription}\r\n            </DescriptionVisibilityWrapper>\r\n          </>}\r\n        {shouldTruncate && <Text\n    display=\"flex\"\n    color=\"neutral2\"\n    fontWeight=\"485\"\n    variant=\"body2\"\n    pt=\"0.5em\"\n    $sm={{ mb: \"2rem\" }}\n    onPress={toggleIsDescriptionTruncated}\n    {...ClickableTamaguiStyle}\n    data-testid=\"token-description-show-more-button\"\n  >\r\n            {isDescriptionTruncated ? <Trans i18nKey=\"common.showMore.button\" /> : <Trans i18nKey=\"common.hide.button\" />}\r\n          </Text>}\r\n      </TokenDescriptionContainer>\r\n      {hasFee && <MouseoverTooltip\n    placement=\"left\"\n    size={TooltipSize.Small}\n    text={<ThemedText.Caption color=\"neutral2\">\r\n              <FOTTooltipContent />\r\n            </ThemedText.Caption>}\n  >\r\n          <Flex gap=\"$gap8\">\r\n            {sameFee ? <ThemedText.BodyPrimary>\r\n                {currency.symbol}&nbsp;\r\n                <Trans i18nKey=\"token.fee.label\" />\r\n                :&nbsp;{sellFeeString}\r\n              </ThemedText.BodyPrimary> : <>\r\n                <ThemedText.BodyPrimary>\r\n                  {currency.symbol}&nbsp;\r\n                  <Trans i18nKey=\"token.fee.buy.label\" />\r\n                  :&nbsp;{buyFeeString}\r\n                </ThemedText.BodyPrimary>{\" \"}\r\n                <ThemedText.BodyPrimary>\r\n                  {currency.symbol}&nbsp;\r\n                  <Trans i18nKey=\"token.fee.sell.label\" />\r\n                  :&nbsp;{sellFeeString}\r\n                </ThemedText.BodyPrimary>{\" \"}\r\n              </>}\r\n          </Flex>\r\n        </MouseoverTooltip>}\r\n    </TokenInfoSection>;\n}\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var MoreHorizontal=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"circle\",{cx:\"12\",cy:\"12\",r:\"1\"}),React.createElement(\"circle\",{cx:\"19\",cy:\"12\",r:\"1\"}),React.createElement(\"circle\",{cx:\"5\",cy:\"12\",r:\"1\"}))}));MoreHorizontal.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},MoreHorizontal.displayName=\"MoreHorizontal\";export default MoreHorizontal;","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { Share as ShareIcon } from \"components/Icons/Share\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport ShareButton, { openShareTweetWindow } from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo, useState } from \"react\";\nimport { Link, MoreHorizontal } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { EllipsisTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea, WebBottomSheet, useMedia, useSporeColors } from \"ui/src\";\nimport { Check } from \"ui/src/components/icons/Check\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nexport const TokenDetailsHeader = () => {\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const media = useMedia();\n  const isMobileScreen = media.sm;\n  const [mobileSheetOpen, toggleMobileSheet] = useState(false);\n  const tokenSymbolName = currency.symbol ?? t(\"tdp.symbolNotFound\");\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const { homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const twitterUrl = twitterName && `https://x.com/${twitterName}`;\n  const [searchParams] = useSearchParams();\n  const utmTag = `${searchParams.size > 0 ? \"&\" : \"?\"}utm_source=share-tdp&utm_medium=${isMobileScreen ? \"mobile\" : \"web\"}`;\n  const currentLocation = window.location.href + utmTag;\n  const twitterShareName = currency.name && currency.symbol ? `${currency.name} (${currency.symbol})` : currency?.name || currency?.symbol || \"\";\n  const [isCopied, setCopied] = useCopyClipboard();\n  const HeaderActions = useMemo(() => {\n    return [\n      {\n        title: t(\"common.explorer\"),\n        icon: currency.chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(explorerUrl, \"_blank\"),\n        show: !!explorerUrl\n      },\n      {\n        title: t(\"common.website\"),\n        icon: <Globe width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(homepageUrl, \"_blank\"),\n        show: !!homepageUrl\n      },\n      {\n        title: t(\"common.twitter\"),\n        icon: <TwitterXLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(twitterUrl, \"_blank\"),\n        show: !!twitterUrl\n      },\n      {\n        title: isCopied ? t(\"common.copied\") : t(\"common.copyLink.button\"),\n        icon: isCopied ? <Check size={16} p={1} color={colors.statusSuccess.val} /> : <Link size={18} color={colors.neutral1.val} />,\n        onPress: () => setCopied(currentLocation),\n        show: isMobileScreen\n      },\n      {\n        title: t(\"common.share.shareToTwitter\"),\n        icon: <ShareIcon fill={colors.neutral1.val} width={18} height={18} />,\n        onPress: () => openShareTweetWindow(twitterShareName),\n        show: isMobileScreen\n      }\n    ];\n  }, [\n    t,\n    currency.chainId,\n    colors.neutral1.val,\n    colors.statusSuccess.val,\n    explorerUrl,\n    homepageUrl,\n    twitterUrl,\n    isCopied,\n    isMobileScreen,\n    setCopied,\n    currentLocation,\n    twitterShareName\n  ]);\n  return <Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    width=\"100%\"\n    mb=\"$spacing20\"\n    $sm={{ mb: \"$spacing8\", alignItems: \"flex-start\" }}\n    animation=\"quick\"\n    data-testid=\"token-info-container\"\n  >\r\n      <Flex row alignItems=\"center\" $sm={{ alignItems: \"flex-start\", flexDirection: \"column\" }} gap=\"$gap12\">\r\n        <PortfolioLogo currencies={[currency]} chainId={currency.chainId} size={32} />\r\n        <Flex row gap=\"$gap8\" alignItems=\"center\">\r\n          <Text variant=\"heading3\" minWidth={40} {...EllipsisTamaguiStyle}>\r\n            {currency.name ?? t(\"tdp.nameNotFound\")}\r\n          </Text>\r\n          <Text variant=\"heading3\" textTransform=\"uppercase\" color=\"$neutral2\" $sm={{ display: \"none\" }}>\r\n            {tokenSymbolName}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      {isMobileScreen ? <MobileTokenActions\n    mobileSheetOpen={mobileSheetOpen}\n    toggleMobileSheet={toggleMobileSheet}\n    HeaderActions={HeaderActions}\n  /> : <DesktopTokenActions HeaderActions={HeaderActions} twitterShareName={twitterShareName} />}\r\n    </Flex>;\n};\nfunction MobileTokenActions({ mobileSheetOpen, toggleMobileSheet, HeaderActions }) {\n  const colors = useSporeColors();\n  return <Flex>\r\n      <TouchableArea height={32} onPress={() => toggleMobileSheet(true)} {...ActionButtonStyle}>\r\n        <MoreHorizontal size=\"$icon.20\" color={colors.neutral2.val} />\r\n      </TouchableArea>\r\n      <WebBottomSheet isOpen={mobileSheetOpen} onClose={() => toggleMobileSheet(false)}>\r\n        <Flex gap=\"$spacing8\" mb=\"$spacing16\">\r\n          {HeaderActions.map(\n    (action) => action.show && <Flex\n      row\n      key={action.title}\n      width=\"100%\"\n      gap=\"$spacing12\"\n      px=\"$spacing8\"\n      py={10}\n      alignItems=\"center\"\n      hoverStyle={{ backgroundColor: \"$surface3\" }}\n      cursor=\"pointer\"\n      borderRadius=\"$rounded8\"\n      onPress={() => {\n        toggleMobileSheet(false);\n        action.onPress();\n      }}\n    >\r\n                  {action.icon}\r\n                  <Text variant=\"body2\">{action.title}</Text>\r\n                </Flex>\n  )}\r\n        </Flex>\r\n      </WebBottomSheet>\r\n    </Flex>;\n}\nfunction DesktopTokenActions({ HeaderActions, twitterShareName }) {\n  return <Flex row gap=\"$gap8\" alignItems=\"center\">\r\n      {HeaderActions.map(\n    (action) => action.show && <MouseoverTooltip key={action.title} text={action.title} placement=\"top\" size={TooltipSize.Max}>\r\n              <Text onPress={action.onPress} {...ActionButtonStyle}>\r\n                {action.icon}\r\n              </Text>\r\n            </MouseoverTooltip>\n  )}\r\n      <ShareButton name={twitterShareName} utmSource=\"share-tdp\" />\r\n    </Flex>;\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { MobileBottomBar, TDPActionTabs } from \"components/NavBar/MobileBottomBar\";\nimport { ActivitySection } from \"components/Tokens/TokenDetails/ActivitySection\";\nimport BalanceSummary, { PageChainBalanceSummary } from \"components/Tokens/TokenDetails/BalanceSummary\";\nimport ChartSection from \"components/Tokens/TokenDetails/ChartSection\";\nimport { LeftPanel, RightPanel, TokenDetailsLayout } from \"components/Tokens/TokenDetails/Skeleton\";\nimport StatsSection from \"components/Tokens/TokenDetails/StatsSection\";\nimport { TokenDescription } from \"components/Tokens/TokenDetails/TokenDescription\";\nimport { TokenDetailsHeader } from \"components/Tokens/TokenDetails/TokenDetailsHeader\";\nimport { Hr } from \"components/Tokens/TokenDetails/shared\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport deprecatedStyled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { getNativeAddress } from \"uniswap/src/constants/addresses\";\nimport { useUrlContext } from \"uniswap/src/contexts/UrlContext\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { TokenWarningCard } from \"uniswap/src/features/tokens/TokenWarningCard\";\nimport TokenWarningModal from \"uniswap/src/features/tokens/TokenWarningModal\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { areCurrenciesEqual, currencyId } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { getInitialLogoUrl } from \"utils/getInitialLogoURL\";\nconst DividerLine = deprecatedStyled(Hr)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    opacity: 0;\n    margin-bottom: 0;\n  }\n`;\nfunction TDPBreadcrumb() {\n  const { address, currency, currencyChain } = useTDPContext();\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\r\n      <BreadcrumbNavLink to={`/explore/${currencyChain.toLowerCase()}`}>\r\n        <Trans i18nKey=\"common.explore\" /> <ChevronRight size={14} />\r\n      </BreadcrumbNavLink>\r\n      <BreadcrumbNavLink to={`/explore/tokens/${currencyChain.toLowerCase()}`}>\r\n        <Trans i18nKey=\"common.tokens\" /> <ChevronRight size={14} />\r\n      </BreadcrumbNavLink>\r\n      <CurrentPageBreadcrumb address={address} currency={currency} />\r\n    </BreadcrumbNavContainer>;\n}\nfunction getCurrencyURLAddress(currency) {\n  if (!currency) {\n    return \"\";\n  }\n  if (currency.isToken) {\n    return currency.address;\n  }\n  return NATIVE_CHAIN_ID;\n}\nfunction useSwapInitialInputCurrency() {\n  const { currency } = useTDPContext();\n  const { useParsedQueryString } = useUrlContext();\n  const parsedQs = useParsedQueryString();\n  const inputTokenAddress = useMemo(() => {\n    return typeof parsedQs.inputCurrency === \"string\" ? parsedQs.inputCurrency : currency.isNative ? void 0 : getNativeAddress(currency.chainId);\n  }, [currency.chainId, currency.isNative, parsedQs.inputCurrency]);\n  return useCurrency(inputTokenAddress, currency.chainId);\n}\nfunction TDPSwapComponent() {\n  const { address, currency, currencyChainId, tokenColor } = useTDPContext();\n  const navigate = useNavigate();\n  const currencyInfo = useCurrencyInfo(currencyId(currency));\n  const handleCurrencyChange = useCallback(\n    (tokens, isBridgePair) => {\n      const inputCurrencyURLAddress = getCurrencyURLAddress(tokens.inputCurrency);\n      const outputCurrencyURLAddress = getCurrencyURLAddress(tokens.outputCurrency);\n      const inputEquivalent = addressesAreEquivalent(inputCurrencyURLAddress, address) && tokens.inputCurrency?.chainId === currencyChainId;\n      const outputEquivalent = addressesAreEquivalent(outputCurrencyURLAddress, address) && tokens.outputCurrency?.chainId === currencyChainId;\n      if (inputEquivalent || outputEquivalent || isBridgePair) {\n        return;\n      }\n      const newDefaultToken = tokens.outputCurrency ?? tokens.inputCurrency;\n      if (!newDefaultToken) {\n        return;\n      }\n      const preloadedLogoSrc = getInitialLogoUrl(newDefaultToken.wrapped.address, newDefaultToken.chainId);\n      const url = getTokenDetailsURL({\n        // The function falls back to \"NATIVE\" if the address is null\n        address: newDefaultToken.isNative ? null : newDefaultToken.address,\n        chain: toGraphQLChain(isUniverseChainId(newDefaultToken.chainId) ? newDefaultToken.chainId : currencyChainId),\n        inputAddress: (\n          // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n          // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n          tokens.inputCurrency && tokens.inputCurrency !== newDefaultToken ? inputCurrencyURLAddress : null\n        )\n      });\n      navigate(url, { state: { preloadedLogoSrc } });\n    },\n    [address, currencyChainId, navigate]\n  );\n  const initialInputCurrency = useSwapInitialInputCurrency();\n  const isSell = areCurrenciesEqual(initialInputCurrency, currency);\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const closeWarningModal = useCallback(() => setShowWarningModal(false), []);\n  return <Flex gap=\"$gap12\">\r\n      <Swap\n    syncTabToUrl={false}\n    chainId={currency.chainId}\n    initialInputCurrency={initialInputCurrency}\n    initialOutputCurrency={isSell ? void 0 : currency}\n    onCurrencyChange={handleCurrencyChange}\n    tokenColor={tokenColor}\n  />\r\n      <TokenWarningCard currencyInfo={currencyInfo} onPress={() => setShowWarningModal(true)} />\r\n      {currencyInfo && // Intentionally duplicative with the TokenWarningModal in the swap component; this one only displays when user clicks \"i\" Info button on the TokenWarningCard\n  <TokenWarningModal\n    currencyInfo0={currencyInfo}\n    isInfoOnlyWarning\n    isVisible={showWarningModal}\n    closeModalOnly={closeWarningModal}\n    onAcknowledge={closeWarningModal}\n  />}\r\n    </Flex>;\n}\nfunction TDPAnalytics({ children }) {\n  const { address, currency } = useTDPContext();\n  return <Trace\n    logImpression\n    page={InterfacePageName.TOKEN_DETAILS_PAGE}\n    properties={{\n      tokenAddress: address,\n      tokenSymbol: currency.symbol,\n      tokenName: currency.name,\n      chainId: currency.chainId\n    }}\n  >\r\n      {children}\r\n    </Trace>;\n}\nexport default function TokenDetails() {\n  const { address, currency, tokenQuery, currencyChain, multiChainMap } = useTDPContext();\n  const tokenQueryData = tokenQuery.data?.token;\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const media = useMedia();\n  const showRightPanel = !media.xl;\n  const { direction: scrollDirection } = useScroll();\n  const isTouchDevice = useIsTouchDevice();\n  return <TDPAnalytics>\r\n      <TokenDetailsLayout>\r\n        <LeftPanel>\r\n          <TDPBreadcrumb />\r\n          <TokenDetailsHeader />\r\n          <ChartSection />\r\n          {!showRightPanel && !!pageChainBalance && <Flex mt=\"$spacing40\">\r\n              <PageChainBalanceSummary pageChainBalance={pageChainBalance} alignLeft />\r\n            </Flex>}\r\n          <StatsSection chainId={currency.chainId} address={address} tokenQueryData={tokenQueryData} />\r\n          <DividerLine />\r\n          <ActivitySection />\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          {\n    /* Uses display to preserve component state */\n  }\r\n          <Flex display={showRightPanel ? \"flex\" : \"none\"}>\r\n            <TDPSwapComponent />\r\n            <BalanceSummary />\r\n          </Flex>\r\n          <TokenDescription />\r\n        </RightPanel>\r\n        <MobileBottomBar hide={isTouchDevice && scrollDirection === ScrollDirection.DOWN}>\r\n          {\n    /* TODO(WEB-4800): data-testid is not passed to ui/src elements when animation is set */\n  }\r\n          {\n    /* Remove this extra div when WEB-4800 is fixed */\n  }\r\n          <Flex data-testid=\"tdp-mobile-bottom-bar\">\r\n            <TDPActionTabs />\r\n          </Flex>\r\n        </MobileBottomBar>\r\n      </TokenDetailsLayout>\r\n    </TDPAnalytics>;\n}\n","\"use strict\";\nimport { CELO_LOGO } from \"ui/src/assets\";\nimport { isCelo, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { isUniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { isAddress } from \"utilities/src/addresses\";\nexport function getInitialLogoUrl(address, chainId, backupImg) {\n  const networkName = isUniverseChainId(chainId) ? getChainInfo(chainId).assetRepoNetworkName ?? \"ethereum\" : \"ethereum\";\n  const checksummedAddress = isAddress(address);\n  if (chainId && isCelo(chainId) && address === nativeOnChain(chainId).wrapped.address) {\n    return CELO_LOGO;\n  }\n  if (checksummedAddress) {\n    return `https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/${networkName}/assets/${checksummedAddress}/logo.png`;\n  } else {\n    return backupImg ?? void 0;\n  }\n}\n","\"use strict\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { getChainLabel } from \"uniswap/src/features/chains/utils\";\nexport function getTokenPageTitle(t, currency, chainId) {\n  const tokenName = currency?.name;\n  const tokenSymbol = currency?.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!tokenName && !tokenSymbol) {\n    return baseTitle;\n  }\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  if (!tokenName && tokenSymbol) {\n    return `${tokenSymbol}${chainSuffix}: ${baseTitle}`;\n  }\n  if (tokenName && !tokenSymbol) {\n    return `${tokenName}${chainSuffix}: ${baseTitle}`;\n  }\n  return `${tokenName} (${tokenSymbol})${chainSuffix}: ${baseTitle}`;\n}\nexport const getTokenPageDescription = (currency, chainId) => {\n  const tokenPageName = currency?.name && currency?.symbol ? `${currency?.name} (${currency?.symbol})` : currency?.name ?? currency?.symbol ?? \"tokens\";\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${getChainLabel(chainId)}` : \"\";\n  return `Buy, sell, and swap ${tokenPageName}${chainSuffix}. Real-time prices, charts, transaction data, and more.`;\n};\n","\"use strict\";\nimport TokenDetails from \"components/Tokens/TokenDetails\";\nimport { useCreateTDPChartState } from \"components/Tokens/TokenDetails/ChartSection\";\nimport { TokenDetailsPageSkeleton } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { NATIVE_CHAIN_ID, UNKNOWN_TOKEN_SYMBOL } from \"constants/tokens\";\nimport { useTokenBalancesQuery } from \"graphql/data/apollo/AdaptiveTokenBalancesProvider\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { ExploreTab } from \"pages/Explore/constants\";\nimport { TDPProvider } from \"pages/TokenDetails/TDPContext\";\nimport { getTokenPageDescription, getTokenPageTitle } from \"pages/TokenDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useEffect, useMemo } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { formatTokenMetatagTitleName } from \"shared-cloud/metatags\";\nimport { useSporeColors } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useTokenWebQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants/trace\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { getNativeTokenDBAddress } from \"utils/nativeTokens\";\nfunction useOnChainToken(address, chainId, skip) {\n  const token = useCurrency(!skip ? address : void 0, chainId);\n  if (skip || !address || token && token?.symbol === UNKNOWN_TOKEN_SYMBOL) {\n    return void 0;\n  } else {\n    return token;\n  }\n}\nfunction useTDPCurrency(tokenQuery, tokenAddress, currencyChainId, isNative) {\n  const { chainId } = useAccount();\n  const appChainId = chainId ?? UniverseChainId.Mainnet;\n  const queryCurrency = useMemo(() => {\n    if (isNative) {\n      return nativeOnChain(currencyChainId);\n    }\n    if (tokenQuery.data?.token) {\n      return gqlToCurrency(tokenQuery.data.token);\n    }\n    return void 0;\n  }, [isNative, currencyChainId, tokenQuery.data?.token]);\n  const skipOnChainFetch = Boolean(queryCurrency) || currencyChainId !== appChainId;\n  const onChainToken = useOnChainToken(tokenAddress, currencyChainId, skipOnChainFetch);\n  const currency = queryCurrency ?? onChainToken;\n  const currencyWasFetchedOnChain = !queryCurrency;\n  return { currency, currencyWasFetchedOnChain };\n}\nfunction useMultiChainMap(tokenQuery) {\n  const { data: balanceQuery } = useTokenBalancesQuery();\n  return useMemo(() => {\n    const tokenBalances = balanceQuery?.portfolios?.[0]?.tokenBalances;\n    const tokensAcrossChains = tokenQuery.data?.token?.project?.tokens;\n    if (!tokensAcrossChains) {\n      return {};\n    }\n    return tokensAcrossChains.reduce((map, current) => {\n      if (current) {\n        if (!map[current.chain]) {\n          map[current.chain] = {};\n        }\n        const update = map[current.chain] ?? {};\n        update.address = current.address;\n        update.balance = tokenBalances?.find((tokenBalance) => tokenBalance?.token?.id === current.id);\n        map[current.chain] = update;\n      }\n      return map;\n    }, {});\n  }, [balanceQuery?.portfolios, tokenQuery.data?.token?.project?.tokens]);\n}\nfunction useCreateTDPContext() {\n  const { tokenAddress } = useParams();\n  if (!tokenAddress) {\n    throw new Error(\"Invalid token details route: token address URL param is undefined\");\n  }\n  const currencyChainInfo = getChainInfo(useChainIdFromUrlParam() ?? UniverseChainId.Mainnet);\n  const isNative = tokenAddress === NATIVE_CHAIN_ID;\n  const tokenDBAddress = isNative ? getNativeTokenDBAddress(currencyChainInfo.backendChain.chain) : tokenAddress;\n  const tokenQuery = useTokenWebQuery({\n    variables: { address: tokenDBAddress, chain: currencyChainInfo.backendChain.chain },\n    errorPolicy: \"all\"\n  });\n  const chartState = useCreateTDPChartState(tokenDBAddress, currencyChainInfo.backendChain.chain);\n  const multiChainMap = useMultiChainMap(tokenQuery);\n  const { currency, currencyWasFetchedOnChain } = useTDPCurrency(\n    tokenQuery,\n    tokenAddress,\n    currencyChainInfo.id,\n    isNative\n  );\n  const colors = useSporeColors();\n  const { preloadedLogoSrc } = useLocation().state ?? {};\n  const extractedColorSrc = tokenQuery.data?.token?.project?.logoUrl ?? preloadedLogoSrc;\n  const tokenColor = useSrcColor(\n    extractedColorSrc,\n    tokenQuery.data?.token?.name ?? tokenQuery.data?.token?.project?.name,\n    colors.surface2.val\n  ).tokenColor ?? void 0;\n  return useMemo(() => {\n    return {\n      currency,\n      currencyChain: currencyChainInfo.backendChain.chain,\n      currencyChainId: currencyChainInfo.id,\n      // `currency.address` is checksummed, whereas the `tokenAddress` url param may not be\n      address: (currency?.isNative ? NATIVE_CHAIN_ID : currency?.address) ?? tokenAddress,\n      currencyWasFetchedOnChain,\n      tokenQuery,\n      chartState,\n      multiChainMap,\n      tokenColor\n    };\n  }, [\n    currency,\n    currencyChainInfo.backendChain.chain,\n    currencyChainInfo.id,\n    tokenAddress,\n    currencyWasFetchedOnChain,\n    tokenQuery,\n    chartState,\n    multiChainMap,\n    tokenColor\n  ]);\n}\nexport default function TokenDetailsPage() {\n  const { t } = useTranslation();\n  const contextValue = useCreateTDPContext();\n  const { address, currency, currencyChain, currencyChainId, tokenQuery } = contextValue;\n  const navigate = useNavigate();\n  const tokenQueryData = tokenQuery.data?.token;\n  const metatagProperties = useMemo(() => {\n    return {\n      title: formatTokenMetatagTitleName(tokenQueryData?.symbol, tokenQueryData?.name),\n      image: window.location.origin + \"/api/image/tokens/\" + currencyChain.toLowerCase() + \"/\" + (currency?.isNative ? getNativeTokenDBAddress(currencyChain) : address),\n      url: window.location.href,\n      description: getTokenPageDescription(currency, currencyChainId)\n    };\n  }, [address, currency, currencyChain, currencyChainId, tokenQueryData?.name, tokenQueryData?.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  useEffect(() => {\n    if (!tokenQuery.loading && !currency) {\n      navigate(`/explore?type=${ExploreTab.Tokens}&result=${ModalName.NotFound}`);\n    }\n  }, [currency, tokenQuery.loading, navigate]);\n  return <>\r\n      <Helmet>\r\n        <title>{getTokenPageTitle(t, currency, currencyChainId)}</title>\r\n        {metatags.map((tag, index) => <meta key={index} {...tag} />)}\r\n      </Helmet>\r\n      {(() => {\n    if (tokenQuery.loading || !currency) {\n      return <TokenDetailsPageSkeleton />;\n    }\n    return <TDPProvider contextValue={contextValue}>\r\n            <TokenDetails />\r\n          </TDPProvider>;\n  })()}\r\n    </>;\n}\n","\"use strict\";\nexport function formatTokenMetatagTitleName(symbol, name) {\n  if (symbol) {\n    return \"Get \" + symbol + \" on Aborean\";\n  }\n  if (name) {\n    return \"Get \" + name + \" on Aborean\";\n  }\n  return \"View Token on Aborean\";\n}\n"],"names":["Magic","AnimatedMagic","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","currency0Info","currency1Info","poolApr","lpIncentiveRewardApr","totalApr","chainId","UniverseChainId","Mainnet","t","useTranslation","formatPercent","useLocalizationContext","displayPoolApr","displayRewardApr","displayTotalApr","Flex","flexDirection","gap","id","paddingTop","paddingBottom","px","TooltipRow","TooltipLabel","icon","SplitLogo","inputCurrencyInfo","outputCurrencyInfo","size","label","Text","variant","color","div","className","img","height","width","src","alt","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","children","row","justifyContent","alignItems","manualChainOutageAtom","atomWithReset","useUpdateManualOutage","errorV3","errorV2","setManualOutage","useUpdateAtom","useResetAtom","resetManualOutage","version","ProtocolVersion","V2","getFeeOnTransferAddress","Optimism","Bnb","Polygon","Base","ArbitrumOne","Celo","Avalanche","FEE_CACHE","getSwapTaxes","fotDetector","inputTokenAddress","outputTokenAddress","addresses","push","length","data","callStatic","batchValidate","getWethAddress","forEach","address","index","sellFeeBps","buyFeeBps","sellTax","Percent","toNumber","BIPS_BASE","buyTax","e","logger","warn","inputTax","ZERO_PERCENT","outputTax","useSwapTaxes","tokenChainId","account","useAccount","contract","useContract","FOT_DETECTOR_ABI","useEffect","sendAnalyticsEvent","InterfaceEventName","WALLET_PROVIDER_USED","source","useFeeOnTransferDetectorContract","setTaxes","useState","then","Sell","svg","xmlns","path","fillRule","clipRule","_cn","TDPActionTabs","currencyChain","currencyChainId","tokenColor","useTDPContext","switchChain","useSwitchChain","navigate","useNavigate","chainUrlParam","toLowerCase","addressUrlParam","NATIVE_CHAIN_ID","showIcons","useMedia","xs","toActionLink","useCallback","href","tabs","CreditCardIcon","Send","map","tab","Button","onPress","DEFAULT_QUERY_SIZE","HIDDEN_COLUMNS","PoolSortFields","VolOverTvl","RewardApr","TokenDetailsPoolsTable","referenceToken","sortMethod","useAtomValue","sortMethodAtom","sortAscending","sortAscendingAtom","sortState","useMemo","sortBy","sortDirection","OrderDirection","Asc","Desc","pools","loading","loadMore","tokenAddress","dataV2","dataV3","dataV4","defaultChainId","useEnabledChains","chain","toGraphQLChain","loadingV4","error","errorV4","fetchMore","fetchMoreV4","useTopV4PoolsQuery","variables","first","loadingV3","fetchMoreV3","useTopV3PoolsQuery","loadingV2","fetchMoreV2","useTopV2PairsQuery","skip","loadingMoreV4","useRef","loadingMoreV3","loadingMoreV2","sizeRef","onComplete","current","cursor","topV4Pools","totalLiquidity","value","updateQuery","prev","fetchMoreResult","Object","keys","mergedData","slice","topV3Pools","topV2Pairs","pool","hash","poolId","token0","token1","tvl","volume24h","volume30d","volOverTvl","calculate1DVolOverTvl","apr","calculateApr","feeTier","protocolVersion","hookAddress","hook","V2_BIPS","sortPools","usePoolsFromTokenAddress","combinedError","ApolloError","errorMessage","allDataStillLoading","resetSortMethod","resetSortAscending","data-testid","PoolsTable","maxHeight","hiddenColumns","forcePinning","TokenTransactionType","TokenTransactionType2","TokenTransactionDefaultQuerySize","_cn3","_cn2","TableWrapper","styled","position","minHeight","TransactionsTable","activeLocalCurrency","useAppFiatCurrency","formatNumber","formatFiatPrice","useFormatter","filterModalIsOpen","toggleFilterModal","useReducer","s","filterAnchorRef","filter","setFilters","BUY","SELL","transactions","useV4TokenTransactionsQuery","useV3TokenTransactionsQuery","useV2TokenTransactionsQuery","querySizeRef","token","v4Transactions","timestamp","Chain","Ethereum","v3Transactions","v2Transactions","filterTransaction","tx","tokenBeingSold","isSell","parseFloat","token0Quantity","type","PoolTransactionType","Swap","includes","sort","a","b","useTokenTransactions","unwrappedReferenceToken","unwrapToken","transaction","swapLeg0","symbol","amount","swapLeg1","token1Quantity","token0IsBeingSold","input","output","usdValue","makerAddress","media","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","maxSize","header","HeaderCell","grow","Trans","i18nKey","cell","Cell","TimestampCell","Number","getValue","link","getExplorerLink","ExplorerDataType","TRANSACTION","FilterHeaderRow","clickable","ref","Filter","allFilters","values","activeFilter","isOpen","anchorRef","isBuy","String","TableText","inputTokenAmount","Math","abs","nonReferenceSwapLeg","EllipsisText","maxWidth","NumberType","TokenQuantityStats","TokenLinkCell","swapOutput","HeaderSortText","fiat","price","StyledExternalLink","ADDRESS","shortenAddress","Table","defaultPinnedColumns","xxl","Container","Tab","ClickableTamaguiStyle","ActivitySection","wrapped","currency","activityInView","setActivityInView","mb","BalancesCard","theme","neutral1","breakpoints","lg","BalanceSection","BalanceRow","BalanceItem","BalanceAmountsContainer","$alignLeft","Balance","gqlBalance","alignLeft","onClick","currencies","formattedGqlBalance","quantity","TokenNonTx","formattedUsdGqlValue","denominatedValue","PortfolioBalance","PortfolioLogo","images","project","logoUrl","ThemedText","BodyPrimary","BodySecondary","PageChainBalanceSummary","pageChainBalance","gqlToCurrency","HeadlineSmall","OtherChainsBalanceSummary","otherChainBalances","hasPageChainBalance","SubHeaderSmall","balance","supportedChainIdFromGQLChain","getTokenDetailsURL","BalanceSummary","multiChainMap","key","entries","hasBalances","Boolean","isConnected","Globe","stroke","TokenInfoSection","$xl","TokenNameRow","TokenButtonRow","flexWrap","TokenInfoButton","display","py","borderRadius","TokenDescriptionContainer","EllipsisTamaguiStyle","whiteSpace","lineHeight","DescriptionVisibilityWrapper","Paragraph","fontWeight","variants","visible","true","false","TRUNCATE_CHARACTER_COUNT","TokenDescription","tokenQuery","useTheme","description","homepageUrl","twitterName","explorerUrl","isNative","NATIVE","TOKEN","isCopied","setCopied","useCopyClipboard","copy","isDescriptionTruncated","toggleIsDescriptionTruncated","x","truncatedDescription","truncateDescription","shouldTruncate","showTruncatedDescription","sellFee","buyFee","sellFeeString","buyFeeString","hasFee","toFixed","sameFee","MouseoverTooltip","disabled","placement","TooltipSize","Max","forceShow","text","Copy","ExternalLink","EtherscanLogo","TwitterXLogo","NoInfoAvailable","pt","$sm","Small","Caption","FOTTooltipContent","_extends","assign","target","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","MoreHorizontal","forwardRef","_ref","_ref$color","_ref$size","rest","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","propTypes","displayName","TokenDetailsHeader","colors","useSporeColors","isMobileScreen","sm","mobileSheetOpen","toggleMobileSheet","tokenSymbolName","twitterUrl","searchParams","useSearchParams","utmTag","currentLocation","window","location","twitterShareName","HeaderActions","title","val","ExplorerIcon","open","show","Check","p","statusSuccess","Link","ShareIcon","openShareTweetWindow","animation","minWidth","textTransform","MobileTokenActions","DesktopTokenActions","TouchableArea","ActionButtonStyle","neutral2","WebBottomSheet","onClose","action","ShareButton","utmSource","_cn6","_cn5","_cn4","DividerLine","deprecatedStyled","Hr","breakpoint","md","TDPBreadcrumb","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","getCurrencyURLAddress","isToken","TDPSwapComponent","currencyInfo","useCurrencyInfo","currencyId","handleCurrencyChange","tokens","isBridgePair","inputCurrencyURLAddress","inputCurrency","outputCurrencyURLAddress","outputCurrency","inputEquivalent","addressesAreEquivalent","outputEquivalent","newDefaultToken","preloadedLogoSrc","backupImg","networkName","isUniverseChainId","getChainInfo","assetRepoNetworkName","checksummedAddress","isAddress","isCelo","nativeOnChain","CELO_LOGO","getInitialLogoUrl","url","inputAddress","state","initialInputCurrency","useParsedQueryString","useUrlContext","parsedQs","getNativeAddress","useCurrency","useSwapInitialInputCurrency","areCurrenciesEqual","showWarningModal","setShowWarningModal","closeWarningModal","syncTabToUrl","initialOutputCurrency","onCurrencyChange","TokenWarningCard","TokenWarningModal","currencyInfo0","isInfoOnlyWarning","isVisible","closeModalOnly","onAcknowledge","TDPAnalytics","Trace","logImpression","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenSymbol","tokenName","TokenDetails","tokenQueryData","showRightPanel","xl","direction","scrollDirection","useScroll","isTouchDevice","useIsTouchDevice","TokenDetailsLayout","LeftPanel","ChartSection","StatsSection","RightPanel","concatClassName","MobileBottomBar","hide","ScrollDirection","DOWN","getTokenPageTitle","baseTitle","chainSuffix","getChainLabel","getTokenPageDescription","useTDPCurrency","appChainId","queryCurrency","skipOnChainFetch","onChainToken","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","currencyWasFetchedOnChain","useCreateTDPContext","useParams","Error","currencyChainInfo","useChainIdFromUrlParam","tokenDBAddress","getNativeTokenDBAddress","backendChain","useTokenWebQuery","errorPolicy","chartState","useCreateTDPChartState","balanceQuery","useTokenBalancesQuery","tokenBalances","portfolios","tokensAcrossChains","reduce","update","find","tokenBalance","useMultiChainMap","useLocation","extractedColorSrc","useSrcColor","surface2","TokenDetailsPage","contextValue","metatagProperties","image","origin","metatags","useDynamicMetatags","ExploreTab","Tokens","ModalName","NotFound","Helmet","tag","meta","TokenDetailsPageSkeleton","TDPProvider"],"sourceRoot":""}