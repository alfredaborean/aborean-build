{"version":3,"file":"static/js/6177.6ad1152a.chunk.js","mappings":"sJACA,SAAiB,C,qOCEV,MAAOA,EAAMC,IAAgBC,EAAAA,EAAAA,GAAW,CAC7CC,KAAM,OACNC,QAAUC,IAAU,SAACC,EAAAA,GAAGA,CAACC,QAAQ,YAAYC,KAAK,UAAWH,E,UACzD,SAACI,EAAAA,GAAIA,CACPC,EAAE,+gBACFF,KAAK,qB,gDCRI,MAAAG,EAAA,8JAAAC,EAAA,kLAAAC,EAAA,opBAAAC,EAAA,mdAAAC,EAAA,qLAAAC,EAAA,uLAAAC,EAAA,oSAAAC,EAAA,6KAcN,SAASC,IACd,MAAM,OAAEC,EAAM,WAAEC,IAAeC,EAAAA,EAAAA,GAAcC,EAAAA,UAAUC,iBACjD,EAAEC,IAAMC,EAAAA,EAAAA,kBACRC,GAA2BC,EAAAA,EAAAA,IAAgBC,EAAAA,GAAqC,IAC/EC,EAAsBC,IAA2BC,EAAAA,EAAAA,IAAQL,IACzDM,EAAiBC,IAAsBC,EAAAA,EAAAA,UAASL,GACjDM,GAAqBC,EAAAA,EAAAA,cAAY,KACrCH,EAAmBJ,GACnBT,MACC,CAACS,EAAsBT,EAAYa,IAChCI,GAAaD,EAAAA,EAAAA,cAAY,KAC7BN,EAAwBE,GACxBZ,MACC,CAACY,EAAiBZ,EAAYU,IACjC,OAAO,SAACQ,EAAAA,MAAKA,CAACpC,KAAMoB,EAAAA,UAAUC,eAAgBgB,YAAapB,EAAQqB,QAASL,E,UACxE,SAACM,MAAAA,CAAIC,UAAAzB,E,UACH,UAACwB,MAAAA,CAAIC,UAAA1B,E,WACH,SAACyB,MAAAA,CAAIC,UAAA3B,E,UACH,SAAC4B,EAAAA,QAAKA,CAACC,UAAQ,EAACC,QAASC,EAAAA,GAAqBC,a,UAC5C,SAACC,EAAAA,eAAcA,CAACR,QAASL,SAG7B,UAACM,MAAAA,CAAIC,UAAA5B,E,WACH,SAAC2B,MAAAA,CAAIC,UAAA7B,E,UACH,SAACd,EAAIA,CAACkD,MAAM,YAAYC,KAAK,gBAE/B,SAACC,EAAAA,KAAIA,CAACC,QAAQ,c,SAAe5B,EAAE,4BAC/B,SAAC2B,EAAAA,KAAIA,CAACC,QAAQ,QAAQH,MAAM,YAAYI,UAAU,S,UAChD,SAACC,EAAAA,MAAKA,CAChBC,QAAQ,oCACRC,WAAY,CACVC,aAAa,SAACC,EAAAA,EAAMA,CAClBC,KAAMC,EAAAA,YAAYC,iBAClBC,OAAO,SACPC,mBAAmB,OACnBC,SAAS,kBAKL,UAACvB,MAAAA,CAAIC,UAAA9B,E,WAQH,UAAC6B,MAAAA,CAAIC,UAAA/B,E,WACH,SAACsD,EAAAA,EAAQA,CAACC,QAASlC,EAAiBmC,gBAAkBD,GAAYjC,IAAqBiC,MACvF,SAACf,EAAAA,KAAIA,CAACC,QAAQ,eAAeH,MAAM,Y,SAChCzB,EAAE,8CAGP,SAAC2B,EAAAA,KAAIA,CAACC,QAAQ,QAAQH,MAAM,Y,SACzBzB,EAAE,uDAIT,SAAC2B,EAAAA,KAAIA,CAACC,QAAQ,QAAQH,MAAM,YAAYe,SAAU,G,SAC/CxC,EAAE,uCAEL,SAACiB,MAAAA,CAAIC,UAAAhC,E,UACH,SAAC0D,EAAAA,EAAMA,CAACC,SAAS,YAAYC,QAASjC,E,SACnCb,EAAE,gCAMjB,C","sources":["webpack://@uniswap/interface/./src/components/PrivacyChoices/index.tsx?a468","../packages/ui/src/components/icons/Lock.tsx","components/PrivacyChoices/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Lock, AnimatedLock] = createIcon({\n  name: \"Lock\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M16.75 9.05811V7C16.75 4.38 14.62 2.25 12 2.25C9.38 2.25 7.25 4.38 7.25 7V9.05811C5.752 9.29111 5 10.269 5 12V18C5 20 6 21 8 21H16C18 21 19 20 19 18V12C19 10.269 18.248 9.29111 16.75 9.05811ZM12.75 14.9871V17C12.75 17.414 12.414 17.75 12 17.75C11.586 17.75 11.25 17.414 11.25 17V14.9619C10.962 14.7329 10.7649 14.395 10.7649 14C10.7649 13.31 11.32 12.75 12.01 12.75H12.02C12.71 12.75 13.27 13.31 13.27 14C13.27 14.412 13.057 14.7601 12.75 14.9871ZM15.25 9H8.75V7C8.75 5.21 10.21 3.75 12 3.75C13.79 3.75 15.25 5.21 15.25 7V9Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { InterfaceElementName } from \"@uniswap/analytics-events\";\nimport { PRIVACY_SHARING_OPT_OUT_STORAGE_KEY } from \"components/PrivacyChoices/constants\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { useAtom } from \"jotai\";\nimport { atomWithStorage } from \"jotai/utils\";\nimport { useCallback, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Anchor, Button, Checkbox, Flex, ModalCloseIcon, Text } from \"ui/src\";\nimport { Lock } from \"ui/src/components/icons/Lock\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { uniswapUrls } from \"uniswap/src/constants/urls\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nexport function PrivacyChoicesModal() {\n  const { isOpen, closeModal } = useModalState(ModalName.PrivacyChoices);\n  const { t } = useTranslation();\n  const privacySharingOptOutAtom = atomWithStorage(PRIVACY_SHARING_OPT_OUT_STORAGE_KEY, false);\n  const [privacySharingOptOut, setPrivacySharingOptOut] = useAtom(privacySharingOptOutAtom);\n  const [isOptOutChecked, setIsOptOutChecked] = useState(privacySharingOptOut);\n  const closeAndResetModal = useCallback(() => {\n    setIsOptOutChecked(privacySharingOptOut);\n    closeModal();\n  }, [privacySharingOptOut, closeModal, setIsOptOutChecked]);\n  const handleSave = useCallback(() => {\n    setPrivacySharingOptOut(isOptOutChecked);\n    closeModal();\n  }, [isOptOutChecked, closeModal, setPrivacySharingOptOut]);\n  return <Modal name={ModalName.PrivacyChoices} isModalOpen={isOpen} onClose={closeAndResetModal}>\r\n      <Flex fill>\r\n        <Flex py=\"$spacing20\" px=\"$spacing24\" gap=\"$spacing24\">\r\n          <Flex row justifyContent=\"flex-end\">\r\n            <Trace logPress element={InterfaceElementName.CLOSE_BUTTON}>\r\n              <ModalCloseIcon onClose={closeAndResetModal} />\r\n            </Trace>\r\n          </Flex>\r\n          <Flex alignItems=\"center\" gap=\"$gap16\">\r\n            <Flex backgroundColor=\"$surface3\" p=\"$spacing12\" borderRadius=\"$rounded12\">\r\n              <Lock color=\"$neutral1\" size=\"$icon.24\" />\r\n            </Flex>\r\n            <Text variant=\"subheading1\">{t(\"common.privacyChoices\")}</Text>\r\n            <Text variant=\"body3\" color=\"$neutral2\" textAlign=\"center\">\r\n              <Trans\n    i18nKey=\"common.privacyChoices.description\"\n    components={{\n      privacyLink: <Anchor\n        href={uniswapUrls.privacyPolicyUrl}\n        target=\"_blank\"\n        textDecorationLine=\"none\"\n        fontSize=\"inherit\"\n      />\n    }}\n  />\r\n            </Text>\r\n            <Flex\n    p=\"$padding16\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$border.width1\"\n    borderColor=\"$surface3\"\n    borderStyle=\"solid\"\n    gap=\"$gap8\"\n  >\r\n              <Flex row alignItems=\"center\" gap=\"$gap12\">\r\n                <Checkbox checked={isOptOutChecked} onCheckedChange={(checked) => setIsOptOutChecked(!!checked)} />\r\n                <Text variant=\"buttonLabel2\" color=\"$neutral1\">\r\n                  {t(\"common.privacyChoices.checkbox.label\")}\r\n                </Text>\r\n              </Flex>\r\n              <Text variant=\"body4\" color=\"$neutral2\">\r\n                {t(\"common.privacyChoices.checkbox.description\")}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n          <Text variant=\"body4\" color=\"$neutral2\" fontSize={10}>\r\n            {t(\"common.privacyChoices.disclaimer\")}\r\n          </Text>\r\n          <Flex row>\r\n            <Button emphasis=\"secondary\" onPress={handleSave}>\r\n              {t(\"common.button.save\")}\r\n            </Button>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </Modal>;\n}\n"],"names":["Lock","AnimatedLock","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","_cn8","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","PrivacyChoicesModal","isOpen","closeModal","useModalState","ModalName","PrivacyChoices","t","useTranslation","privacySharingOptOutAtom","atomWithStorage","PRIVACY_SHARING_OPT_OUT_STORAGE_KEY","privacySharingOptOut","setPrivacySharingOptOut","useAtom","isOptOutChecked","setIsOptOutChecked","useState","closeAndResetModal","useCallback","handleSave","Modal","isModalOpen","onClose","div","className","Trace","logPress","element","InterfaceElementName","CLOSE_BUTTON","ModalCloseIcon","color","size","Text","variant","textAlign","Trans","i18nKey","components","privacyLink","Anchor","href","uniswapUrls","privacyPolicyUrl","target","textDecorationLine","fontSize","Checkbox","checked","onCheckedChange","Button","emphasis","onPress"],"sourceRoot":""}