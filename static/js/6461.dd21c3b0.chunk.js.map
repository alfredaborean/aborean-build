{"version":3,"file":"static/js/6461.dd21c3b0.chunk.js","mappings":"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","sources":["../packages/uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery.ts","../packages/uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery.ts","../packages/uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery.ts","webpack://@uniswap/interface/./src/components/Liquidity/DepositInputForm.tsx?e717","webpack://@uniswap/interface/./src/components/IncreaseLiquidity/IncreaseLiquidityReview.tsx?e366","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityModalDetailRows.tsx?2b99","webpack://@uniswap/interface/./src/components/Liquidity/TokenInfo.tsx?c202","webpack://@uniswap/interface/./src/pages/IncreaseLiquidity/IncreaseLiquidityForm.tsx?2d61","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityModalHeader.tsx?873b","components/Liquidity/DepositInputForm.tsx","components/Liquidity/LiquidityModalDetailRows.tsx","components/Liquidity/LiquidityModalHeader.tsx","components/Liquidity/TokenInfo.tsx","components/Liquidity/hooks/useDependentAmountFallback.ts","hooks/useV2Pairs.ts","components/IncreaseLiquidity/IncreaseLiquidityContext.tsx","components/IncreaseLiquidity/hooks.tsx","components/IncreaseLiquidity/IncreaseLiquidityTxContext.tsx","components/IncreaseLiquidity/IncreaseLiquidityReview.tsx","pages/IncreaseLiquidity/IncreaseLiquidityForm.tsx","pages/IncreaseLiquidity/IncreaseLiquidityModal.tsx","pages/Pool/Positions/create/hooks/useLPSlippageValues.ts"],"sourcesContent":["import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { checkLpApproval } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { CheckApprovalLPRequest, CheckApprovalLPResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useCheckLpApprovalQuery({\r\n  params,\r\n  headers,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<CheckApprovalLPRequest, CheckApprovalLPResponse> & {\r\n  headers?: Record<string, string>\r\n}): UseQueryResult<CheckApprovalLPResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.lpApproval, params]\r\n\r\n  return useQuery<CheckApprovalLPResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await checkLpApproval(params, headers)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { createLpPosition } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { getTradeSettingsDeadline } from 'uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { CreateLPPositionRequest, CreateLPPositionResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useCreateLpPositionCalldataQuery({\r\n  params,\r\n  deadlineInMinutes,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<CreateLPPositionRequest, CreateLPPositionResponse> & {\r\n  deadlineInMinutes?: number\r\n}): UseQueryResult<CreateLPPositionResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.createLp, params]\r\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes)\r\n  const paramsWithDeadline = { ...params, deadline }\r\n\r\n  return useQuery<CreateLPPositionResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await createLpPosition(paramsWithDeadline)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","import { UseQueryResult, useQuery } from '@tanstack/react-query'\r\nimport { uniswapUrls } from 'uniswap/src/constants/urls'\r\nimport { increaseLpPosition } from 'uniswap/src/data/apiClients/tradingApi/TradingApiClient'\r\nimport { getTradeSettingsDeadline } from 'uniswap/src/data/apiClients/tradingApi/utils/getTradeSettingsDeadline'\r\nimport { UseQueryApiHelperHookArgs } from 'uniswap/src/data/apiClients/types'\r\nimport { IncreaseLPPositionRequest, IncreaseLPPositionResponse } from 'uniswap/src/data/tradingApi/__generated__'\r\nimport { ReactQueryCacheKey } from 'utilities/src/reactQuery/cache'\r\n\r\nexport function useIncreaseLpPositionCalldataQuery({\r\n  params,\r\n  deadlineInMinutes,\r\n  ...rest\r\n}: UseQueryApiHelperHookArgs<IncreaseLPPositionRequest, IncreaseLPPositionResponse> & {\r\n  deadlineInMinutes?: number\r\n}): UseQueryResult<IncreaseLPPositionResponse> {\r\n  const queryKey = [ReactQueryCacheKey.TradingApi, uniswapUrls.tradingApiPaths.increaseLp, params]\r\n\r\n  const deadline = getTradeSettingsDeadline(deadlineInMinutes)\r\n\r\n  const paramsWithDeadline = { ...params, deadline }\r\n  return useQuery<IncreaseLPPositionResponse>({\r\n    queryKey,\r\n    queryFn: async () => {\r\n      if (!params) {\r\n        throw { name: 'Params are required' }\r\n      }\r\n      return await increaseLpPosition(paramsWithDeadline)\r\n    },\r\n    ...rest,\r\n  })\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useTokenBalanceWithBuffer } from \"pages/Pool/Positions/create/hooks\";\nimport { useNativeTokenPercentageBufferExperiment } from \"pages/Pool/Positions/create/hooks/useNativeTokenPercentageBufferExperiment\";\nimport { useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { Flex } from \"ui/src\";\nimport { CurrencyInputPanel } from \"uniswap/src/components/CurrencyInputPanel/CurrencyInputPanel\";\nimport { CurrencyField } from \"uniswap/src/types/currency\";\nfunction UnderCardComponent({ children }) {\n  return <Flex\n    backgroundColor=\"$surface2\"\n    borderBottomLeftRadius=\"$rounded20\"\n    borderBottomRightRadius=\"$rounded20\"\n    py=\"$spacing8\"\n    px=\"$spacing16\"\n  >\r\n      {children}\r\n    </Flex>;\n}\nexport function DepositInputForm({\n  token0,\n  token1,\n  currencyAmounts,\n  currencyBalances,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  onUserInput,\n  onSetMax,\n  deposit0Disabled,\n  deposit1Disabled,\n  token0UnderCardComponent,\n  token1UnderCardComponent,\n  amount0Loading,\n  amount1Loading,\n  autofocus = true\n}) {\n  const bufferPercentage = useNativeTokenPercentageBufferExperiment();\n  const [focusedInputField, setFocusedInputField] = useState(autofocus ? PositionField.TOKEN0 : void 0);\n  const token0BalanceWithBuffer = useTokenBalanceWithBuffer(currencyBalances?.[PositionField.TOKEN0], bufferPercentage);\n  const token1BalanceWithBuffer = useTokenBalanceWithBuffer(currencyBalances?.[PositionField.TOKEN1], bufferPercentage);\n  const token0CurrencyInfo = useCurrencyInfo(token0);\n  const token1CurrencyInfo = useCurrencyInfo(token1);\n  const handleUserInput = (field) => {\n    return (newValue) => {\n      onUserInput(field, newValue);\n    };\n  };\n  const handleOnSetMax = (field) => {\n    return (amount) => {\n      setFocusedInputField(field);\n      onSetMax(field, amount);\n    };\n  };\n  return <Flex gap=\"$gap4\">\r\n      {!deposit0Disabled && <Flex gap={2}>\r\n          <CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN0}\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token0UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token0CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN0]}\n    currencyBalance={token0BalanceWithBuffer}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN0)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN0]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN0)}\n    value={formattedAmounts?.[PositionField.TOKEN0]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN0)}\n    isLoading={amount0Loading}\n  />\r\n          {token0UnderCardComponent && <UnderCardComponent>{token0UnderCardComponent}</UnderCardComponent>}\r\n        </Flex>}\r\n      {!deposit1Disabled && <Flex gap={2}>\r\n          <CurrencyInputPanel\n    focus={focusedInputField === PositionField.TOKEN1}\n    py=\"$spacing16\"\n    borderTopLeftRadius=\"$rounded20\"\n    borderTopRightRadius=\"$rounded20\"\n    borderBottomLeftRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    borderBottomRightRadius={token1UnderCardComponent ? \"$rounded0\" : \"$rounded20\"}\n    backgroundColor=\"$surface2\"\n    currencyInfo={token1CurrencyInfo}\n    currencyField={CurrencyField.INPUT}\n    currencyAmount={currencyAmounts?.[PositionField.TOKEN1]}\n    currencyBalance={token1BalanceWithBuffer}\n    onSetExactAmount={handleUserInput(PositionField.TOKEN1)}\n    onToggleIsFiatMode={() => void 0}\n    usdValue={currencyAmountsUSDValue?.[PositionField.TOKEN1]}\n    onSetPresetValue={handleOnSetMax(PositionField.TOKEN1)}\n    value={formattedAmounts?.[PositionField.TOKEN1]}\n    onPressIn={() => setFocusedInputField(PositionField.TOKEN1)}\n    isLoading={amount1Loading}\n  />\r\n          {token1UnderCardComponent && <UnderCardComponent>{token1UnderCardComponent}</UnderCardComponent>}\r\n        </Flex>}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityModalDetailRows({\n  currency0Amount,\n  currency1Amount,\n  networkCost\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const currency0Info = useCurrencyInfo(currency0Amount?.currency);\n  const currency1Info = useCurrencyInfo(currency1Amount?.currency);\n  return <Flex px=\"$padding16\" gap=\"$gap8\">\r\n      <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n              <Trans i18nKey=\"pool.specificPosition\" values={{ symbol: currency0Amount?.currency.symbol }} />\r\n            </Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n              <CurrencyLogo currencyInfo={currency0Info} size={iconSizes.icon16} />\r\n              <Text variant=\"body3\" color=\"$neutral1\">\r\n                {formatCurrencyAmount({ value: currency0Amount, type: NumberType.TokenNonTx })}{\" \"}\r\n                {currency0Amount?.currency.symbol}\r\n              </Text>\r\n            </Flex>\n    }}\n  />\r\n      <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n              <Trans i18nKey=\"pool.specificPosition\" values={{ symbol: currency1Amount?.currency.symbol }} />\r\n            </Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n              <CurrencyLogo currencyInfo={currency1Info} size={iconSizes.icon16} />\r\n              <Text variant=\"body3\" color=\"$neutral1\">\r\n                {formatCurrencyAmount({ value: currency1Amount, type: NumberType.TokenNonTx })}{\" \"}\r\n                {currency1Amount?.currency.symbol}\r\n              </Text>\r\n            </Flex>\n    }}\n  />\r\n      {Boolean(networkCost) && !!currency0Amount && <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                <Trans i18nKey=\"common.networkCost\" />\r\n              </Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n                <NetworkLogo chainId={currency0Amount.currency.chainId} size={iconSizes.icon16} shape=\"square\" />\r\n                <Text variant=\"body3\" color=\"$neutral1\">\r\n                  {formatCurrencyAmount({ value: networkCost, type: NumberType.FiatGasPrice })}\r\n                </Text>\r\n              </Flex>\n    }}\n  />}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, ModalCloseIcon, Text, TouchableArea } from \"ui/src\";\nimport { BackArrow } from \"ui/src/components/icons/BackArrow\";\nimport { SwapFormSettings } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/SwapFormSettings\";\nimport { Deadline } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/settingsConfigurations/Deadline/Deadline\";\nimport { Slippage } from \"uniswap/src/features/transactions/swap/form/header/SwapFormSettings/settingsConfigurations/Slippage/Slippage\";\nexport function LiquidityModalHeader({\n  title,\n  closeModal,\n  goBack\n}) {\n  const { t } = useTranslation();\n  const CloseIconComponent = useMemo(\n    () => <ModalCloseIcon testId=\"LiquidityModalHeader-close\" onClose={closeModal} />,\n    [closeModal]\n  );\n  return <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$spacing4\" width=\"100%\">\r\n      {goBack ? <TouchableArea onPress={goBack}>\r\n          <BackArrow color=\"$neutral1\" size=\"$icon.24\" />\r\n        </TouchableArea> : CloseIconComponent}\r\n      <Text variant=\"body2\" flexGrow={1} textAlign=\"center\" pr={24}>\r\n        {title}\r\n      </Text>\r\n      {!goBack ? <SwapFormSettings\n    adjustTopAlignment={false}\n    settings={[Slippage, Deadline]}\n    defaultTitle={t(\"pool.positions.transaction.settings\")}\n  /> : <Flex position=\"absolute\" top=\"0\" right=\"0\" p=\"$spacing4\">\r\n          {CloseIconComponent}\r\n        </Flex>}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { getCurrencyForProtocol } from \"pages/Pool/Positions/create/utils\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { getSymbolDisplayText } from \"uniswap/src/utils/currency\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function TokenInfo({\n  currencyAmount,\n  currencyUSDAmount,\n  isMigrating = false\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const currency = isMigrating ? getCurrencyForProtocol(currencyAmount?.currency, ProtocolVersion.V4) : currencyAmount?.currency;\n  return <Flex row alignItems=\"center\">\r\n      <Flex grow>\r\n        <Text variant=\"heading2\">\r\n          {formatCurrencyAmount({\n    value: currencyAmount,\n    type: NumberType.TokenNonTx\n  })}{\" \"}\r\n          {getSymbolDisplayText(currency?.symbol)}\r\n        </Text>\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {formatCurrencyAmount({\n    value: currencyUSDAmount,\n    type: NumberType.FiatStandard\n  })}\r\n        </Text>\r\n      </Flex>\r\n      <CurrencyLogo currency={currency} size={iconSizes.icon36} />\r\n    </Flex>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useCreateLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useCreateLpPositionCalldataQuery\";\nimport { useIncreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nexport function useIncreasePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useIncreaseLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useCreatePositionDependentAmountFallback(queryParams, isQueryEnabled) {\n  const [hasErrorResponse, setHasErrorResponse] = useState(false);\n  const { data, error } = useCreateLpPositionCalldataQuery({\n    params: {\n      ...queryParams,\n      simulateTransaction: false\n    },\n    refetchInterval: hasErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled && queryParams?.simulateTransaction\n  });\n  useEffect(() => {\n    setHasErrorResponse(!!error);\n  }, [error, queryParams]);\n  return data?.dependentAmount;\n}\nexport function useUpdatedAmountsFromDependentAmount({\n  token0,\n  token1,\n  dependentAmount,\n  exactField,\n  currencyAmounts,\n  currencyAmountsUSDValue,\n  formattedAmounts,\n  deposit0Disabled,\n  deposit1Disabled\n}) {\n  const dependentAmount0 = dependentAmount && exactField === PositionField.TOKEN1 && token0 ? CurrencyAmount.fromRawAmount(token0, dependentAmount) : void 0;\n  const dependentAmount0USDValue = useUSDCValue(dependentAmount0) ?? void 0;\n  const dependentAmount1 = dependentAmount && exactField === PositionField.TOKEN0 && token1 ? CurrencyAmount.fromRawAmount(token1, dependentAmount) : void 0;\n  const dependentAmount1USDValue = useUSDCValue(dependentAmount1) ?? void 0;\n  return useMemo(() => {\n    if (dependentAmount0) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN0: dependentAmount0?.toExact() ?? formattedAmounts?.TOKEN0\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN0: dependentAmount0USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN0: dependentAmount0 ?? currencyAmounts?.TOKEN0\n        },\n        updatedDeposit0Disabled: !dependentAmount0.greaterThan(0),\n        updatedDeposit1Disabled: deposit1Disabled\n      };\n    } else if (dependentAmount1) {\n      return {\n        updatedFormattedAmounts: {\n          ...formattedAmounts,\n          TOKEN1: dependentAmount1?.toExact() ?? formattedAmounts?.TOKEN1\n        },\n        updatedUSDAmounts: {\n          ...currencyAmountsUSDValue,\n          TOKEN1: dependentAmount1USDValue\n        },\n        updatedCurrencyAmounts: {\n          ...currencyAmounts,\n          TOKEN1: dependentAmount1 ?? currencyAmounts?.TOKEN1\n        },\n        updatedDeposit0Disabled: deposit0Disabled,\n        updatedDeposit1Disabled: !dependentAmount1.greaterThan(0)\n      };\n    }\n    return {\n      updatedFormattedAmounts: formattedAmounts,\n      updatedUSDAmounts: currencyAmountsUSDValue,\n      updatedCurrencyAmounts: currencyAmounts,\n      updatedDeposit0Disabled: deposit0Disabled,\n      updatedDeposit1Disabled: deposit1Disabled\n    };\n  }, [\n    dependentAmount0,\n    dependentAmount0USDValue,\n    dependentAmount1,\n    dependentAmount1USDValue,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled,\n    deposit1Disabled\n  ]);\n}\n","\"use strict\";\nimport { CurrencyAmount, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pair, computePairAddress } from \"@uniswap/v2-sdk\";\nimport { useMemo } from \"react\";\nimport { assume0xAddress } from \"utils/wagmi\";\nimport { useReadContracts } from \"wagmi\";\nexport var PairState = /* @__PURE__ */ ((PairState2) => {\n  PairState2[PairState2[\"LOADING\"] = 0] = \"LOADING\";\n  PairState2[PairState2[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PairState2[PairState2[\"EXISTS\"] = 2] = \"EXISTS\";\n  PairState2[PairState2[\"INVALID\"] = 3] = \"INVALID\";\n  return PairState2;\n})(PairState || {});\nexport function useV2Pairs(currencies) {\n  const chainId = currencies[0]?.[0]?.chainId;\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  );\n  const pairAddresses = useMemo(\n    () => tokens.map(([tokenA, tokenB]) => {\n      return tokenA && tokenB && tokenA.chainId === tokenB.chainId && !tokenA.equals(tokenB) && V2_FACTORY_ADDRESSES[tokenA.chainId] ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB }) : void 0;\n    }),\n    [tokens]\n  );\n  const { data, isLoading } = useReadContracts({\n    contracts: useMemo(() => {\n      return pairAddresses.map(\n        (pairAddress) => ({\n          address: assume0xAddress(pairAddress) ?? \"0x\",\n          // Edge case: if an address is undefined, we pass in a blank address to keep the result array the same length as pairAddresses\n          abi: [\n            {\n              constant: true,\n              inputs: [],\n              name: \"getReserves\",\n              outputs: [\n                {\n                  internalType: \"uint112\",\n                  name: \"reserve0\",\n                  type: \"uint112\"\n                },\n                {\n                  internalType: \"uint112\",\n                  name: \"reserve1\",\n                  type: \"uint112\"\n                },\n                {\n                  internalType: \"uint32\",\n                  name: \"blockTimestampLast\",\n                  type: \"uint32\"\n                }\n              ],\n              payable: false,\n              stateMutability: \"view\",\n              type: \"function\"\n            }\n          ],\n          functionName: \"getReserves\",\n          chainId\n        })\n      );\n    }, [pairAddresses, chainId])\n  });\n  return useMemo(() => {\n    if (isLoading) {\n      return Array.from({ length: pairAddresses.length }, () => [0 /* LOADING */, null]);\n    }\n    return data?.map(({ result }, i) => {\n      const tokenA = tokens[i][0];\n      const tokenB = tokens[i][1];\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) {\n        return [3 /* INVALID */, null];\n      }\n      if (!result) {\n        return [1 /* NOT_EXISTS */, null];\n      }\n      const [reserve0, reserve1] = result;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n      return [\n        2 /* EXISTS */,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        )\n      ];\n    }) ?? [];\n  }, [data, isLoading, pairAddresses.length, tokens]);\n}\nexport function useV2Pair(tokenA, tokenB) {\n  const inputs = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB]);\n  return useV2Pairs(inputs)[0];\n}\n","\"use strict\";\nimport { useDerivedIncreaseLiquidityInfo } from \"components/IncreaseLiquidity/hooks\";\nimport { useModalLiquidityInitialState } from \"components/Liquidity/hooks\";\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nexport var IncreaseLiquidityStep = /* @__PURE__ */ ((IncreaseLiquidityStep2) => {\n  IncreaseLiquidityStep2[IncreaseLiquidityStep2[\"Input\"] = 0] = \"Input\";\n  IncreaseLiquidityStep2[IncreaseLiquidityStep2[\"Review\"] = 1] = \"Review\";\n  return IncreaseLiquidityStep2;\n})(IncreaseLiquidityStep || {});\nconst DEFAULT_INCREASE_LIQUIDITY_STATE = {\n  step: 0 /* Input */,\n  exactField: PositionField.TOKEN0\n};\nconst IncreaseLiquidityContext = createContext({\n  step: 0 /* Input */,\n  setStep: () => void 0,\n  increaseLiquidityState: DEFAULT_INCREASE_LIQUIDITY_STATE,\n  derivedIncreaseLiquidityInfo: {},\n  setIncreaseLiquidityState: () => void 0,\n  unwrapNativeCurrency: true,\n  setUnwrapNativeCurrency: () => void 0,\n  currentTransactionStep: void 0,\n  setCurrentTransactionStep: () => void 0\n});\nexport function useIncreaseLiquidityContext() {\n  return useContext(IncreaseLiquidityContext);\n}\nexport function IncreaseLiquidityContextProvider({ children }) {\n  const positionInfo = useModalLiquidityInitialState();\n  const [step, setStep] = useState(0 /* Input */);\n  const [unwrapNativeCurrency, setUnwrapNativeCurrency] = useState(true);\n  const [increaseLiquidityState, setIncreaseLiquidityState] = useState({\n    ...DEFAULT_INCREASE_LIQUIDITY_STATE,\n    position: positionInfo\n  });\n  const [currentTransactionStep, setCurrentTransactionStep] = useState();\n  const derivedIncreaseLiquidityInfo = useDerivedIncreaseLiquidityInfo(increaseLiquidityState, unwrapNativeCurrency);\n  const value = useMemo(\n    () => ({\n      step,\n      setStep,\n      increaseLiquidityState,\n      setIncreaseLiquidityState,\n      derivedIncreaseLiquidityInfo,\n      unwrapNativeCurrency,\n      setUnwrapNativeCurrency,\n      currentTransactionStep,\n      setCurrentTransactionStep\n    }),\n    [increaseLiquidityState, derivedIncreaseLiquidityInfo, step, unwrapNativeCurrency, currentTransactionStep]\n  );\n  return <IncreaseLiquidityContext.Provider value={value}>{children}</IncreaseLiquidityContext.Provider>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useDepositInfo } from \"pages/Pool/Positions/create/hooks\";\nimport { getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nexport function useDerivedIncreaseLiquidityInfo(state, unwrapNativeCurrency) {\n  const account = useAccount();\n  const { position: positionInfo, exactAmount, exactField } = state;\n  if (!positionInfo) {\n    throw new Error(\"no position available\");\n  }\n  const currency0 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo.currency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo.version !== ProtocolVersion.V4\n  });\n  const currency1 = getCurrencyWithOptionalUnwrap({\n    currency: positionInfo.currency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && positionInfo.version !== ProtocolVersion.V4\n  });\n  const depositInfoProps = useMemo(() => {\n    if (positionInfo.version === ProtocolVersion.V2) {\n      return {\n        protocolVersion: ProtocolVersion.V2,\n        pair: positionInfo.pair,\n        address: account.address,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled: false,\n        deposit1Disabled: false\n      };\n    }\n    const { tickLower: tickLowerStr, tickUpper: tickUpperStr } = positionInfo;\n    const tickLower = tickLowerStr ? parseInt(tickLowerStr) : void 0;\n    const tickUpper = tickUpperStr ? parseInt(tickUpperStr) : void 0;\n    const deposit0Disabled = Boolean(tickUpper && positionInfo.pool && positionInfo.pool.tickCurrent >= tickUpper);\n    const deposit1Disabled = Boolean(tickLower && positionInfo.pool && positionInfo.pool.tickCurrent <= tickLower);\n    if (positionInfo.version === ProtocolVersion.V3) {\n      return {\n        protocolVersion: ProtocolVersion.V3,\n        pool: positionInfo.pool,\n        address: account.address,\n        tickLower,\n        tickUpper,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled,\n        deposit1Disabled\n      };\n    }\n    if (positionInfo.version === ProtocolVersion.V4) {\n      return {\n        protocolVersion: ProtocolVersion.V4,\n        pool: positionInfo.pool,\n        address: account.address,\n        tickLower,\n        tickUpper,\n        token0: currency0,\n        token1: currency1,\n        exactField,\n        exactAmounts: {\n          [exactField]: exactAmount\n        },\n        deposit0Disabled,\n        deposit1Disabled\n      };\n    }\n    return {\n      protocolVersion: ProtocolVersion.UNSPECIFIED,\n      exactField,\n      exactAmounts: {}\n    };\n  }, [account.address, exactAmount, exactField, positionInfo, currency0, currency1]);\n  const depositInfo = useDepositInfo(depositInfoProps);\n  return useMemo(\n    () => ({\n      ...depositInfo,\n      deposit0Disabled: depositInfoProps.deposit0Disabled,\n      deposit1Disabled: depositInfoProps.deposit1Disabled\n    }),\n    [depositInfo, depositInfoProps.deposit0Disabled, depositInfoProps.deposit1Disabled]\n  );\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useIncreaseLiquidityContext } from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useModalLiquidityInitialState } from \"components/Liquidity/hooks\";\nimport { useIncreasePositionDependentAmountFallback } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { getProtocolItems, hasLPFoTTransferError } from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { getCurrencyAddressForTradingApi } from \"pages/Pool/Positions/create/utils\";\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { useUniswapContext } from \"uniswap/src/contexts/UniswapContext\";\nimport { useCheckLpApprovalQuery } from \"uniswap/src/data/apiClients/tradingApi/useCheckLpApprovalQuery\";\nimport { useIncreaseLpPositionCalldataQuery } from \"uniswap/src/data/apiClients/tradingApi/useIncreaseLpPositionCalldataQuery\";\nimport {\n  IndependentToken\n} from \"uniswap/src/data/tradingApi/__generated__\";\nimport { toSupportedChainId } from \"uniswap/src/features/chains/utils\";\nimport { useTransactionGasFee, useUSDCurrencyAmountOfGasFee } from \"uniswap/src/features/gas/hooks\";\nimport { InterfaceEventNameLocal } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport {\n  LiquidityTransactionType\n} from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getErrorMessageToDisplay, parseErrorMessageTitle } from \"uniswap/src/features/transactions/liquidity/utils\";\nimport { useTransactionSettingsContext } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionStepType } from \"uniswap/src/features/transactions/steps/types\";\nimport { PermitMethod } from \"uniswap/src/features/transactions/swap/types/swapTxAndGasInfo\";\nimport { validatePermit, validateTransactionRequest } from \"uniswap/src/features/transactions/swap/utils/trade\";\nimport { currencyId } from \"uniswap/src/utils/currencyId\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { ONE_SECOND_MS } from \"utilities/src/time/time\";\nimport { useAccount } from \"wagmi\";\nconst IncreaseLiquidityTxContext = createContext(void 0);\nexport function IncreaseLiquidityTxContextProvider({ children }) {\n  const positionInfo = useModalLiquidityInitialState();\n  const { derivedIncreaseLiquidityInfo, increaseLiquidityState, currentTransactionStep } = useIncreaseLiquidityContext();\n  const { customDeadline, customSlippageTolerance } = useTransactionSettingsContext();\n  const [hasIncreaseErrorResponse, setHasIncreaseErrorResponse] = useState(false);\n  const generatePermitAsTransaction = useUniswapContext().getGeneratePermitAsTransaction?.(positionInfo?.chainId);\n  const { currencyAmounts, error } = derivedIncreaseLiquidityInfo;\n  const { exactField } = increaseLiquidityState;\n  const account = useAccount();\n  const increaseLiquidityApprovalParams = useMemo(() => {\n    if (!positionInfo || !account.address || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    return {\n      simulateTransaction: true,\n      walletAddress: account.address,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      protocol: getProtocolItems(positionInfo.version),\n      token0: getCurrencyAddressForTradingApi(positionInfo.currency0Amount.currency),\n      token1: getCurrencyAddressForTradingApi(positionInfo.currency1Amount.currency),\n      amount0: currencyAmounts?.TOKEN0?.quotient.toString(),\n      amount1: currencyAmounts?.TOKEN1?.quotient.toString(),\n      generatePermitAsTransaction: positionInfo.version === ProtocolVersion.V4 ? generatePermitAsTransaction : void 0\n    };\n  }, [positionInfo, account.address, currencyAmounts, generatePermitAsTransaction]);\n  const {\n    data: increaseLiquidityTokenApprovals,\n    isLoading: approvalLoading,\n    error: approvalError,\n    refetch: approvalRefetch\n  } = useCheckLpApprovalQuery({\n    params: increaseLiquidityApprovalParams,\n    staleTime: 5 * ONE_SECOND_MS,\n    enabled: !!increaseLiquidityApprovalParams && !error\n  });\n  if (approvalError) {\n    const message = parseErrorMessageTitle(approvalError, { defaultTitle: \"unknown CheckLpApprovalQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"IncreaseLiquidityTxContext\",\n        function: \"useEffect\"\n      }\n    });\n  }\n  const {\n    token0Approval,\n    token1Approval,\n    positionTokenApproval,\n    permitData,\n    gasFeeToken0Approval,\n    gasFeeToken1Approval,\n    gasFeePositionTokenApproval,\n    token0Cancel,\n    token1Cancel,\n    token0PermitTransaction,\n    token1PermitTransaction,\n    gasFeeToken0Permit,\n    gasFeeToken1Permit\n  } = increaseLiquidityTokenApprovals ?? {};\n  const gasFeeToken0USD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency0Amount.currency.chainId,\n    gasFeeToken0Approval\n  );\n  const gasFeeToken1USD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency1Amount.currency.chainId,\n    gasFeeToken1Approval\n  );\n  const gasFeeLiquidityTokenUSD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.liquidityToken?.chainId,\n    gasFeePositionTokenApproval\n  );\n  const gasFeeToken0PermitUSD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency1Amount.currency.chainId,\n    gasFeeToken0Permit\n  );\n  const gasFeeToken1PermitUSD = useUSDCurrencyAmountOfGasFee(\n    positionInfo?.currency1Amount.currency.chainId,\n    gasFeeToken1Permit\n  );\n  const approvalsNeeded = !approvalLoading && Boolean(\n    permitData || token0Approval || token1Approval || positionTokenApproval || token0PermitTransaction || token1PermitTransaction\n  );\n  const increaseCalldataQueryParams = useMemo(() => {\n    const apiProtocolItems = getProtocolItems(positionInfo?.version);\n    if (!positionInfo || !account.address || !apiProtocolItems || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const token0 = currencyAmounts.TOKEN0.currency;\n    const token1 = currencyAmounts.TOKEN1.currency;\n    const amount0 = currencyAmounts.TOKEN0.quotient.toString();\n    const amount1 = currencyAmounts.TOKEN1.quotient.toString();\n    const [independentAmount, dependentAmount2] = exactField === PositionField.TOKEN0 ? [amount0, amount1] : [amount1, amount0];\n    const independentToken = exactField === PositionField.TOKEN0 ? IndependentToken.TOKEN_0 : IndependentToken.TOKEN_1;\n    return {\n      simulateTransaction: !approvalsNeeded,\n      protocol: apiProtocolItems,\n      tokenId: positionInfo.tokenId ? Number(positionInfo.tokenId) : void 0,\n      walletAddress: account.address,\n      chainId: positionInfo.currency0Amount.currency.chainId,\n      independentAmount,\n      independentToken,\n      defaultDependentAmount: positionInfo.version === ProtocolVersion.V2 ? dependentAmount2 : void 0,\n      position: {\n        tickLower: positionInfo.tickLower ? Number(positionInfo.tickLower) : void 0,\n        tickUpper: positionInfo.tickUpper ? Number(positionInfo.tickUpper) : void 0,\n        pool: {\n          token0: token0.isNative ? ZERO_ADDRESS : token0.address,\n          token1: token1.isNative ? ZERO_ADDRESS : token1.address,\n          fee: positionInfo.feeTier ? Number(positionInfo.feeTier) : void 0,\n          tickSpacing: positionInfo.tickSpacing ? Number(positionInfo.tickSpacing) : void 0,\n          hooks: positionInfo.v4hook\n        }\n      },\n      slippageTolerance: customSlippageTolerance\n    };\n  }, [account, positionInfo, currencyAmounts, approvalsNeeded, customSlippageTolerance, exactField]);\n  const currency0Info = useCurrencyInfo(currencyId(positionInfo?.currency0Amount.currency));\n  const currency1Info = useCurrencyInfo(currencyId(positionInfo?.currency1Amount.currency));\n  const token0FoTError = hasLPFoTTransferError(currency0Info, positionInfo?.version);\n  const token1FoTError = hasLPFoTTransferError(currency1Info, positionInfo?.version);\n  const fotErrorToken = token0FoTError || token1FoTError;\n  const isUserCommittedToIncrease = currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransaction || currentTransactionStep?.step.type === TransactionStepType.IncreasePositionTransactionAsync;\n  const isQueryEnabled = !isUserCommittedToIncrease && !error && !approvalLoading && !approvalError && Boolean(increaseCalldataQueryParams) && !fotErrorToken;\n  const {\n    data: increaseCalldata,\n    isLoading: isCalldataLoading,\n    error: calldataError,\n    refetch: calldataRefetch\n  } = useIncreaseLpPositionCalldataQuery({\n    params: increaseCalldataQueryParams,\n    deadlineInMinutes: customDeadline,\n    refetchInterval: hasIncreaseErrorResponse ? false : 5 * ONE_SECOND_MS,\n    retry: false,\n    enabled: isQueryEnabled\n  });\n  useEffect(() => {\n    setHasIncreaseErrorResponse(!!calldataError);\n  }, [calldataError, increaseCalldataQueryParams]);\n  const { increase, gasFee: actualGasFee, dependentAmount } = increaseCalldata || {};\n  if (calldataError) {\n    const message = parseErrorMessageTitle(calldataError, { defaultTitle: \"unknown IncreaseLpPositionCalldataQuery\" });\n    logger.error(message, {\n      tags: {\n        file: \"IncreaseLiquidityTxContext\",\n        function: \"useEffect\"\n      }\n    });\n    sendAnalyticsEvent(InterfaceEventNameLocal.IncreaseLiquidityFailed, {\n      message\n    });\n  }\n  const fallbackDependentAmount = useIncreasePositionDependentAmountFallback(\n    increaseCalldataQueryParams,\n    isQueryEnabled && Boolean(calldataError)\n  );\n  const { value: calculatedGasFee } = useTransactionGasFee(increase, !!actualGasFee);\n  const increaseGasFeeUsd = useUSDCurrencyAmountOfGasFee(\n    toSupportedChainId(increaseCalldata?.increase?.chainId) ?? void 0,\n    actualGasFee || calculatedGasFee\n  );\n  const increaseLiquidityTxContext = useMemo(() => {\n    if (!positionInfo || approvalLoading || isCalldataLoading || !increaseCalldata || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const approveToken0Request = validateTransactionRequest(token0Approval);\n    const approveToken1Request = validateTransactionRequest(token1Approval);\n    const approvePositionTokenRequest = validateTransactionRequest(positionTokenApproval);\n    const revokeToken0Request = validateTransactionRequest(token0Cancel);\n    const revokeToken1Request = validateTransactionRequest(token1Cancel);\n    const permit = validatePermit(permitData);\n    const unsigned = Boolean(permitData);\n    const txRequest = validateTransactionRequest(increase);\n    const validatedToken0PermitTx = validateTransactionRequest(token0PermitTransaction);\n    const validatedToken1PermitTx = validateTransactionRequest(token1PermitTransaction);\n    return {\n      type: LiquidityTransactionType.Increase,\n      protocolVersion: positionInfo?.version,\n      action: {\n        type: LiquidityTransactionType.Increase,\n        currency0Amount: currencyAmounts?.TOKEN0,\n        currency1Amount: currencyAmounts?.TOKEN1,\n        liquidityToken: positionInfo.liquidityToken\n      },\n      approveToken0Request,\n      approveToken1Request,\n      approvePositionTokenRequest,\n      revokeToken0Request,\n      revokeToken1Request,\n      permit: permit ? { method: PermitMethod.TypedData, typedData: permit } : void 0,\n      // TODO: make a PermitMethod.Transaction one if we get them from BE\n      token0PermitTransaction: validatedToken0PermitTx,\n      token1PermitTransaction: validatedToken1PermitTx,\n      increasePositionRequestArgs: { ...increaseCalldataQueryParams, batchPermitData: permitData ?? void 0 },\n      txRequest,\n      unsigned\n    };\n  }, [\n    positionInfo,\n    approvalLoading,\n    isCalldataLoading,\n    increaseCalldata,\n    currencyAmounts?.TOKEN0,\n    currencyAmounts?.TOKEN1,\n    token0Approval,\n    token1Approval,\n    positionTokenApproval,\n    token0Cancel,\n    token1Cancel,\n    permitData,\n    increase,\n    token0PermitTransaction,\n    token1PermitTransaction,\n    increaseCalldataQueryParams\n  ]);\n  const totalGasFee = useMemo(() => {\n    const fees = [\n      gasFeeToken0USD,\n      gasFeeToken1USD,\n      gasFeeLiquidityTokenUSD,\n      increaseGasFeeUsd,\n      gasFeeToken0PermitUSD,\n      gasFeeToken1PermitUSD\n    ];\n    return fees.reduce((total, fee) => {\n      if (fee && total) {\n        return total.add(fee);\n      }\n      return total || fee;\n    });\n  }, [\n    gasFeeToken0USD,\n    gasFeeToken1USD,\n    gasFeeLiquidityTokenUSD,\n    increaseGasFeeUsd,\n    gasFeeToken0PermitUSD,\n    gasFeeToken1PermitUSD\n  ]);\n  const value = {\n    txInfo: increaseLiquidityTxContext,\n    gasFeeEstimateUSD: totalGasFee ?? void 0,\n    // in some cases there is an error with create but createCalldata still has a cached value\n    dependentAmount: calldataError && dependentAmount ? dependentAmount : fallbackDependentAmount,\n    error: getErrorMessageToDisplay({ approvalError, calldataError }),\n    refetch: approvalError ? approvalRefetch : calldataError ? calldataRefetch : void 0,\n    fotErrorToken\n  };\n  return <IncreaseLiquidityTxContext.Provider value={value}>{children}</IncreaseLiquidityTxContext.Provider>;\n}\nexport const useIncreaseLiquidityTxContext = () => {\n  const increaseContext = useContext(IncreaseLiquidityTxContext);\n  if (!increaseContext) {\n    throw new Error(\"`useIncreaseLiquidityTxContext` must be used inside of `IncreaseLiquidityTxContextProvider`\");\n  }\n  return increaseContext;\n};\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { useIncreaseLiquidityContext } from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useIncreaseLiquidityTxContext } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { TokenInfo } from \"components/Liquidity/TokenInfo\";\nimport { getLPBaseAnalyticsProperties } from \"components/Liquidity/analytics\";\nimport { useGetPoolTokenPercentage, usePositionCurrentPrice } from \"components/Liquidity/hooks\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { DetailLineItem } from \"components/swap/DetailLineItem\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport { useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { liquiditySaga } from \"state/sagas/liquidity/liquiditySaga\";\nimport { Button, Flex, Separator, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { ProgressIndicator } from \"uniswap/src/components/ConfirmSwapModal/ProgressIndicator\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { useAccountMeta } from \"uniswap/src/contexts/UniswapContext\";\nimport { AccountType } from \"uniswap/src/features/accounts/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { isValidLiquidityTxContext } from \"uniswap/src/features/transactions/liquidity/types\";\nimport { getSymbolDisplayText } from \"uniswap/src/utils/currency\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nexport function IncreaseLiquidityReview({ onClose }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const selectChain = useSelectChain();\n  const startChainId = useAccount().chainId;\n  const account = useAccountMeta();\n  const trace = useTrace();\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const { derivedIncreaseLiquidityInfo, increaseLiquidityState, currentTransactionStep, setCurrentTransactionStep } = useIncreaseLiquidityContext();\n  const { txInfo, gasFeeEstimateUSD, dependentAmount } = useIncreaseLiquidityTxContext();\n  const { exactField } = increaseLiquidityState;\n  const { currencyAmounts, currencyAmountsUSDValue, deposit0Disabled, deposit1Disabled } = derivedIncreaseLiquidityInfo;\n  const { updatedCurrencyAmounts, updatedUSDAmounts } = useUpdatedAmountsFromDependentAmount({\n    token0: currencyAmounts?.TOKEN0?.currency,\n    token1: currencyAmounts?.TOKEN1?.currency,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    deposit0Disabled: deposit0Disabled || false,\n    deposit1Disabled: deposit1Disabled || false\n  });\n  const [steps, setSteps] = useState([]);\n  if (!increaseLiquidityState.position) {\n    throw new Error(\"a position must be defined\");\n  }\n  const { version, poolId, currency0Amount, currency1Amount, feeTier, chainId } = increaseLiquidityState.position;\n  const currentPrice = usePositionCurrentPrice(increaseLiquidityState.position);\n  const poolTokenPercentage = useGetPoolTokenPercentage(increaseLiquidityState.position);\n  const newToken0Amount = useMemo(() => {\n    if (!updatedCurrencyAmounts?.TOKEN0) {\n      return void 0;\n    }\n    const additionalToken0Amount = CurrencyAmount.fromRawAmount(\n      updatedCurrencyAmounts?.TOKEN0?.currency,\n      currency0Amount.quotient\n    );\n    return updatedCurrencyAmounts?.TOKEN0?.add(additionalToken0Amount);\n  }, [currency0Amount, updatedCurrencyAmounts?.TOKEN0]);\n  const newToken0AmountUSD = useUSDCValue(newToken0Amount);\n  const newToken1Amount = useMemo(() => {\n    if (!updatedCurrencyAmounts?.TOKEN1) {\n      return void 0;\n    }\n    const additionalToken1Amount = CurrencyAmount.fromRawAmount(\n      updatedCurrencyAmounts?.TOKEN1?.currency,\n      currency1Amount.quotient\n    );\n    return updatedCurrencyAmounts?.TOKEN1?.add(additionalToken1Amount);\n  }, [currency1Amount, updatedCurrencyAmounts?.TOKEN1]);\n  const newToken1AmountUSD = useUSDCValue(newToken1Amount);\n  const onFailure = () => {\n    setCurrentTransactionStep(void 0);\n  };\n  const onSuccess = () => {\n    setSteps([]);\n    setCurrentTransactionStep(void 0);\n    onClose();\n  };\n  const onIncreaseLiquidity = () => {\n    const isValidTx = isValidLiquidityTxContext(txInfo);\n    if (!account || account?.type !== AccountType.SignerMnemonic || !isValidTx || !increaseLiquidityState.position || !currencyAmounts?.TOKEN0 || !currencyAmounts.TOKEN1) {\n      return;\n    }\n    dispatch(\n      liquiditySaga.actions.trigger({\n        selectChain,\n        startChainId,\n        account,\n        liquidityTxContext: txInfo,\n        setCurrentStep: setCurrentTransactionStep,\n        setSteps,\n        onSuccess,\n        onFailure,\n        analytics: {\n          ...getLPBaseAnalyticsProperties({\n            trace,\n            fee: feeTier,\n            version,\n            poolId,\n            currency0: currencyAmounts?.TOKEN0?.currency,\n            currency1: currencyAmounts?.TOKEN1?.currency,\n            currency0AmountUsd: currencyAmountsUSDValue?.TOKEN0,\n            currency1AmountUsd: currencyAmountsUSDValue?.TOKEN1\n          }),\n          expectedAmountBaseRaw: currencyAmounts?.TOKEN0.quotient?.toString() ?? \"-\",\n          expectedAmountQuoteRaw: currencyAmounts?.TOKEN1.quotient?.toString() ?? \"-\",\n          createPosition: false\n        }\n      })\n    );\n  };\n  return <Flex gap=\"$gap12\">\r\n      <Flex gap=\"$gap16\" px=\"$padding16\" pt=\"$padding12\">\r\n        <TokenInfo currencyAmount={updatedCurrencyAmounts?.TOKEN0} currencyUSDAmount={updatedUSDAmounts?.TOKEN0} />\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {t(\"common.and\")}\r\n        </Text>\r\n        <TokenInfo currencyAmount={updatedCurrencyAmounts?.TOKEN1} currencyUSDAmount={updatedUSDAmounts?.TOKEN1} />\r\n      </Flex>\r\n      {currentTransactionStep ? <ProgressIndicator currentStep={currentTransactionStep} steps={steps} /> : <>\r\n          <Separator mx=\"$padding16\" />\r\n          <Flex gap=\"$gap8\" px=\"$padding16\" pb=\"$padding12\">\r\n            <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                    {t(\"common.rate\")}\r\n                  </Text>,\n      Value: () => <Text variant=\"body3\">{`1 ${currentPrice?.baseCurrency.symbol} = ${currentPrice?.toFixed()} ${currentPrice?.quoteCurrency.symbol}`}</Text>\n    }}\n  />\r\n            <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                    <Trans\n        i18nKey=\"pool.newSpecificPosition\"\n        values={{ symbol: currencyAmounts?.TOKEN0?.currency.symbol }}\n      />\r\n                  </Text>,\n      Value: () => <Flex row gap=\"$gap4\">\r\n                    <Text variant=\"body3\">\r\n                      {formatCurrencyAmount({ value: newToken0Amount, type: NumberType.TokenNonTx })}{\" \"}\r\n                      {getSymbolDisplayText(newToken0Amount?.currency.symbol)}\r\n                    </Text>\r\n                    <Text variant=\"body3\" color=\"$neutral2\">\r\n                      {`(${formatCurrencyAmount({ value: newToken0AmountUSD, type: NumberType.FiatStandard })})`}\r\n                    </Text>\r\n                  </Flex>\n    }}\n  />\r\n            <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                    <Trans\n        i18nKey=\"pool.newSpecificPosition\"\n        values={{ symbol: currencyAmounts?.TOKEN1?.currency.symbol }}\n      />\r\n                  </Text>,\n      Value: () => <Flex row gap=\"$gap4\">\r\n                    <Text variant=\"body3\">\r\n                      {formatCurrencyAmount({ value: newToken1Amount, type: NumberType.TokenNonTx })}{\" \"}\r\n                      {getSymbolDisplayText(newToken1Amount?.currency.symbol)}\r\n                    </Text>\r\n                    <Text variant=\"body3\" color=\"$neutral2\">\r\n                      {`(${formatCurrencyAmount({ value: newToken1AmountUSD, type: NumberType.FiatStandard })})`}\r\n                    </Text>\r\n                  </Flex>\n    }}\n  />\r\n            {poolTokenPercentage ? <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                      {t(\"addLiquidity.shareOfPool\")}\r\n                    </Text>,\n      Value: () => <Text>{formatPercent(poolTokenPercentage.toFixed())}</Text>\n    }}\n  /> : null}\r\n            <DetailLineItem\n    LineItem={{\n      Label: () => <Text variant=\"body3\" color=\"$neutral2\">\r\n                    {t(\"common.networkCost\")}\r\n                  </Text>,\n      Value: () => <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n                    <NetworkLogo chainId={chainId} size={iconSizes.icon16} shape=\"square\" />\r\n                    <Text variant=\"body3\">\r\n                      {formatCurrencyAmount({ value: gasFeeEstimateUSD, type: NumberType.FiatGasPrice })}\r\n                    </Text>\r\n                  </Flex>\n    }}\n  />\r\n          </Flex>\r\n          <Flex row>\r\n            <Button variant=\"branded\" size=\"large\" onPress={onIncreaseLiquidity}>\r\n              {t(\"common.confirm\")}\r\n            </Button>\r\n          </Flex>\r\n        </>}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { ErrorCallout } from \"components/ErrorCallout\";\nimport {\n  IncreaseLiquidityStep,\n  useIncreaseLiquidityContext\n} from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { useIncreaseLiquidityTxContext } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { DepositInputForm } from \"components/Liquidity/DepositInputForm\";\nimport { LiquidityModalDetailRows } from \"components/Liquidity/LiquidityModalDetailRows\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { useUpdatedAmountsFromDependentAmount } from \"components/Liquidity/hooks/useDependentAmountFallback\";\nimport { canUnwrapCurrency, getCurrencyWithOptionalUnwrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PositionField } from \"types/position\";\nimport { Button, Flex, Switch, Text } from \"ui/src\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nexport function IncreaseLiquidityForm() {\n  const { t } = useTranslation();\n  const {\n    setStep,\n    increaseLiquidityState,\n    derivedIncreaseLiquidityInfo,\n    setIncreaseLiquidityState,\n    unwrapNativeCurrency,\n    setUnwrapNativeCurrency\n  } = useIncreaseLiquidityContext();\n  const {\n    formattedAmounts,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    currencyBalances,\n    deposit0Disabled,\n    deposit1Disabled,\n    error\n  } = derivedIncreaseLiquidityInfo;\n  const { position, exactField } = increaseLiquidityState;\n  const {\n    gasFeeEstimateUSD,\n    txInfo,\n    error: dataFetchingError,\n    refetch,\n    dependentAmount,\n    fotErrorToken\n  } = useIncreaseLiquidityTxContext();\n  if (!position) {\n    throw new Error(\"AddLiquidityModal must have an initial state when opening\");\n  }\n  const { currency0Amount: initialCurrency0Amount, currency1Amount: initialCurrency1Amount } = position;\n  const canUnwrap0 = canUnwrapCurrency(initialCurrency0Amount.currency, position.version);\n  const canUnwrap1 = canUnwrapCurrency(initialCurrency1Amount.currency, position.version);\n  const token0 = getCurrencyWithOptionalUnwrap({\n    currency: initialCurrency0Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap0\n  });\n  const token1 = getCurrencyWithOptionalUnwrap({\n    currency: initialCurrency1Amount.currency,\n    shouldUnwrap: unwrapNativeCurrency && canUnwrap1\n  });\n  const nativeCurrency = nativeOnChain(position.chainId);\n  const currency0Amount = useMemo(() => {\n    if (unwrapNativeCurrency && canUnwrap0) {\n      return CurrencyAmount.fromRawAmount(token0, initialCurrency0Amount.quotient);\n    }\n    return initialCurrency0Amount;\n  }, [unwrapNativeCurrency, canUnwrap0, token0, initialCurrency0Amount]);\n  const currency1Amount = useMemo(() => {\n    if (unwrapNativeCurrency && canUnwrap1) {\n      return CurrencyAmount.fromRawAmount(token1, initialCurrency1Amount.quotient);\n    }\n    return initialCurrency1Amount;\n  }, [unwrapNativeCurrency, canUnwrap1, token1, initialCurrency1Amount]);\n  const { updatedFormattedAmounts, updatedUSDAmounts } = useUpdatedAmountsFromDependentAmount({\n    token0,\n    token1,\n    dependentAmount,\n    exactField,\n    currencyAmounts,\n    currencyAmountsUSDValue,\n    formattedAmounts,\n    deposit0Disabled: deposit0Disabled || false,\n    deposit1Disabled: deposit1Disabled || false\n  });\n  const handleUserInput = (field, newValue) => {\n    setIncreaseLiquidityState((prev) => ({\n      ...prev,\n      exactField: field,\n      exactAmount: newValue\n    }));\n  };\n  const handleOnSetMax = (field, amount) => {\n    setIncreaseLiquidityState((prev) => ({\n      ...prev,\n      exactField: field,\n      exactAmount: amount\n    }));\n  };\n  const handleOnContinue = () => {\n    if (!error) {\n      setStep(IncreaseLiquidityStep.Review);\n    }\n  };\n  const UnwrapNativeCurrencyToggle = useMemo(() => {\n    return <Flex row justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {t(\"pool.addAs\", { nativeWrappedSymbol: nativeCurrency.symbol })}\r\n        </Text>\r\n        <Switch\n      id=\"add-as-weth\"\n      checked={unwrapNativeCurrency}\n      onCheckedChange={() => setUnwrapNativeCurrency((unwrapNativeCurrency2) => !unwrapNativeCurrency2)}\n      variant=\"branded\"\n    />\r\n      </Flex>;\n  }, [nativeCurrency, t, unwrapNativeCurrency, setUnwrapNativeCurrency]);\n  const requestLoading = Boolean(\n    !dataFetchingError && !error && currencyAmounts?.TOKEN0 && currencyAmounts.TOKEN1 && !txInfo?.txRequest && !fotErrorToken\n  );\n  return <Flex gap=\"$gap24\">\r\n      <Flex gap=\"$gap24\">\r\n        <LiquidityPositionInfo positionInfo={position} />\r\n        <DepositInputForm\n    token0={token0}\n    token1={token1}\n    formattedAmounts={updatedFormattedAmounts}\n    currencyAmounts={currencyAmounts}\n    currencyAmountsUSDValue={updatedUSDAmounts}\n    currencyBalances={currencyBalances}\n    onUserInput={handleUserInput}\n    onSetMax={handleOnSetMax}\n    deposit0Disabled={deposit0Disabled}\n    deposit1Disabled={deposit1Disabled}\n    amount0Loading={requestLoading && exactField === PositionField.TOKEN1}\n    amount1Loading={requestLoading && exactField === PositionField.TOKEN0}\n    token0UnderCardComponent={canUnwrap0 ? UnwrapNativeCurrencyToggle : void 0}\n    token1UnderCardComponent={canUnwrap1 ? UnwrapNativeCurrencyToggle : void 0}\n  />\r\n      </Flex>\r\n      <LiquidityModalDetailRows\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    networkCost={gasFeeEstimateUSD}\n  />\r\n      {fotErrorToken && <ErrorCallout\n    errorMessage={true}\n    title={t(\"token.safety.warning.fotLow.title\")}\n    description={t(\"position.increase.fot\", { token: fotErrorToken.currency.symbol })}\n  />}\r\n      <ErrorCallout errorMessage={dataFetchingError} onPress={refetch} />\r\n      <Flex row>\r\n        <Button\n    isDisabled={Boolean(error) || !txInfo?.txRequest || Boolean(fotErrorToken)}\n    onPress={handleOnContinue}\n    loading={requestLoading}\n    variant=\"branded\"\n    key=\"LoaderButton-animation-IncreaseLiquidity-continue\"\n    size=\"large\"\n  >\r\n          {error || t(\"common.add.label\")}\r\n        </Button>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport {\n  IncreaseLiquidityContextProvider,\n  IncreaseLiquidityStep,\n  useIncreaseLiquidityContext\n} from \"components/IncreaseLiquidity/IncreaseLiquidityContext\";\nimport { IncreaseLiquidityReview } from \"components/IncreaseLiquidity/IncreaseLiquidityReview\";\nimport { IncreaseLiquidityTxContextProvider } from \"components/IncreaseLiquidity/IncreaseLiquidityTxContext\";\nimport { LiquidityModalHeader } from \"components/Liquidity/LiquidityModalHeader\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { IncreaseLiquidityForm } from \"pages/IncreaseLiquidity/IncreaseLiquidityForm\";\nimport { useLPSlippageValue } from \"pages/Pool/Positions/create/hooks/useLPSlippageValues\";\nimport { useTranslation } from \"react-i18next\";\nimport { HeightAnimator } from \"ui/src\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { TransactionSettingsContextProvider } from \"uniswap/src/features/transactions/settings/contexts/TransactionSettingsContext\";\nimport { TransactionSettingKey } from \"uniswap/src/features/transactions/settings/slice\";\nfunction IncreaseLiquidityModalInner() {\n  const { t } = useTranslation();\n  const { step, setStep, increaseLiquidityState } = useIncreaseLiquidityContext();\n  const { closeModal } = useModalState(ModalName.AddLiquidity);\n  const autoSlippageTolerance = useLPSlippageValue(\n    increaseLiquidityState.position?.version,\n    increaseLiquidityState.position?.currency0Amount.currency,\n    increaseLiquidityState.position?.currency1Amount.currency\n  );\n  let modalContent;\n  switch (step) {\n    case IncreaseLiquidityStep.Input:\n      modalContent = <IncreaseLiquidityForm />;\n      break;\n    case IncreaseLiquidityStep.Review:\n      modalContent = <IncreaseLiquidityReview onClose={closeModal} />;\n      break;\n  }\n  return <TransactionSettingsContextProvider\n    settingKey={TransactionSettingKey.LP}\n    autoSlippageTolerance={autoSlippageTolerance}\n  >\r\n      <IncreaseLiquidityTxContextProvider>\r\n        <Modal name={ModalName.AddLiquidity} onClose={closeModal} isDismissible gap=\"$gap24\" padding=\"$padding16\">\r\n          <LiquidityModalHeader\n    title={t(\"common.addLiquidity\")}\n    closeModal={closeModal}\n    goBack={step === IncreaseLiquidityStep.Review ? () => setStep(IncreaseLiquidityStep.Input) : void 0}\n  />\r\n          <HeightAnimator animation=\"fast\">{modalContent}</HeightAnimator>\r\n        </Modal>\r\n      </IncreaseLiquidityTxContextProvider>\r\n    </TransactionSettingsContextProvider>;\n}\nexport function IncreaseLiquidityModal() {\n  return <IncreaseLiquidityContextProvider>\r\n      <IncreaseLiquidityModalInner />\r\n    </IncreaseLiquidityContextProvider>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { LPConfigKey } from \"uniswap/src/features/gating/configs\";\nimport { DynamicConfigs } from \"uniswap/src/features/gating/configs\";\nimport { useDynamicConfigValue } from \"uniswap/src/features/gating/hooks\";\nexport function useLPSlippageValue(version, currencyA, currencyB) {\n  const defaultSlippage = useDynamicConfigValue(DynamicConfigs.LPConfig, LPConfigKey.DefaultSlippage, 2.5);\n  const v4SlippageOverride = useDynamicConfigValue(DynamicConfigs.LPConfig, LPConfigKey.V4SlippageOverride, 0.05);\n  const isNativePool = currencyA?.isNative || currencyB?.isNative;\n  if (version === ProtocolVersion.V4 && isNativePool) {\n    return v4SlippageOverride;\n  }\n  return defaultSlippage;\n}\n"],"names":["_ref","params","headers","rest","_objectWithoutProperties2","default","_excluded","queryKey","ReactQueryCacheKey","TradingApi","uniswapUrls","tradingApiPaths","lpApproval","useQuery","Object","assign","queryFn","_queryFn","_asyncToGenerator2","name","checkLpApproval","apply","arguments","_reactQuery","require","_urls","_TradingApiClient","_cache","deadlineInMinutes","createLp","deadline","getTradeSettingsDeadline","paramsWithDeadline","createLpPosition","_getTradeSettingsDeadline","increaseLp","increaseLpPosition","_cn3","_cn2","_cn","UnderCardComponent","children","div","className","DepositInputForm","token0","token1","currencyAmounts","currencyBalances","currencyAmountsUSDValue","formattedAmounts","onUserInput","onSetMax","deposit0Disabled","deposit1Disabled","token0UnderCardComponent","token1UnderCardComponent","amount0Loading","amount1Loading","autofocus","bufferPercentage","useNativeTokenPercentageBufferExperiment","focusedInputField","setFocusedInputField","useState","PositionField","TOKEN0","token0BalanceWithBuffer","useTokenBalanceWithBuffer","token1BalanceWithBuffer","TOKEN1","token0CurrencyInfo","useCurrencyInfo","token1CurrencyInfo","handleUserInput","field","newValue","handleOnSetMax","amount","CurrencyInputPanel","focus","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","backgroundColor","currencyInfo","currencyField","CurrencyField","INPUT","currencyAmount","currencyBalance","onSetExactAmount","onToggleIsFiatMode","usdValue","onSetPresetValue","value","onPressIn","isLoading","py","LiquidityModalDetailRows","currency0Amount","currency1Amount","networkCost","formatCurrencyAmount","useLocalizationContext","currency0Info","currency","currency1Info","DetailLineItem","LineItem","Label","Text","variant","color","Trans","i18nKey","values","symbol","Value","CurrencyLogo","size","iconSizes","icon16","type","NumberType","TokenNonTx","Boolean","NetworkLogo","chainId","shape","FiatGasPrice","LiquidityModalHeader","title","closeModal","goBack","t","useTranslation","CloseIconComponent","useMemo","ModalCloseIcon","testId","onClose","TouchableArea","onPress","BackArrow","flexGrow","textAlign","pr","SwapFormSettings","adjustTopAlignment","settings","Slippage","Deadline","defaultTitle","TokenInfo","currencyUSDAmount","isMigrating","getCurrencyForProtocol","ProtocolVersion","V4","getSymbolDisplayText","FiatStandard","icon36","useIncreasePositionDependentAmountFallback","queryParams","isQueryEnabled","data","hasErrorResponse","setHasErrorResponse","error","useIncreaseLpPositionCalldataQuery","simulateTransaction","refetchInterval","ONE_SECOND_MS","retry","enabled","useEffect","dependentAmount","useCreatePositionDependentAmountFallback","useCreateLpPositionCalldataQuery","useUpdatedAmountsFromDependentAmount","exactField","dependentAmount0","CurrencyAmount","fromRawAmount","dependentAmount0USDValue","useUSDCValue","dependentAmount1","dependentAmount1USDValue","updatedFormattedAmounts","toExact","updatedUSDAmounts","updatedCurrencyAmounts","updatedDeposit0Disabled","greaterThan","updatedDeposit1Disabled","PairState","PairState2","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","equals","V2_FACTORY_ADDRESSES","computePairAddress","factoryAddress","useReadContracts","contracts","pairAddress","address","assume0xAddress","abi","constant","inputs","outputs","internalType","payable","stateMutability","functionName","Array","from","length","result","i","reserve0","reserve1","sortsBefore","Pair","toString","useV2Pair","IncreaseLiquidityStep","IncreaseLiquidityStep2","DEFAULT_INCREASE_LIQUIDITY_STATE","step","IncreaseLiquidityContext","createContext","setStep","increaseLiquidityState","derivedIncreaseLiquidityInfo","setIncreaseLiquidityState","unwrapNativeCurrency","setUnwrapNativeCurrency","currentTransactionStep","setCurrentTransactionStep","useIncreaseLiquidityContext","useContext","IncreaseLiquidityContextProvider","positionInfo","useModalLiquidityInitialState","position","state","account","useAccount","exactAmount","Error","currency0","getCurrencyWithOptionalUnwrap","shouldUnwrap","version","currency1","depositInfoProps","V2","protocolVersion","pair","exactAmounts","tickLower","tickLowerStr","tickUpper","tickUpperStr","parseInt","pool","tickCurrent","V3","UNSPECIFIED","depositInfo","useDepositInfo","useDerivedIncreaseLiquidityInfo","Provider","IncreaseLiquidityTxContext","IncreaseLiquidityTxContextProvider","useUniswapContext","increaseCalldata","customDeadline","customSlippageTolerance","useTransactionSettingsContext","hasIncreaseErrorResponse","setHasIncreaseErrorResponse","generatePermitAsTransaction","getGeneratePermitAsTransaction","increaseLiquidityApprovalParams","walletAddress","protocol","getProtocolItems","getCurrencyAddressForTradingApi","amount0","quotient","amount1","increaseLiquidityTokenApprovals","approvalLoading","approvalError","refetch","approvalRefetch","useCheckLpApprovalQuery","staleTime","message","parseErrorMessageTitle","logger","tags","file","function","token0Approval","token1Approval","positionTokenApproval","permitData","gasFeeToken0Approval","gasFeeToken1Approval","gasFeePositionTokenApproval","token0Cancel","token1Cancel","token0PermitTransaction","token1PermitTransaction","gasFeeToken0Permit","gasFeeToken1Permit","gasFeeToken0USD","useUSDCurrencyAmountOfGasFee","gasFeeToken1USD","gasFeeLiquidityTokenUSD","liquidityToken","gasFeeToken0PermitUSD","gasFeeToken1PermitUSD","approvalsNeeded","increaseCalldataQueryParams","apiProtocolItems","independentAmount","dependentAmount2","independentToken","IndependentToken","TOKEN_0","TOKEN_1","tokenId","Number","defaultDependentAmount","isNative","ZERO_ADDRESS","fee","feeTier","tickSpacing","hooks","v4hook","slippageTolerance","currencyId","token0FoTError","hasLPFoTTransferError","token1FoTError","fotErrorToken","TransactionStepType","IncreasePositionTransaction","IncreasePositionTransactionAsync","isCalldataLoading","calldataError","calldataRefetch","increase","gasFee","actualGasFee","sendAnalyticsEvent","InterfaceEventNameLocal","IncreaseLiquidityFailed","fallbackDependentAmount","calculatedGasFee","useTransactionGasFee","increaseGasFeeUsd","toSupportedChainId","increaseLiquidityTxContext","approveToken0Request","validateTransactionRequest","approveToken1Request","approvePositionTokenRequest","revokeToken0Request","revokeToken1Request","permit","validatePermit","unsigned","txRequest","validatedToken0PermitTx","validatedToken1PermitTx","LiquidityTransactionType","Increase","action","method","PermitMethod","TypedData","typedData","increasePositionRequestArgs","batchPermitData","txInfo","gasFeeEstimateUSD","reduce","total","add","getErrorMessageToDisplay","useIncreaseLiquidityTxContext","increaseContext","_cn7","_cn6","_cn5","_cn4","IncreaseLiquidityReview","dispatch","useDispatch","selectChain","useSelectChain","startChainId","useAccountMeta","trace","useTrace","formatPercent","steps","setSteps","poolId","currentPrice","usePositionCurrentPrice","poolTokenPercentage","useGetPoolTokenPercentage","newToken0Amount","additionalToken0Amount","newToken0AmountUSD","newToken1Amount","additionalToken1Amount","newToken1AmountUSD","onFailure","onSuccess","ProgressIndicator","currentStep","baseCurrency","toFixed","quoteCurrency","Button","onIncreaseLiquidity","isValidTx","isValidLiquidityTxContext","AccountType","SignerMnemonic","liquiditySaga","actions","trigger","liquidityTxContext","setCurrentStep","analytics","getLPBaseAnalyticsProperties","currency0AmountUsd","currency1AmountUsd","expectedAmountBaseRaw","expectedAmountQuoteRaw","createPosition","IncreaseLiquidityForm","dataFetchingError","initialCurrency0Amount","initialCurrency1Amount","canUnwrap0","canUnwrapCurrency","canUnwrap1","nativeCurrency","nativeOnChain","UnwrapNativeCurrencyToggle","nativeWrappedSymbol","Switch","id","checked","onCheckedChange","unwrapNativeCurrency2","requestLoading","LiquidityPositionInfo","prev","ErrorCallout","errorMessage","description","token","isDisabled","handleOnContinue","Review","loading","IncreaseLiquidityModalInner","useModalState","ModalName","AddLiquidity","autoSlippageTolerance","useLPSlippageValue","modalContent","Input","TransactionSettingsContextProvider","settingKey","TransactionSettingKey","LP","Modal","isDismissible","gap","padding","HeightAnimator","animation","IncreaseLiquidityModal","defaultSlippage","useDynamicConfigValue","DynamicConfigs","LPConfig","LPConfigKey","DefaultSlippage","v4SlippageOverride","V4SlippageOverride","isNativePool"],"sourceRoot":""}