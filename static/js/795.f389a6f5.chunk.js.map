{"version":3,"file":"static/js/795.f389a6f5.chunk.js","mappings":"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","sources":["components/Liquidity/constants.ts","../packages/ui/src/components/icons/SwapCoin.tsx","components/Liquidity/utils.tsx","hooks/usePools.ts","pages/Pool/Positions/create/types.ts","pages/Pool/Positions/create/utils.tsx","state/mint/v3/utils.ts","types/position.ts","utils/getTickToPrice.ts"],"sourcesContent":["\"use strict\";\nimport { PositionStatus } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { FeeAmount, TICK_SPACINGS } from \"@uniswap/v3-sdk\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nexport const defaultFeeTiers = {\n  [FeeAmount.LOWEST]: { feeData: { feeAmount: FeeAmount.LOWEST, tickSpacing: TICK_SPACINGS[FeeAmount.LOWEST] } },\n  [FeeAmount.LOW_200]: {\n    feeData: { feeAmount: FeeAmount.LOW_200, tickSpacing: TICK_SPACINGS[FeeAmount.LOW_200] },\n    supportedChainIds: [UniverseChainId.Base]\n  },\n  [FeeAmount.LOW_300]: {\n    feeData: { feeAmount: FeeAmount.LOW_300, tickSpacing: TICK_SPACINGS[FeeAmount.LOW_300] },\n    supportedChainIds: [UniverseChainId.Base]\n  },\n  [FeeAmount.LOW_400]: {\n    feeData: { feeAmount: FeeAmount.LOW_400, tickSpacing: TICK_SPACINGS[FeeAmount.LOW_400] },\n    supportedChainIds: [UniverseChainId.Base]\n  },\n  [FeeAmount.LOW]: { feeData: { feeAmount: FeeAmount.LOW, tickSpacing: TICK_SPACINGS[FeeAmount.LOW] } },\n  [FeeAmount.MEDIUM]: { feeData: { feeAmount: FeeAmount.MEDIUM, tickSpacing: TICK_SPACINGS[FeeAmount.MEDIUM] } },\n  [FeeAmount.HIGH]: { feeData: { feeAmount: FeeAmount.HIGH, tickSpacing: TICK_SPACINGS[FeeAmount.HIGH] } }\n};\nexport const lpStatusConfig = {\n  [PositionStatus.IN_RANGE]: {\n    color: \"$statusSuccess\",\n    i18nKey: \"common.withinRange\"\n  },\n  [PositionStatus.OUT_OF_RANGE]: {\n    color: \"$statusCritical\",\n    i18nKey: \"common.outOfRange\"\n  },\n  [PositionStatus.CLOSED]: {\n    color: \"$neutral2\",\n    i18nKey: \"common.closed\"\n  },\n  [PositionStatus.UNSPECIFIED]: void 0\n};\n","\"use strict\";\nimport { G, Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [SwapCoin, AnimatedSwapCoin] = createIcon({\n  name: \"SwapCoin\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <G id=\"swap-coin\">\r\n        <Path\n    id=\"Vector\"\n    d=\"M2.0006 7.8667C1.9826 7.8667 1.96397 7.86601 1.94531 7.86401C1.67064 7.83401 1.47264 7.58666 1.50264 7.31266C1.74464 5.10133 3.07929 3.19668 5.07263 2.21802C5.22796 2.14202 5.41129 2.15134 5.55729 2.24268C5.70395 2.33401 5.79329 2.49465 5.79329 2.66732V4.70068C5.79329 4.97668 5.56929 5.20068 5.29329 5.20068C5.01729 5.20068 4.79329 4.97668 4.79329 4.70068V3.54004C3.51129 4.43204 2.6706 5.83264 2.49727 7.42131C2.46927 7.67664 2.25194 7.8667 2.0006 7.8667ZM10.9273 13.782C12.9206 12.804 14.2553 10.8993 14.4966 8.68734C14.5273 8.41267 14.3286 8.16599 14.0539 8.13599C13.7819 8.10665 13.5333 8.30403 13.5033 8.57869C13.3293 10.1674 12.4893 11.568 11.2066 12.46V11.2993C11.2066 11.0233 10.9826 10.7993 10.7066 10.7993C10.4306 10.7993 10.2066 11.0233 10.2066 11.2993V13.3327C10.2066 13.5053 10.296 13.666 10.4426 13.7573C10.5233 13.8073 10.6146 13.8327 10.7066 13.8327C10.782 13.8333 10.8573 13.8166 10.9273 13.782ZM7.99995 4.66667C7.99995 6.13933 9.19395 7.33333 10.6666 7.33333C12.1393 7.33333 13.3333 6.13933 13.3333 4.66667C13.3333 3.194 12.1393 2 10.6666 2C9.19395 2 7.99995 3.194 7.99995 4.66667ZM2.66662 11.3333C2.66662 12.806 3.86062 14 5.33329 14C6.80595 14 7.99995 12.806 7.99995 11.3333C7.99995 9.86067 6.80595 8.66667 5.33329 8.66667C3.86062 8.66667 2.66662 9.86067 2.66662 11.3333Z\"\n    fill={\"currentColor\"}\n  />\r\n      </G>\r\n    </Svg>,\n  defaultFill: \"#9B9B9B\"\n});\n","\"use strict\";\nimport {\n  PoolPosition,\n  PositionStatus,\n  ProtocolVersion,\n  Pool as RestPool\n} from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Percent, Token } from \"@uniswap/sdk-core\";\nimport { Pair } from \"@uniswap/v2-sdk\";\nimport { FeeAmount, Pool as V3Pool, Position as V3Position } from \"@uniswap/v3-sdk\";\nimport { Pool as V4Pool, Position as V4Position } from \"@uniswap/v4-sdk\";\nimport { defaultFeeTiers } from \"components/Liquidity/constants\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { DYNAMIC_FEE_DATA } from \"pages/Pool/Positions/create/types\";\nimport { Flag } from \"ui/src/components/icons/Flag\";\nimport { Pools } from \"ui/src/components/icons/Pools\";\nimport { SwapCoin } from \"ui/src/components/icons/SwapCoin\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { ProtocolItems } from \"uniswap/src/data/tradingApi/__generated__\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nimport { formatUnits } from \"viem\";\nexport function hasLPFoTTransferError(currencyInfo, protocolVersion) {\n  const currency = currencyInfo?.currency;\n  if (!protocolVersion || protocolVersion === ProtocolVersion.V2 || !currency || currency?.isNative) {\n    return void 0;\n  }\n  return currency?.wrapped.buyFeeBps?.gt(0) || (currencyInfo?.safetyInfo?.blockaidFees?.buyFeePercent ?? 0) > 0 || currency?.wrapped.sellFeeBps?.gt(0) || (currencyInfo?.safetyInfo?.blockaidFees?.sellFeePercent ?? 0) > 0 ? currencyInfo : void 0;\n}\nexport function getProtocolVersionLabel(version) {\n  switch (version) {\n    case ProtocolVersion.V2:\n      return \"v2\";\n    case ProtocolVersion.V3:\n      return \"v3\";\n    case ProtocolVersion.V4:\n      return \"v4\";\n    default:\n      return void 0;\n  }\n}\nexport function getProtocolItems(version) {\n  switch (version) {\n    case ProtocolVersion.V2:\n      return ProtocolItems.V2;\n    case ProtocolVersion.V3:\n      return ProtocolItems.V3;\n    case ProtocolVersion.V4:\n      return ProtocolItems.V4;\n  }\n  return void 0;\n}\nexport function getProtocolStatusLabel(status, t) {\n  switch (status) {\n    case PositionStatus.IN_RANGE:\n      return t(\"common.withinRange\");\n    case PositionStatus.OUT_OF_RANGE:\n      return t(\"common.outOfRange\");\n    case PositionStatus.CLOSED:\n      return t(\"common.closed\");\n  }\n  return void 0;\n}\nexport function parseProtocolVersion(version) {\n  switch (version?.toLowerCase()) {\n    case \"v2\":\n      return ProtocolVersion.V2;\n    case \"v3\":\n      return ProtocolVersion.V3;\n    case \"v4\":\n      return ProtocolVersion.V4;\n    default:\n      return void 0;\n  }\n}\nexport function getPositionUrl(position) {\n  const chainUrlParam = getChainUrlParam(position.chainId);\n  if (position.version === ProtocolVersion.V2) {\n    return `/positions/v2/${chainUrlParam}/${position.liquidityToken.address}`;\n  } else if (position.version === ProtocolVersion.V3) {\n    return `/positions/v3/${chainUrlParam}/${position.tokenId}`;\n  }\n  return `/positions/v4/${chainUrlParam}/${position.tokenId}`;\n}\nfunction parseV3FeeTier(feeTier) {\n  const parsedFee = parseInt(feeTier || \"\");\n  return parsedFee in FeeAmount ? parsedFee : void 0;\n}\nexport function getPoolFromRest({\n  pool,\n  token0,\n  token1,\n  protocolVersion,\n  hooks\n}) {\n  if (!pool || !token0 || !token1) {\n    return void 0;\n  }\n  if (pool instanceof RestPool) {\n    if (protocolVersion === ProtocolVersion.V3) {\n      return new V3Pool(token0, token1, pool.fee, pool.sqrtPriceX96, pool.liquidity, pool.tick);\n    }\n    return new V4Pool(\n      token0,\n      token1,\n      pool.fee,\n      pool.tickSpacing,\n      hooks || ZERO_ADDRESS,\n      pool.sqrtPriceX96,\n      pool.liquidity,\n      pool.tick\n    );\n  }\n  if (pool instanceof PoolPosition) {\n    if (protocolVersion === ProtocolVersion.V3) {\n      const feeTier = parseV3FeeTier(pool.feeTier);\n      if (feeTier) {\n        return new V3Pool(\n          token0,\n          token1,\n          feeTier,\n          pool.currentPrice,\n          pool.currentLiquidity,\n          parseInt(pool.currentTick)\n        );\n      }\n    }\n    const fee = parseInt(pool.feeTier ?? \"\");\n    return new V4Pool(\n      token0,\n      token1,\n      fee,\n      parseInt(pool.tickSpacing),\n      hooks || ZERO_ADDRESS,\n      pool.currentPrice,\n      pool.liquidity,\n      parseInt(pool.currentTick)\n    );\n  }\n  return void 0;\n}\nfunction parseRestToken(token) {\n  if (!token) {\n    return void 0;\n  }\n  if (token.address === ZERO_ADDRESS) {\n    return nativeOnChain(token.chainId);\n  }\n  return new Token(token.chainId, token.address, token.decimals, token.symbol);\n}\nfunction getPairFromRest({\n  pair,\n  token0,\n  token1\n}) {\n  if (!pair) {\n    return void 0;\n  }\n  return new Pair(\n    CurrencyAmount.fromRawAmount(token0, pair.reserve0),\n    CurrencyAmount.fromRawAmount(token1, pair.reserve1)\n  );\n}\nexport function parseRestPosition(position) {\n  if (position?.position.case === \"v2Pair\") {\n    const v2PairPosition = position.position.value;\n    const token0 = parseRestToken(v2PairPosition.token0);\n    const token1 = parseRestToken(v2PairPosition.token1);\n    const liquidityToken = parseRestToken(v2PairPosition.liquidityToken);\n    if (!token0 || !token1 || !liquidityToken) {\n      return void 0;\n    }\n    const pair = getPairFromRest({ pair: position.position.value, token0, token1 });\n    return {\n      status: position.status,\n      version: ProtocolVersion.V2,\n      pair,\n      liquidityToken,\n      chainId: token0.chainId,\n      poolId: liquidityToken.address,\n      currency0Amount: CurrencyAmount.fromRawAmount(token0, v2PairPosition.liquidity0),\n      currency1Amount: CurrencyAmount.fromRawAmount(token1, v2PairPosition.liquidity1),\n      totalSupply: CurrencyAmount.fromRawAmount(liquidityToken, v2PairPosition.totalSupply),\n      liquidityAmount: CurrencyAmount.fromRawAmount(liquidityToken, v2PairPosition.liquidity),\n      apr: v2PairPosition.apr,\n      v4hook: void 0,\n      feeTier: void 0,\n      owner: void 0,\n      isHidden: position.isHidden\n    };\n  } else if (position?.position.case === \"v3Position\") {\n    const v3Position = position.position.value;\n    const token0 = parseRestToken(v3Position.token0);\n    const token1 = parseRestToken(v3Position.token1);\n    if (!token0 || !token1) {\n      return void 0;\n    }\n    const pool = getPoolFromRest({ pool: position.position.value, token0, token1, protocolVersion: ProtocolVersion.V3 });\n    const sdkPosition = pool ? new V3Position({\n      pool,\n      liquidity: v3Position.liquidity,\n      tickLower: Number(v3Position.tickLower),\n      tickUpper: Number(v3Position.tickUpper)\n    }) : void 0;\n    return {\n      status: position.status,\n      feeTier: parseV3FeeTier(v3Position.feeTier),\n      version: ProtocolVersion.V3,\n      chainId: token0.chainId,\n      pool,\n      poolId: position.position.value.poolId,\n      position: sdkPosition,\n      tickLower: v3Position.tickLower,\n      tickUpper: v3Position.tickUpper,\n      tickSpacing: Number(v3Position.tickSpacing),\n      liquidity: v3Position.liquidity,\n      tokenId: v3Position.tokenId,\n      token0UncollectedFees: v3Position.token0UncollectedFees,\n      token1UncollectedFees: v3Position.token1UncollectedFees,\n      currency0Amount: CurrencyAmount.fromRawAmount(token0, v3Position.amount0),\n      currency1Amount: CurrencyAmount.fromRawAmount(token1, v3Position.amount1),\n      apr: v3Position.apr,\n      v4hook: void 0,\n      owner: v3Position.owner,\n      isHidden: position.isHidden\n    };\n  } else if (position?.position.case === \"v4Position\") {\n    const v4Position = position.position.value.poolPosition;\n    const token0 = parseRestToken(v4Position?.token0);\n    const token1 = parseRestToken(v4Position?.token1);\n    if (!v4Position || !token0 || !token1) {\n      return void 0;\n    }\n    const hook = position.position.value.hooks[0]?.address;\n    const pool = getPoolFromRest({ pool: v4Position, token0, token1, hooks: hook, protocolVersion: ProtocolVersion.V4 });\n    const sdkPosition = pool ? new V4Position({\n      pool,\n      liquidity: v4Position.liquidity,\n      tickLower: Number(v4Position.tickLower),\n      tickUpper: Number(v4Position.tickUpper)\n    }) : void 0;\n    const poolId = V4Pool.getPoolId(token0, token1, Number(v4Position.feeTier), Number(v4Position.tickSpacing), hook);\n    return {\n      status: position.status,\n      feeTier: v4Position.feeTier,\n      version: ProtocolVersion.V4,\n      position: sdkPosition,\n      chainId: token0.chainId,\n      pool,\n      poolId,\n      v4hook: hook,\n      tokenId: v4Position.tokenId,\n      tickLower: v4Position.tickLower,\n      tickUpper: v4Position.tickUpper,\n      tickSpacing: Number(v4Position.tickSpacing),\n      currency0Amount: CurrencyAmount.fromRawAmount(token0, v4Position.amount0 ?? 0),\n      currency1Amount: CurrencyAmount.fromRawAmount(token1, v4Position.amount1 ?? 0),\n      token0UncollectedFees: v4Position.token0UncollectedFees,\n      token1UncollectedFees: v4Position.token1UncollectedFees,\n      liquidity: v4Position.liquidity,\n      apr: v4Position.apr,\n      owner: v4Position.owner,\n      isHidden: position.isHidden,\n      totalApr: position.position.value.poolPosition?.totalApr,\n      unclaimedRewardsAmountUni: position.position.value.poolPosition?.unclaimedRewardsAmountUni,\n      boostedApr: position.position.value.poolPosition?.boostedApr,\n      token0Address: v4Position?.token0?.address,\n      token1Address: v4Position?.token1?.address\n    };\n  } else {\n    return void 0;\n  }\n}\nexport function calculateInvertedValues({\n  priceLower,\n  priceUpper,\n  quote,\n  base,\n  invert\n}) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base\n  };\n}\nexport function calculateTickSpacingFromFeeAmount(feeAmount) {\n  return Math.max(Math.round(2 * feeAmount / 100), 1);\n}\nexport var HookFlag = /* @__PURE__ */ ((HookFlag2) => {\n  HookFlag2[\"BeforeAddLiquidity\"] = \"before-add-liquidity\";\n  HookFlag2[\"AfterAddLiquidity\"] = \"after-add-liquidity\";\n  HookFlag2[\"BeforeRemoveLiquidity\"] = \"before-remove-liquidity\";\n  HookFlag2[\"AfterRemoveLiquidity\"] = \"after-remove-liquidity\";\n  HookFlag2[\"BeforeSwap\"] = \"before-swap\";\n  HookFlag2[\"AfterSwap\"] = \"after-swap\";\n  HookFlag2[\"BeforeDonate\"] = \"before-donate\";\n  HookFlag2[\"AfterDonate\"] = \"after-donate\";\n  HookFlag2[\"BeforeSwapReturnsDelta\"] = \"before-swap-returns-delta\";\n  HookFlag2[\"AfterSwapReturnsDelta\"] = \"after-swap-returns-delta\";\n  HookFlag2[\"AfterAddLiquidityReturnsDelta\"] = \"after-add-liquidity-returns-delta\";\n  HookFlag2[\"AfterRemoveLiquidityReturnsDelta\"] = \"after-remove-liquidity-returns-delta\";\n  return HookFlag2;\n})(HookFlag || {});\nconst FLAGS = {\n  [\"before-remove-liquidity\" /* BeforeRemoveLiquidity */]: 1 << 9,\n  [\"after-remove-liquidity\" /* AfterRemoveLiquidity */]: 1 << 8,\n  [\"before-add-liquidity\" /* BeforeAddLiquidity */]: 1 << 11,\n  [\"after-add-liquidity\" /* AfterAddLiquidity */]: 1 << 10,\n  [\"before-swap\" /* BeforeSwap */]: 1 << 7,\n  [\"after-swap\" /* AfterSwap */]: 1 << 6,\n  [\"before-donate\" /* BeforeDonate */]: 1 << 5,\n  [\"after-donate\" /* AfterDonate */]: 1 << 4,\n  [\"before-swap-returns-delta\" /* BeforeSwapReturnsDelta */]: 1 << 3,\n  [\"after-swap-returns-delta\" /* AfterSwapReturnsDelta */]: 1 << 2,\n  [\"after-add-liquidity-returns-delta\" /* AfterAddLiquidityReturnsDelta */]: 1 << 1,\n  [\"after-remove-liquidity-returns-delta\" /* AfterRemoveLiquidityReturnsDelta */]: 1 << 0\n};\nexport function getFlagsFromContractAddress(contractAddress) {\n  const last4Hex = contractAddress.slice(-4);\n  const binaryStr = parseInt(last4Hex, 16).toString(2);\n  const relevantBits = binaryStr.slice(-12);\n  const activeFlags = Object.entries(FLAGS).filter(([, bitPosition]) => (parseInt(relevantBits, 2) & bitPosition) !== 0).map(([flag]) => flag);\n  return activeFlags;\n}\nexport function getFlagWarning(flag, t) {\n  switch (flag) {\n    case \"before-swap\" /* BeforeSwap */:\n    case \"before-swap-returns-delta\" /* BeforeSwapReturnsDelta */:\n      return {\n        Icon: SwapCoin,\n        name: t(\"common.swap\"),\n        info: t(\"position.hook.swapWarning\"),\n        dangerous: false\n      };\n    case \"before-add-liquidity\" /* BeforeAddLiquidity */:\n    case \"after-add-liquidity\" /* AfterAddLiquidity */:\n      return {\n        Icon: Pools,\n        name: t(\"common.addLiquidity\"),\n        info: t(\"position.hook.liquidityWarning\"),\n        dangerous: false\n      };\n    case \"before-remove-liquidity\" /* BeforeRemoveLiquidity */:\n    case \"after-remove-liquidity\" /* AfterRemoveLiquidity */:\n      return {\n        Icon: Flag,\n        name: t(\"common.warning\"),\n        info: t(\"position.hook.removeWarning\"),\n        dangerous: true\n      };\n    case \"before-donate\" /* BeforeDonate */:\n    case \"after-donate\" /* AfterDonate */:\n      return {\n        Icon: Flag,\n        name: t(\"common.donate\"),\n        info: t(\"position.hook.donateWarning\"),\n        dangerous: false\n      };\n    default:\n      return void 0;\n  }\n}\nexport function mergeFeeTiers(feeTiers, feeData, formatPercent, formattedDynamicFeeTier) {\n  const result = {};\n  for (const feeTier of feeData) {\n    result[feeTier.feeAmount] = {\n      fee: feeTier,\n      formattedFee: isDynamicFeeTier(feeTier) ? formattedDynamicFeeTier : formatPercent(new Percent(feeTier.feeAmount, 1e6)),\n      totalLiquidityUsd: 0,\n      percentage: new Percent(0, 100),\n      created: false,\n      tvl: \"0\"\n    };\n  }\n  return { ...result, ...feeTiers };\n}\nfunction getDefaultFeeTiersForChain(chainId, protocolVersion) {\n  const feeData = Object.values(defaultFeeTiers).filter((feeTier) => {\n    if (protocolVersion === ProtocolVersion.V3) {\n      return !feeTier.supportedChainIds || chainId && feeTier.supportedChainIds.includes(chainId);\n    }\n    return !feeTier.supportedChainIds;\n  }).map((feeTier) => feeTier.feeData);\n  return feeData.reduce(\n    (acc, fee) => {\n      acc[fee.feeAmount] = fee;\n      return acc;\n    },\n    {}\n  );\n}\nexport function getDefaultFeeTiersForChainWithDynamicFeeTier({\n  chainId,\n  dynamicFeeTierEnabled,\n  protocolVersion\n}) {\n  const feeTiers = getDefaultFeeTiersForChain(chainId, protocolVersion);\n  if (!dynamicFeeTierEnabled) {\n    return feeTiers;\n  }\n  return { ...feeTiers, [DYNAMIC_FEE_DATA.feeAmount]: DYNAMIC_FEE_DATA };\n}\nexport function getDefaultFeeTiersWithData({\n  chainId,\n  feeTierData,\n  protocolVersion,\n  t\n}) {\n  const defaultFeeTiersForChain = getDefaultFeeTiersForChain(chainId, protocolVersion);\n  const feeTiers = [\n    {\n      tier: FeeAmount.LOWEST,\n      value: defaultFeeTiersForChain[FeeAmount.LOWEST],\n      title: t(`fee.bestForVeryStable`),\n      selectionPercent: feeTierData[FeeAmount.LOWEST]?.percentage,\n      tvl: feeTierData[FeeAmount.LOWEST]?.tvl,\n      boostedApr: feeTierData[FeeAmount.LOWEST]?.boostedApr\n    },\n    {\n      tier: FeeAmount.LOW_200,\n      value: defaultFeeTiersForChain[FeeAmount.LOW_200],\n      title: \"\",\n      selectionPercent: feeTierData[FeeAmount.LOW_200]?.percentage,\n      tvl: feeTierData[FeeAmount.LOW_200]?.tvl,\n      boostedApr: feeTierData[FeeAmount.LOW_200]?.boostedApr\n    },\n    {\n      tier: FeeAmount.LOW_300,\n      value: defaultFeeTiersForChain[FeeAmount.LOW_300],\n      title: \"\",\n      selectionPercent: feeTierData[FeeAmount.LOW_300]?.percentage,\n      tvl: feeTierData[FeeAmount.LOW_300]?.tvl,\n      boostedApr: feeTierData[FeeAmount.LOW_300]?.boostedApr\n    },\n    {\n      tier: FeeAmount.LOW_400,\n      value: defaultFeeTiersForChain[FeeAmount.LOW_400],\n      title: \"\",\n      selectionPercent: feeTierData[FeeAmount.LOW_400]?.percentage,\n      tvl: feeTierData[FeeAmount.LOW_400]?.tvl,\n      boostedApr: feeTierData[FeeAmount.LOW_400]?.boostedApr\n    },\n    {\n      tier: FeeAmount.LOW,\n      value: defaultFeeTiersForChain[FeeAmount.LOW],\n      title: t(`fee.bestForStablePairs`),\n      selectionPercent: feeTierData[FeeAmount.LOW]?.percentage,\n      tvl: feeTierData[FeeAmount.LOW]?.tvl,\n      boostedApr: feeTierData[FeeAmount.LOW]?.boostedApr\n    },\n    {\n      tier: FeeAmount.MEDIUM,\n      value: defaultFeeTiersForChain[FeeAmount.MEDIUM],\n      title: t(`fee.bestForMost`),\n      selectionPercent: feeTierData[FeeAmount.MEDIUM]?.percentage,\n      tvl: feeTierData[FeeAmount.MEDIUM]?.tvl,\n      boostedApr: feeTierData[FeeAmount.MEDIUM]?.boostedApr\n    },\n    {\n      tier: FeeAmount.HIGH,\n      value: defaultFeeTiersForChain[FeeAmount.HIGH],\n      title: t(`fee.bestForExotic`),\n      selectionPercent: feeTierData[FeeAmount.HIGH]?.percentage,\n      tvl: feeTierData[FeeAmount.HIGH]?.tvl,\n      boostedApr: feeTierData[FeeAmount.HIGH]?.boostedApr\n    }\n  ];\n  return feeTiers.filter(\n    (feeTier) => feeTier.value !== void 0 && Object.keys(feeTierData).includes(feeTier.tier.toString())\n  );\n}\nexport function isDynamicFeeTier(feeData) {\n  return feeData.feeAmount === DYNAMIC_FEE_DATA.feeAmount;\n}\nexport function isDynamicFeeTierAmount(feeAmount) {\n  if (!feeAmount) {\n    return false;\n  }\n  const feeAmountNumber = Number(feeAmount);\n  if (isNaN(feeAmountNumber)) {\n    return false;\n  }\n  return feeAmountNumber === DYNAMIC_FEE_DATA.feeAmount;\n}\nexport function formatTokenAmount(amount, decimals) {\n  try {\n    const formatted = formatUnits(BigInt(amount), decimals);\n    const [whole, decimal] = formatted.split(\".\");\n    if (!decimal) {\n      return whole;\n    }\n    return `${whole}.${decimal.slice(0, 3)}`;\n  } catch (e) {\n    return \"0\";\n  }\n}\n","\"use strict\";\nimport { V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pool, computePoolAddress } from \"@uniswap/v3-sdk\";\nimport JSBI from \"jsbi\";\nimport { useMemo } from \"react\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { assume0xAddress } from \"utils/wagmi\";\nimport { useReadContracts } from \"wagmi\";\nexport class PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  static MAX_ENTRIES = 128;\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  static pools = [];\n  static addresses = [];\n  static getPoolAddress(factoryAddress, tokenA, tokenB, fee, chainId) {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2);\n    }\n    const { address: addressA } = tokenA;\n    const { address: addressB } = tokenB;\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`;\n    const found = this.addresses.find((address2) => address2.key === key);\n    if (found) {\n      return found.address;\n    }\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n        chainId: getChainInfo(chainId).sdkId\n      })\n    };\n    this.addresses.unshift(address);\n    return address.address;\n  }\n  static getPool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick) {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2);\n    }\n    const found = this.pools.find(\n      (pool2) => pool2.token0 === tokenA && pool2.token1 === tokenB && pool2.fee === fee && JSBI.EQ(pool2.sqrtRatioX96, sqrtPriceX96) && JSBI.EQ(pool2.liquidity, liquidity) && pool2.tickCurrent === tick\n    );\n    if (found) {\n      return found;\n    }\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick);\n    this.pools.unshift(pool);\n    return pool;\n  }\n}\nexport var PoolState = /* @__PURE__ */ ((PoolState2) => {\n  PoolState2[PoolState2[\"LOADING\"] = 0] = \"LOADING\";\n  PoolState2[PoolState2[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PoolState2[PoolState2[\"EXISTS\"] = 2] = \"EXISTS\";\n  PoolState2[PoolState2[\"INVALID\"] = 3] = \"INVALID\";\n  return PoolState2;\n})(PoolState || {});\nexport function usePools(poolKeys, chainId) {\n  const poolTokens = useMemo(() => {\n    if (!chainId) {\n      return new Array(poolKeys.length);\n    }\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped;\n        const tokenB = currencyB.wrapped;\n        if (tokenA.equals(tokenB)) {\n          return void 0;\n        }\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount];\n      }\n      return void 0;\n    });\n  }, [chainId, poolKeys]);\n  const poolAddresses = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId];\n    if (!v3CoreFactoryAddress) {\n      return Array(poolTokens.length).fill(void 0);\n    }\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value, chainId));\n  }, [chainId, poolTokens]);\n  const { data: slot0s, isLoading: slot0sLoading } = useReadContracts({\n    contracts: useMemo(() => {\n      return poolAddresses.map(\n        (address) => ({\n          address: assume0xAddress(address) ?? \"0x\",\n          // Edge case: if an address is undefined, we pass in a blank address to keep the result array the same length as poolAddresses\n          abi: [\n            {\n              inputs: [],\n              name: \"slot0\",\n              outputs: [\n                {\n                  internalType: \"uint160\",\n                  name: \"sqrtPriceX96\",\n                  type: \"uint160\"\n                },\n                {\n                  internalType: \"int24\",\n                  name: \"tick\",\n                  type: \"int24\"\n                },\n                {\n                  internalType: \"uint16\",\n                  name: \"observationIndex\",\n                  type: \"uint16\"\n                },\n                {\n                  internalType: \"uint16\",\n                  name: \"observationCardinality\",\n                  type: \"uint16\"\n                },\n                {\n                  internalType: \"uint16\",\n                  name: \"observationCardinalityNext\",\n                  type: \"uint16\"\n                },\n                {\n                  internalType: \"uint8\",\n                  name: \"feeProtocol\",\n                  type: \"uint8\"\n                },\n                {\n                  internalType: \"bool\",\n                  name: \"unlocked\",\n                  type: \"bool\"\n                }\n              ],\n              stateMutability: \"view\",\n              type: \"function\"\n            }\n          ],\n          functionName: \"slot0\",\n          chainId\n        })\n      );\n    }, [poolAddresses, chainId])\n  });\n  const { data: liquidities, isLoading: liquiditiesLoading } = useReadContracts({\n    contracts: useMemo(() => {\n      return poolAddresses.map(\n        (address) => ({\n          address: assume0xAddress(address) ?? \"0x\",\n          // Edge case: if an address is undefined, we pass in a blank address to keep the result array the same length as poolAddresses\n          abi: [\n            {\n              inputs: [],\n              name: \"liquidity\",\n              outputs: [\n                {\n                  internalType: \"uint128\",\n                  name: \"\",\n                  type: \"uint128\"\n                }\n              ],\n              stateMutability: \"view\",\n              type: \"function\"\n            }\n          ],\n          functionName: \"liquidity\",\n          chainId\n        })\n      );\n    }, [poolAddresses, chainId])\n  });\n  return useComputePoolState(poolKeys, slot0s, slot0sLoading, liquidities, liquiditiesLoading, poolTokens);\n}\nexport function useComputePoolState(poolKeys, slot0s, slot0sLoading, liquidities, liquiditiesLoading, poolTokens) {\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      if (slot0sLoading || liquiditiesLoading) {\n        return [0 /* LOADING */, null];\n      }\n      const tokens = poolTokens[index];\n      const slot0 = slot0s?.[index];\n      const liquidity = liquidities?.[index];\n      if (!tokens || !slot0 || !liquidity) {\n        return [3 /* INVALID */, null];\n      }\n      if (!slot0.result) {\n        return [1 /* NOT_EXISTS */, null];\n      }\n      if (typeof liquidity.result !== \"bigint\") {\n        return [1 /* NOT_EXISTS */, null];\n      }\n      const [token0, token1, fee] = tokens;\n      const [sqrtPriceX96, tick] = slot0.result;\n      if (!sqrtPriceX96 || sqrtPriceX96 === 0n) {\n        return [1 /* NOT_EXISTS */, null];\n      }\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, sqrtPriceX96.toString(), liquidity.result.toString(), tick);\n        return [2 /* EXISTS */, pool];\n      } catch (error) {\n        logger.error(error, {\n          tags: {\n            file: \"usePools\",\n            function: \"usePools\"\n          },\n          extra: {\n            token0: token0.address,\n            token1: token1.address,\n            chainId: token0.chainId,\n            fee\n          }\n        });\n        return [1 /* NOT_EXISTS */, null];\n      }\n    });\n  }, [poolKeys, slot0sLoading, liquiditiesLoading, poolTokens, slot0s, liquidities]);\n}\nexport function usePool(currencyA, currencyB, feeAmount) {\n  const poolKeys = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  );\n  return usePools(poolKeys, currencyA?.chainId)[0];\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { FeeAmount, TICK_SPACINGS } from \"@uniswap/v3-sdk\";\nconst DYNAMIC_FEE_AMOUNT = 8388608;\nexport const DYNAMIC_FEE_DATA = {\n  feeAmount: DYNAMIC_FEE_AMOUNT,\n  tickSpacing: 60\n};\nexport var PositionFlowStep = /* @__PURE__ */ ((PositionFlowStep2) => {\n  PositionFlowStep2[PositionFlowStep2[\"SELECT_TOKENS_AND_FEE_TIER\"] = 0] = \"SELECT_TOKENS_AND_FEE_TIER\";\n  PositionFlowStep2[PositionFlowStep2[\"PRICE_RANGE\"] = 1] = \"PRICE_RANGE\";\n  PositionFlowStep2[PositionFlowStep2[\"DEPOSIT\"] = 2] = \"DEPOSIT\";\n  return PositionFlowStep2;\n})(PositionFlowStep || {});\nexport const DEFAULT_POSITION_STATE = {\n  currencyInputs: {},\n  fee: { feeAmount: FeeAmount.MEDIUM, tickSpacing: TICK_SPACINGS[FeeAmount.MEDIUM] },\n  hook: void 0,\n  userApprovedHook: void 0,\n  protocolVersion: ProtocolVersion.V4\n};\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Price, V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pair } from \"@uniswap/v2-sdk\";\nimport {\n  TickMath,\n  Pool as V3Pool,\n  Position as V3Position,\n  encodeSqrtRatioX96,\n  nearestUsableTick,\n  priceToClosestTick as priceToClosestV3Tick\n} from \"@uniswap/v3-sdk\";\nimport { Pool as V4Pool, Position as V4Position, priceToClosestTick as priceToClosestV4Tick } from \"@uniswap/v4-sdk\";\nimport { getProtocolItems } from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { PoolCache } from \"hooks/usePools\";\nimport JSBI from \"jsbi\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { tryParsePrice, tryParseTick } from \"state/mint/v3/utils\";\nimport { PositionField } from \"types/position\";\nimport { WarningSeverity } from \"uniswap/src/components/modals/WarningModal/types\";\nimport { WRAPPED_NATIVE_CURRENCY, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { IndependentToken } from \"uniswap/src/data/tradingApi/__generated__\";\nimport { LiquidityTransactionType } from \"uniswap/src/features/transactions/liquidity/types\";\nimport { PermitMethod } from \"uniswap/src/features/transactions/swap/types/swapTxAndGasInfo\";\nimport { validatePermit, validateTransactionRequest } from \"uniswap/src/features/transactions/swap/utils/trade\";\nimport { areCurrenciesEqual } from \"uniswap/src/utils/currencyId\";\nimport { getTickToPrice, getV4TickToPrice } from \"utils/getTickToPrice\";\nexport function getSortedCurrenciesTuple(a, b) {\n  if (a?.isNative || !b) {\n    return [a, b];\n  }\n  if (b?.isNative || !a) {\n    return [b, a];\n  }\n  return a.sortsBefore(b) ? [a, b] : [b, a];\n}\nexport function getSortedCurrenciesTupleWithWrap(a, b, protocolVersion) {\n  return getSortedCurrenciesTuple(getCurrencyWithWrap(a, protocolVersion), getCurrencyWithWrap(b, protocolVersion));\n}\nexport function getCurrencyForProtocol(currency, protocolVersion) {\n  if (!currency) {\n    return void 0;\n  }\n  if (protocolVersion === ProtocolVersion.V4) {\n    const wrappedNative = WRAPPED_NATIVE_CURRENCY[currency.chainId];\n    if (areCurrenciesEqual(wrappedNative, currency)) {\n      return nativeOnChain(currency.chainId);\n    }\n    return currency;\n  }\n  if (currency.isToken) {\n    return currency;\n  }\n  return currency.wrapped;\n}\nexport function getCurrencyWithWrap(currency, protocolVersion) {\n  if (protocolVersion === ProtocolVersion.V4 || currency?.isToken) {\n    return currency;\n  }\n  return currency?.wrapped;\n}\nexport function getCurrencyAddressWithWrap(currency, protocolVersion) {\n  if (currency?.isToken) {\n    return currency.address;\n  }\n  if (protocolVersion === ProtocolVersion.V4) {\n    return ZERO_ADDRESS;\n  }\n  return currency?.wrapped.address;\n}\nexport function getCurrencyAddressForTradingApi(currency) {\n  return currency?.isToken ? currency.address : ZERO_ADDRESS;\n}\nexport function poolEnabledProtocolVersion(protocolVersion) {\n  return protocolVersion === ProtocolVersion.V3 || protocolVersion === ProtocolVersion.V4;\n}\nexport function pairEnabledProtocolVersion(protocolVersion) {\n  return protocolVersion === ProtocolVersion.V2;\n}\nexport function validateCurrencyInput(currencies) {\n  return !!currencies[0] && !!currencies[1];\n}\nexport function getPairFromPositionStateAndRangeState({\n  derivedPositionInfo,\n  derivedPriceRangeInfo\n}) {\n  if (derivedPositionInfo.creatingPoolOrPair) {\n    return derivedPriceRangeInfo.protocolVersion === ProtocolVersion.V2 ? derivedPriceRangeInfo.mockPair : void 0;\n  }\n  return derivedPositionInfo.protocolVersion === ProtocolVersion.V2 ? derivedPositionInfo.pair : void 0;\n}\nexport function getPoolFromPositionStateAndRangeState({\n  derivedPositionInfo,\n  derivedPriceRangeInfo\n}) {\n  if (derivedPositionInfo.protocolVersion === ProtocolVersion.V2) {\n    return void 0;\n  }\n  if (derivedPositionInfo.creatingPoolOrPair) {\n    if (derivedPositionInfo.protocolVersion === derivedPriceRangeInfo.protocolVersion && derivedPriceRangeInfo.protocolVersion === ProtocolVersion.V4) {\n      return derivedPriceRangeInfo.mockPool;\n    }\n    if (derivedPositionInfo.protocolVersion === derivedPriceRangeInfo.protocolVersion && derivedPriceRangeInfo.protocolVersion === ProtocolVersion.V3) {\n      return derivedPriceRangeInfo.mockPool;\n    }\n    return void 0;\n  }\n  if (derivedPositionInfo.protocolVersion === derivedPriceRangeInfo.protocolVersion && derivedPositionInfo.protocolVersion === ProtocolVersion.V4) {\n    return derivedPositionInfo.pool;\n  }\n  if (derivedPositionInfo.protocolVersion === derivedPriceRangeInfo.protocolVersion && derivedPositionInfo.protocolVersion === ProtocolVersion.V3) {\n    return derivedPositionInfo.pool;\n  }\n  return void 0;\n}\nexport function getInvertedTuple(tuple, inverted) {\n  return inverted ? [tuple[1], tuple[0]] : tuple;\n}\nfunction getPrices({\n  baseCurrency,\n  quoteCurrency,\n  pricesAtLimit,\n  pricesAtTicks,\n  state\n}) {\n  if (!baseCurrency || !quoteCurrency) {\n    return [void 0, void 0];\n  }\n  const lowerPrice = state.fullRange ? pricesAtLimit[0] : pricesAtTicks[0];\n  const upperPrice = state.fullRange ? pricesAtLimit[1] : pricesAtTicks[1];\n  return [lowerPrice, upperPrice];\n}\nfunction getInitialPrice({\n  baseCurrency,\n  sortedCurrencies,\n  initialPrice\n}) {\n  const [currency0, currency1] = sortedCurrencies;\n  const invertPrice = Boolean(baseCurrency && currency0 && !baseCurrency.equals(currency0));\n  const parsedQuoteAmount = tryParseCurrencyAmount(initialPrice, invertPrice ? currency0 : currency1);\n  if (!parsedQuoteAmount) {\n    return void 0;\n  }\n  const baseAmount = tryParseCurrencyAmount(\"1\", invertPrice ? currency1 : currency0);\n  const price = baseAmount && parsedQuoteAmount ? new Price(baseAmount.currency, parsedQuoteAmount.currency, baseAmount.quotient, parsedQuoteAmount.quotient) : void 0;\n  return invertPrice ? price?.invert() : price;\n}\nfunction getPrice(opts) {\n  const { type, pool, currency0 } = opts;\n  if (!pool || !currency0) {\n    return void 0;\n  }\n  return type === ProtocolVersion.V4 ? pool.priceOf(currency0) : pool.priceOf(currency0);\n}\nfunction isInvalidPrice(price) {\n  const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : void 0;\n  return !!price && !!sqrtRatioX96 && !(JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) && JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO));\n}\nfunction createMockV3Pool({\n  baseToken,\n  quoteToken,\n  fee,\n  price,\n  invalidPrice\n}) {\n  if (!baseToken || !quoteToken || !fee || !price || invalidPrice) {\n    return void 0;\n  }\n  const wrappedPrice = new Price(\n    price.baseCurrency.wrapped,\n    price.quoteCurrency.wrapped,\n    price.denominator,\n    price.numerator\n  );\n  const invertedPrice = wrappedPrice.baseCurrency.sortsBefore(wrappedPrice.quoteCurrency) ? wrappedPrice : wrappedPrice.invert();\n  const currentTick = priceToClosestV3Tick(invertedPrice);\n  const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick);\n  const pool = new V3Pool(baseToken, quoteToken, fee, currentSqrt, JSBI.BigInt(0), currentTick, []);\n  return pool;\n}\nfunction createMockV4Pool({\n  baseToken,\n  quoteToken,\n  fee,\n  hook,\n  price,\n  invalidPrice\n}) {\n  if (!baseToken || !quoteToken || !price || invalidPrice) {\n    return void 0;\n  }\n  const currentTick = priceToClosestV4Tick(price);\n  const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick);\n  const pool = new V4Pool(\n    baseToken,\n    quoteToken,\n    fee.feeAmount,\n    fee.tickSpacing,\n    hook ?? ZERO_ADDRESS,\n    currentSqrt,\n    JSBI.BigInt(0),\n    currentTick\n  );\n  return pool;\n}\nfunction createMockPair(price) {\n  if (price) {\n    return new Pair(\n      CurrencyAmount.fromRawAmount(price.quoteCurrency.wrapped, price.numerator),\n      CurrencyAmount.fromRawAmount(price.baseCurrency.wrapped, price.denominator)\n    );\n  } else {\n    return void 0;\n  }\n}\nexport function getDependentAmountFromV2Pair({\n  independentAmount,\n  otherAmount,\n  pair,\n  exactField,\n  token0,\n  token1,\n  dependentToken\n}) {\n  const [token0Wrapped, token1Wrapped] = [token0?.wrapped, token1?.wrapped];\n  if (!token0Wrapped || !token1Wrapped || !independentAmount || !pair) {\n    return void 0;\n  }\n  try {\n    const dependentTokenAmount = exactField === PositionField.TOKEN0 ? pair.priceOf(token0Wrapped).quote(independentAmount.wrapped) : pair.priceOf(token1Wrapped).quote(independentAmount.wrapped);\n    return dependentToken ? dependentToken?.isNative ? CurrencyAmount.fromRawAmount(dependentToken, dependentTokenAmount.quotient) : dependentTokenAmount : void 0;\n  } catch (e) {\n    return otherAmount;\n  }\n}\nexport function getDependentAmountFromV3Position({\n  independentAmount,\n  pool,\n  tickLower,\n  tickUpper\n}) {\n  const wrappedIndependentAmount = independentAmount.wrapped;\n  const independentTokenIsFirstToken = wrappedIndependentAmount.currency.equals(pool.token0);\n  if (independentTokenIsFirstToken) {\n    return V3Position.fromAmount0({\n      pool,\n      tickLower,\n      tickUpper,\n      amount0: wrappedIndependentAmount.quotient,\n      useFullPrecision: true\n    }).amount1;\n  }\n  return V3Position.fromAmount1({\n    pool,\n    tickLower,\n    tickUpper,\n    amount1: wrappedIndependentAmount.quotient\n  }).amount0;\n}\nexport function getDependentAmountFromV4Position({\n  independentAmount,\n  pool,\n  tickLower,\n  tickUpper\n}) {\n  const independentTokenIsFirstToken = independentAmount.currency.equals(pool.token0);\n  if (independentTokenIsFirstToken) {\n    return V4Position.fromAmount0({\n      pool,\n      tickLower,\n      tickUpper,\n      amount0: independentAmount.quotient,\n      useFullPrecision: true\n    }).amount1;\n  }\n  return V4Position.fromAmount1({\n    pool,\n    tickLower,\n    tickUpper,\n    amount1: independentAmount.quotient\n  }).amount0;\n}\nexport function getV2PriceRangeInfo({\n  state,\n  derivedPositionInfo\n}) {\n  const { currencies } = derivedPositionInfo;\n  const [baseCurrency] = getInvertedTuple(currencies, state.priceInverted);\n  const baseToken = getCurrencyWithWrap(baseCurrency, ProtocolVersion.V2);\n  const sortedTokens = getSortedCurrenciesTuple(\n    getCurrencyWithWrap(currencies[0], ProtocolVersion.V2),\n    getCurrencyWithWrap(currencies[1], ProtocolVersion.V2)\n  );\n  const priceDifference = getPriceDifference({\n    initialPrice: state.initialPrice,\n    defaultInitialPrice: derivedPositionInfo.defaultInitialPrice,\n    priceInverted: state.priceInverted\n  });\n  const price = getInitialPrice({\n    baseCurrency: baseToken,\n    sortedCurrencies: sortedTokens,\n    initialPrice: state.initialPrice\n  });\n  const invertPrice = Boolean(baseToken && sortedTokens[0] && !baseToken.equals(sortedTokens[0]));\n  return {\n    protocolVersion: ProtocolVersion.V2,\n    price,\n    mockPair: createMockPair(price),\n    deposit0Disabled: false,\n    deposit1Disabled: false,\n    invertPrice,\n    priceDifference\n  };\n}\nexport function getV3PriceRangeInfo({\n  state,\n  positionState,\n  derivedPositionInfo\n}) {\n  const { fee } = positionState;\n  const { protocolVersion, currencies } = derivedPositionInfo;\n  const pool = derivedPositionInfo.pool;\n  const tokenA = getCurrencyWithWrap(currencies[0], protocolVersion);\n  const tokenB = getCurrencyWithWrap(currencies[1], protocolVersion);\n  const sortedTokens = getSortedCurrenciesTuple(tokenA, tokenB);\n  const [sortedToken0, sortedToken1] = sortedTokens;\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(currencies, state.priceInverted);\n  const [baseToken, quoteToken] = [\n    getCurrencyWithWrap(baseCurrency, protocolVersion),\n    getCurrencyWithWrap(quoteCurrency, protocolVersion)\n  ];\n  const priceDifference = getPriceDifference({\n    initialPrice: state.initialPrice,\n    defaultInitialPrice: derivedPositionInfo.defaultInitialPrice,\n    priceInverted: state.priceInverted\n  });\n  const initialPriceTokens = getInvertedTuple(\n    [getCurrencyWithWrap(currencies[0], protocolVersion), getCurrencyWithWrap(currencies[1], protocolVersion)],\n    state.priceInverted\n  );\n  const price = derivedPositionInfo.creatingPoolOrPair ? getInitialPrice({\n    baseCurrency: initialPriceTokens[0],\n    sortedCurrencies: sortedTokens,\n    initialPrice: state.initialPrice\n  }) : getPrice({\n    type: ProtocolVersion.V3,\n    pool,\n    currency0: sortedToken0\n  });\n  const invalidPrice = isInvalidPrice(price);\n  const mockPool = createMockV3Pool({\n    baseToken,\n    quoteToken,\n    fee: fee.feeAmount,\n    price,\n    invalidPrice\n  });\n  const poolForPosition = pool ?? mockPool;\n  const tickSpaceLimits = [\n    nearestUsableTick(TickMath.MIN_TICK, fee.tickSpacing),\n    nearestUsableTick(TickMath.MAX_TICK, fee.tickSpacing)\n  ];\n  const invertPrice = Boolean(baseToken && sortedToken0 && !baseToken.equals(sortedToken0));\n  const [baseRangeInput, quoteRangeInput] = invertPrice ? [state.maxPrice, state.minPrice] : [state.minPrice, state.maxPrice];\n  const lowerTick = baseRangeInput === \"\" ? tickSpaceLimits[0] : invertPrice ? tryParseTick(sortedToken1, sortedToken0, fee.feeAmount, state.maxPrice) : tryParseTick(sortedToken0, sortedToken1, fee.feeAmount, state.minPrice);\n  const upperTick = quoteRangeInput === \"\" ? tickSpaceLimits[1] : invertPrice ? tryParseTick(sortedToken1, sortedToken0, fee.feeAmount, state.minPrice) : tryParseTick(sortedToken0, sortedToken1, fee.feeAmount, state.maxPrice);\n  const ticks = [lowerTick, upperTick];\n  const invalidRange = Boolean(lowerTick !== void 0 && upperTick !== void 0 && lowerTick >= upperTick);\n  const ticksAtLimit = state.fullRange ? [true, true] : [lowerTick === tickSpaceLimits[0], upperTick === tickSpaceLimits[1]];\n  const pricesAtLimit = [\n    getTickToPrice(sortedToken0, sortedToken1, tickSpaceLimits[0]),\n    getTickToPrice(sortedToken0, sortedToken1, tickSpaceLimits[1])\n  ];\n  const pricesAtTicks = [\n    getTickToPrice(sortedToken0, sortedToken1, ticks[0]),\n    getTickToPrice(sortedToken0, sortedToken1, ticks[1])\n  ];\n  const isSorted = areCurrenciesEqual(baseToken, sortedToken0);\n  const prices = getPrices({\n    baseCurrency: baseToken,\n    quoteCurrency: quoteToken,\n    pricesAtLimit,\n    pricesAtTicks,\n    state\n  });\n  const outOfRange = Boolean(\n    !invalidRange && price && prices[0] && prices[1] && (price.lessThan(prices[0]) || price.greaterThan(prices[1]))\n  );\n  const deposit0Disabled = Boolean(\n    upperTick !== void 0 && poolForPosition && poolForPosition.tickCurrent >= upperTick\n  );\n  const deposit1Disabled = Boolean(\n    lowerTick !== void 0 && poolForPosition && poolForPosition.tickCurrent <= lowerTick\n  );\n  const depositADisabled = invalidRange || Boolean(\n    deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA) || deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA)\n  );\n  const depositBDisabled = invalidRange || Boolean(\n    deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB) || deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB)\n  );\n  return {\n    protocolVersion,\n    ticks,\n    ticksAtLimit,\n    isSorted,\n    price,\n    prices,\n    pricesAtTicks,\n    pricesAtLimit,\n    priceDifference,\n    tickSpaceLimits,\n    invertPrice,\n    invalidPrice,\n    invalidRange,\n    outOfRange,\n    deposit0Disabled: depositADisabled,\n    deposit1Disabled: depositBDisabled,\n    mockPool\n  };\n}\nfunction tryParseV4Tick(baseToken, quoteToken, value, tickSpacing) {\n  if (!baseToken || !quoteToken || !value || !tickSpacing) {\n    return void 0;\n  }\n  const price = tryParsePrice(baseToken, quoteToken, value);\n  if (!price) {\n    return void 0;\n  }\n  let tick;\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator);\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK;\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK;\n  } else {\n    tick = priceToClosestV4Tick(price);\n  }\n  return nearestUsableTick(tick, tickSpacing);\n}\nexport function getV4PriceRangeInfo({\n  state,\n  positionState,\n  derivedPositionInfo\n}) {\n  const { fee, hook, initialPosition } = positionState;\n  const { protocolVersion, currencies, pool } = derivedPositionInfo;\n  const sortedCurrencies = getSortedCurrenciesTuple(currencies[0], currencies[1]);\n  const [sortedCurrency0, sortedCurrency1] = sortedCurrencies;\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(currencies, state.priceInverted);\n  const [initialPriceBaseCurrency] = getInvertedTuple(currencies, state.priceInverted);\n  const priceDifference = getPriceDifference({\n    initialPrice: state.initialPrice,\n    defaultInitialPrice: derivedPositionInfo.defaultInitialPrice,\n    priceInverted: state.priceInverted\n  });\n  const price = derivedPositionInfo.creatingPoolOrPair ? getInitialPrice({\n    baseCurrency: initialPriceBaseCurrency,\n    sortedCurrencies,\n    initialPrice: state.initialPrice\n  }) : getPrice({\n    type: ProtocolVersion.V4,\n    pool,\n    currency0: sortedCurrency0\n  });\n  const invalidPrice = isInvalidPrice(price);\n  const mockPool = createMockV4Pool({\n    baseToken: baseCurrency,\n    quoteToken: quoteCurrency,\n    fee,\n    hook,\n    price,\n    invalidPrice\n  });\n  const poolForPosition = pool ?? mockPool;\n  const tickSpaceLimits = initialPosition?.tickLower && initialPosition?.tickUpper ? [initialPosition.tickLower, initialPosition.tickUpper] : [\n    poolForPosition ? nearestUsableTick(TickMath.MIN_TICK, poolForPosition.tickSpacing) : void 0,\n    poolForPosition ? nearestUsableTick(TickMath.MAX_TICK, poolForPosition.tickSpacing) : void 0\n  ];\n  const invertPrice = Boolean(baseCurrency && sortedCurrency0 && !baseCurrency.equals(sortedCurrency0));\n  const [baseRangeInput, quoteRangeInput] = invertPrice ? [state.maxPrice, state.minPrice] : [state.minPrice, state.maxPrice];\n  const lowerTick = baseRangeInput === \"\" || initialPosition?.isOutOfRange ? tickSpaceLimits[0] : invertPrice ? tryParseV4Tick(sortedCurrency1, sortedCurrency0, state.maxPrice, poolForPosition?.tickSpacing) : tryParseV4Tick(sortedCurrency0, sortedCurrency1, state.minPrice, poolForPosition?.tickSpacing);\n  const upperTick = quoteRangeInput === \"\" || initialPosition?.isOutOfRange ? tickSpaceLimits[1] : invertPrice ? tryParseV4Tick(sortedCurrency1, sortedCurrency0, state.minPrice, poolForPosition?.tickSpacing) : tryParseV4Tick(sortedCurrency0, sortedCurrency1, state.maxPrice, poolForPosition?.tickSpacing);\n  const ticks = [lowerTick, upperTick];\n  const invalidRange = Boolean(lowerTick !== void 0 && upperTick !== void 0 && lowerTick >= upperTick);\n  const ticksAtLimit = state.fullRange ? [true, true] : [lowerTick === tickSpaceLimits[0], upperTick === tickSpaceLimits[1]];\n  const pricesAtLimit = [\n    getV4TickToPrice(sortedCurrency0, sortedCurrency1, tickSpaceLimits[0]),\n    getV4TickToPrice(sortedCurrency0, sortedCurrency1, tickSpaceLimits[1])\n  ];\n  const pricesAtTicks = [\n    getV4TickToPrice(sortedCurrency0, sortedCurrency1, ticks[0]),\n    getV4TickToPrice(sortedCurrency0, sortedCurrency1, ticks[1])\n  ];\n  const isSorted = areCurrenciesEqual(baseCurrency, sortedCurrency0);\n  const prices = getPrices({\n    baseCurrency,\n    quoteCurrency,\n    pricesAtLimit,\n    pricesAtTicks,\n    state\n  });\n  const outOfRange = Boolean(\n    !invalidRange && price && prices[0] && prices[1] && (price.lessThan(prices[0]) || price.greaterThan(prices[1]))\n  );\n  const deposit0Disabled = Boolean(\n    upperTick !== void 0 && poolForPosition && poolForPosition.tickCurrent >= upperTick\n  );\n  const deposit1Disabled = Boolean(\n    lowerTick !== void 0 && poolForPosition && poolForPosition.tickCurrent <= lowerTick\n  );\n  const depositADisabled = invalidRange || Boolean(\n    deposit0Disabled && poolForPosition && currencies[0] && poolForPosition.token0.equals(currencies[0]) || deposit1Disabled && poolForPosition && currencies[0] && poolForPosition.token1.equals(currencies[0])\n  );\n  const depositBDisabled = invalidRange || Boolean(\n    deposit0Disabled && poolForPosition && currencies[1] && poolForPosition.token0.equals(currencies[1]) || deposit1Disabled && poolForPosition && currencies[1] && poolForPosition.token1.equals(currencies[1])\n  );\n  return {\n    protocolVersion,\n    ticks,\n    ticksAtLimit,\n    isSorted,\n    price,\n    prices,\n    pricesAtTicks,\n    pricesAtLimit,\n    priceDifference,\n    tickSpaceLimits,\n    invertPrice,\n    invalidPrice,\n    invalidRange,\n    outOfRange,\n    deposit0Disabled: depositADisabled,\n    deposit1Disabled: depositBDisabled,\n    mockPool\n  };\n}\nexport function generateAddLiquidityApprovalParams({\n  account,\n  positionState,\n  derivedPositionInfo,\n  derivedDepositInfo,\n  generatePermitAsTransaction\n}) {\n  const apiProtocolItems = getProtocolItems(positionState.protocolVersion);\n  const currencies = derivedPositionInfo.currencies;\n  const { currencyAmounts } = derivedDepositInfo;\n  if (!account?.address || !apiProtocolItems || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1 || !validateCurrencyInput(currencies)) {\n    return void 0;\n  }\n  return {\n    simulateTransaction: true,\n    walletAddress: account.address,\n    chainId: currencyAmounts.TOKEN0.currency.chainId,\n    protocol: apiProtocolItems,\n    token0: getCurrencyAddressForTradingApi(currencies[0]),\n    token1: getCurrencyAddressForTradingApi(currencies[1]),\n    amount0: currencyAmounts?.TOKEN0?.quotient.toString(),\n    amount1: currencyAmounts?.TOKEN1?.quotient.toString(),\n    generatePermitAsTransaction: positionState.protocolVersion === ProtocolVersion.V4 ? generatePermitAsTransaction : void 0\n  };\n}\nfunction getIndependentToken({\n  unsortedCurrencies,\n  sortedToken0,\n  sortedToken1,\n  independentField,\n  protocolVersion\n}) {\n  const tokenA = getCurrencyWithWrap(unsortedCurrencies[0], protocolVersion);\n  const tokenB = getCurrencyWithWrap(unsortedCurrencies[1], protocolVersion);\n  const token0Index = tokenA && sortedToken0.equals(tokenA) ? PositionField.TOKEN0 : PositionField.TOKEN1;\n  const token1Index = tokenB && sortedToken1.equals(tokenB) ? PositionField.TOKEN1 : PositionField.TOKEN0;\n  const independentToken = independentField === PositionField.TOKEN0 ? token0Index === PositionField.TOKEN0 ? IndependentToken.TOKEN_0 : IndependentToken.TOKEN_1 : token1Index === PositionField.TOKEN1 ? IndependentToken.TOKEN_1 : IndependentToken.TOKEN_0;\n  return {\n    independentToken,\n    token0Index,\n    token1Index\n  };\n}\nexport function generateCreateCalldataQueryParams({\n  account,\n  approvalCalldata,\n  positionState,\n  derivedPositionInfo,\n  priceRangeState,\n  derivedPriceRangeInfo,\n  derivedDepositInfo,\n  independentField,\n  slippageTolerance\n}) {\n  const apiProtocolItems = getProtocolItems(positionState.protocolVersion);\n  const currencies = derivedPositionInfo.currencies;\n  const { currencyAmounts } = derivedDepositInfo;\n  if (!account?.address || !apiProtocolItems || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1 || !validateCurrencyInput(currencies)) {\n    return void 0;\n  }\n  const {\n    token0Approval,\n    token1Approval,\n    positionTokenApproval,\n    permitData,\n    token0PermitTransaction,\n    token1PermitTransaction\n  } = approvalCalldata ?? {};\n  if (derivedPositionInfo.protocolVersion === ProtocolVersion.V2) {\n    if (derivedPositionInfo.protocolVersion !== derivedPriceRangeInfo.protocolVersion) {\n      return void 0;\n    }\n    const pair = derivedPositionInfo.pair ?? derivedPriceRangeInfo.mockPair;\n    if (!pair) {\n      return void 0;\n    }\n    const sortedToken02 = pair.token0;\n    const sortedToken12 = pair.token1;\n    const { independentToken: independentToken2, token0Index: token0Index2, token1Index: token1Index2 } = getIndependentToken({\n      unsortedCurrencies: currencies,\n      sortedToken0: sortedToken02,\n      sortedToken1: sortedToken12,\n      independentField,\n      protocolVersion: derivedPositionInfo.protocolVersion\n    });\n    const dependentField2 = independentField === PositionField.TOKEN0 ? PositionField.TOKEN1 : PositionField.TOKEN0;\n    const independentAmount2 = currencyAmounts[independentField];\n    const dependentAmount2 = currencyAmounts[dependentField2];\n    return {\n      simulateTransaction: !(permitData || token0PermitTransaction || token1PermitTransaction || token0Approval || token1Approval || positionTokenApproval),\n      protocol: apiProtocolItems,\n      walletAddress: account.address,\n      chainId: currencyAmounts.TOKEN0.currency.chainId,\n      independentAmount: independentAmount2?.quotient.toString(),\n      independentToken: independentToken2,\n      defaultDependentAmount: dependentAmount2?.quotient.toString(),\n      slippageTolerance,\n      position: {\n        pool: {\n          token0: getCurrencyAddressForTradingApi(currencyAmounts[token0Index2]?.currency),\n          token1: getCurrencyAddressForTradingApi(currencyAmounts[token1Index2]?.currency)\n        }\n      }\n    };\n  }\n  if (derivedPositionInfo.protocolVersion !== derivedPriceRangeInfo.protocolVersion) {\n    return void 0;\n  }\n  const pool = derivedPositionInfo.pool ?? derivedPriceRangeInfo.mockPool;\n  if (!pool) {\n    return void 0;\n  }\n  const tickLower = priceRangeState.fullRange ? derivedPriceRangeInfo.tickSpaceLimits[0] : derivedPriceRangeInfo.ticks?.[0];\n  const tickUpper = priceRangeState.fullRange ? derivedPriceRangeInfo.tickSpaceLimits[1] : derivedPriceRangeInfo.ticks?.[1];\n  if (tickLower === void 0 || tickUpper === void 0) {\n    return void 0;\n  }\n  const creatingPool = derivedPositionInfo.creatingPoolOrPair;\n  const initialPrice = creatingPool ? pool.sqrtRatioX96.toString() : void 0;\n  const tickSpacing = pool.tickSpacing;\n  const sortedToken0 = pool.token0;\n  const sortedToken1 = pool.token1;\n  const { independentToken, token0Index, token1Index } = getIndependentToken({\n    sortedToken0,\n    sortedToken1,\n    unsortedCurrencies: currencies,\n    independentField,\n    protocolVersion: derivedPositionInfo.protocolVersion\n  });\n  const dependentField = independentField === PositionField.TOKEN0 ? PositionField.TOKEN1 : PositionField.TOKEN0;\n  const independentAmount = currencyAmounts[independentField];\n  const dependentAmount = currencyAmounts[dependentField];\n  return {\n    simulateTransaction: !(permitData || token0PermitTransaction || token1PermitTransaction || token0Approval || token1Approval || positionTokenApproval),\n    protocol: apiProtocolItems,\n    walletAddress: account.address,\n    chainId: currencyAmounts.TOKEN0.currency.chainId,\n    independentAmount: independentAmount?.quotient.toString(),\n    independentToken,\n    initialDependentAmount: initialPrice && dependentAmount?.quotient?.toString(),\n    // only set this if there is an initialPrice\n    initialPrice,\n    slippageTolerance,\n    position: {\n      tickLower,\n      tickUpper,\n      pool: {\n        tickSpacing,\n        token0: getCurrencyAddressForTradingApi(currencyAmounts[token0Index]?.currency),\n        token1: getCurrencyAddressForTradingApi(currencyAmounts[token1Index]?.currency),\n        fee: positionState.fee.feeAmount,\n        hooks: positionState.hook\n      }\n    }\n  };\n}\nexport function generateCreatePositionTxRequest({\n  approvalCalldata,\n  createCalldata,\n  createCalldataQueryParams,\n  derivedPositionInfo,\n  derivedDepositInfo\n}) {\n  const { currencyAmounts } = derivedDepositInfo;\n  if (!createCalldata || !currencyAmounts?.TOKEN0 || !currencyAmounts?.TOKEN1) {\n    return void 0;\n  }\n  const validatedApprove0Request = validateTransactionRequest(approvalCalldata?.token0Approval);\n  if (approvalCalldata?.token0Approval && !validatedApprove0Request) {\n    return void 0;\n  }\n  const validatedApprove1Request = validateTransactionRequest(approvalCalldata?.token1Approval);\n  if (approvalCalldata?.token1Approval && !validatedApprove1Request) {\n    return void 0;\n  }\n  const validatedRevoke0Request = validateTransactionRequest(approvalCalldata?.token0Cancel);\n  if (approvalCalldata?.token0Cancel && !validatedRevoke0Request) {\n    return void 0;\n  }\n  const validatedRevoke1Request = validateTransactionRequest(approvalCalldata?.token1Cancel);\n  if (approvalCalldata?.token1Cancel && !validatedRevoke1Request) {\n    return void 0;\n  }\n  const validatedPermitRequest = validatePermit(approvalCalldata?.permitData);\n  if (approvalCalldata?.permitData && !validatedPermitRequest) {\n    return void 0;\n  }\n  const validatedToken0PermitTransaction = validateTransactionRequest(approvalCalldata?.token0PermitTransaction);\n  const validatedToken1PermitTransaction = validateTransactionRequest(approvalCalldata?.token1PermitTransaction);\n  const txRequest = validateTransactionRequest(createCalldata.create);\n  if (!txRequest && !(validatedToken0PermitTransaction || validatedToken1PermitTransaction)) {\n    return void 0;\n  }\n  const queryParams = derivedPositionInfo.protocolVersion === ProtocolVersion.V4 ? { ...createCalldataQueryParams, batchPermitData: validatedPermitRequest } : createCalldataQueryParams;\n  return {\n    type: LiquidityTransactionType.Create,\n    unsigned: Boolean(validatedPermitRequest),\n    protocolVersion: derivedPositionInfo.protocolVersion,\n    createPositionRequestArgs: queryParams,\n    action: {\n      type: LiquidityTransactionType.Create,\n      currency0Amount: currencyAmounts.TOKEN0,\n      currency1Amount: currencyAmounts.TOKEN1,\n      liquidityToken: derivedPositionInfo.protocolVersion === ProtocolVersion.V2 ? derivedPositionInfo.pair?.liquidityToken : void 0\n    },\n    approveToken0Request: validatedApprove0Request,\n    approveToken1Request: validatedApprove1Request,\n    txRequest,\n    approvePositionTokenRequest: void 0,\n    revokeToken0Request: validatedRevoke0Request,\n    revokeToken1Request: validatedRevoke1Request,\n    permit: validatedPermitRequest ? { method: PermitMethod.TypedData, typedData: validatedPermitRequest } : void 0,\n    token0PermitTransaction: validatedToken0PermitTransaction,\n    token1PermitTransaction: validatedToken1PermitTransaction\n  };\n}\nexport function getPoolIdOrAddressFromCreatePositionInfo(positionInfo) {\n  switch (positionInfo.protocolVersion) {\n    case ProtocolVersion.V2:\n      return positionInfo.pair?.liquidityToken.address;\n    case ProtocolVersion.V3:\n      return positionInfo.pool?.chainId && positionInfo.currencies[0] && positionInfo.currencies[1] ? PoolCache.getPoolAddress(\n        V3_CORE_FACTORY_ADDRESSES[positionInfo.pool.chainId],\n        positionInfo.currencies[0].wrapped,\n        positionInfo.currencies[1].wrapped,\n        positionInfo.pool.fee,\n        positionInfo.pool.chainId\n      ) : void 0;\n    case ProtocolVersion.V4:\n    default:\n      return positionInfo.pool?.poolId;\n  }\n}\nexport function canUnwrapCurrency(currency, protocolVersion) {\n  if (protocolVersion === ProtocolVersion.V4 || !currency) {\n    return false;\n  }\n  const wrappedNative = WRAPPED_NATIVE_CURRENCY[currency?.chainId];\n  return areCurrenciesEqual(wrappedNative, currency);\n}\nexport function getCurrencyWithOptionalUnwrap({\n  currency,\n  shouldUnwrap\n}) {\n  if (!currency) {\n    return void 0;\n  }\n  const wrappedNative = WRAPPED_NATIVE_CURRENCY[currency.chainId];\n  const isWrappedNative = areCurrenciesEqual(wrappedNative, currency);\n  if (!isWrappedNative || !shouldUnwrap) {\n    return currency;\n  }\n  return nativeOnChain(currency.chainId);\n}\nconst WARNING_PRICE_DIFFERENCE_PERCENTAGE = 5;\nconst CRITICAL_PRICE_DIFFERENCE_PERCENTAGE = 10;\nfunction getPriceDifference({\n  initialPrice,\n  defaultInitialPrice,\n  priceInverted\n}) {\n  const initialPriceNumber = Number(initialPrice);\n  const defaultInitialPriceNumber = priceInverted ? Number(defaultInitialPrice?.invert().toSignificant(8)) : Number(defaultInitialPrice?.toSignificant(8));\n  if (!initialPriceNumber || !defaultInitialPriceNumber) {\n    return void 0;\n  }\n  const priceDifference = initialPriceNumber - defaultInitialPriceNumber;\n  const priceDifferencePercentage = priceDifference / defaultInitialPriceNumber * 100;\n  const priceDifferencePercentageRounded = Math.round(priceDifferencePercentage);\n  const priceDifferencePercentageAbsolute = Math.abs(priceDifferencePercentageRounded);\n  let warning;\n  if (priceDifferencePercentageAbsolute > CRITICAL_PRICE_DIFFERENCE_PERCENTAGE) {\n    warning = WarningSeverity.High;\n  } else if (priceDifferencePercentageAbsolute > WARNING_PRICE_DIFFERENCE_PERCENTAGE) {\n    warning = WarningSeverity.Medium;\n  }\n  return {\n    value: priceDifferencePercentageRounded,\n    absoluteValue: priceDifferencePercentageAbsolute,\n    warning\n  };\n}\n","\"use strict\";\nimport { Price } from \"@uniswap/sdk-core\";\nimport {\n  TICK_SPACINGS,\n  TickMath,\n  encodeSqrtRatioX96,\n  nearestUsableTick,\n  priceToClosestTick\n} from \"@uniswap/v3-sdk\";\nimport JSBI from \"jsbi\";\nimport { convertScientificNotationToNumber } from \"utilities/src/format/convertScientificNotation\";\nexport function tryParsePrice(baseToken, quoteToken, value) {\n  if (!baseToken || !quoteToken || !value) {\n    return void 0;\n  }\n  const decimalValue = convertScientificNotationToNumber(value);\n  if (!decimalValue.match(/^\\d*\\.?\\d*$/)) {\n    return void 0;\n  }\n  const [whole, fraction] = decimalValue.split(\".\");\n  const decimals = fraction?.length ?? 0;\n  const withoutDecimals = JSBI.BigInt((whole ?? \"\") + (fraction ?? \"\"));\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n  );\n}\nexport function tryParseTick(baseToken, quoteToken, feeAmount, value) {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return void 0;\n  }\n  const price = tryParsePrice(baseToken, quoteToken, value);\n  if (!price) {\n    return void 0;\n  }\n  let tick;\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator);\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK;\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK;\n  } else {\n    tick = priceToClosestTick(price);\n  }\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount]);\n}\n","\"use strict\";\nexport var PositionField = /* @__PURE__ */ ((PositionField2) => {\n  PositionField2[\"TOKEN0\"] = \"TOKEN0\";\n  PositionField2[\"TOKEN1\"] = \"TOKEN1\";\n  return PositionField2;\n})(PositionField || {});\n","\"use strict\";\nimport { tickToPrice } from \"@uniswap/v3-sdk\";\nimport { tickToPrice as tickToPriceV4 } from \"@uniswap/v4-sdk\";\nexport function getTickToPrice(baseToken, quoteToken, tick) {\n  if (!baseToken || !quoteToken || typeof tick !== \"number\") {\n    return void 0;\n  }\n  return tickToPrice(baseToken, quoteToken, tick);\n}\nexport function getV4TickToPrice(baseCurrency, quoteCurrency, tick) {\n  if (!baseCurrency || !quoteCurrency || typeof tick !== \"number\") {\n    return void 0;\n  }\n  return tickToPriceV4(baseCurrency, quoteCurrency, tick);\n}\n"],"names":["defaultFeeTiers","FeeAmount","LOWEST","feeData","feeAmount","tickSpacing","TICK_SPACINGS","LOW_200","supportedChainIds","UniverseChainId","Base","LOW_300","LOW_400","LOW","MEDIUM","HIGH","lpStatusConfig","PositionStatus","IN_RANGE","color","i18nKey","OUT_OF_RANGE","CLOSED","UNSPECIFIED","SwapCoin","AnimatedSwapCoin","createIcon","name","getIcon","props","Svg","viewBox","fill","G","id","Path","d","defaultFill","hasLPFoTTransferError","currencyInfo","protocolVersion","currency","ProtocolVersion","V2","isNative","wrapped","buyFeeBps","gt","safetyInfo","blockaidFees","buyFeePercent","sellFeeBps","sellFeePercent","getProtocolVersionLabel","version","V3","V4","getProtocolItems","ProtocolItems","parseProtocolVersion","toLowerCase","getPositionUrl","position","chainUrlParam","getChainUrlParam","chainId","liquidityToken","address","tokenId","parseV3FeeTier","feeTier","parsedFee","parseInt","getPoolFromRest","pool","token0","token1","hooks","RestPool","V3Pool","fee","sqrtPriceX96","liquidity","tick","V4Pool","ZERO_ADDRESS","PoolPosition","currentPrice","currentLiquidity","currentTick","parseRestToken","token","nativeOnChain","Token","decimals","symbol","parseRestPosition","case","v2PairPosition","value","pair","Pair","CurrencyAmount","fromRawAmount","reserve0","reserve1","getPairFromRest","status","poolId","currency0Amount","liquidity0","currency1Amount","liquidity1","totalSupply","liquidityAmount","apr","v4hook","owner","isHidden","v3Position","sdkPosition","V3Position","tickLower","Number","tickUpper","token0UncollectedFees","token1UncollectedFees","amount0","amount1","v4Position","poolPosition","hook","V4Position","getPoolId","totalApr","unclaimedRewardsAmountUni","boostedApr","token0Address","token1Address","calculateInvertedValues","priceLower","priceUpper","quote","base","invert","calculateTickSpacingFromFeeAmount","Math","max","round","FLAGS","getFlagsFromContractAddress","contractAddress","last4Hex","slice","relevantBits","toString","Object","entries","filter","bitPosition","map","flag","getFlagWarning","t","Icon","info","dangerous","Pools","Flag","mergeFeeTiers","feeTiers","formatPercent","formattedDynamicFeeTier","result","formattedFee","isDynamicFeeTier","Percent","totalLiquidityUsd","percentage","created","tvl","getDefaultFeeTiersForChain","values","includes","reduce","acc","getDefaultFeeTiersForChainWithDynamicFeeTier","dynamicFeeTierEnabled","DYNAMIC_FEE_DATA","getDefaultFeeTiersWithData","feeTierData","defaultFeeTiersForChain","tier","title","selectionPercent","keys","isDynamicFeeTierAmount","feeAmountNumber","isNaN","formatTokenAmount","amount","formatted","formatUnits","BigInt","whole","decimal","split","e","PoolCache","static","getPoolAddress","factoryAddress","tokenA","tokenB","this","addresses","length","MAX_ENTRIES","addressA","addressB","key","found","find","address2","computePoolAddress","getChainInfo","sdkId","unshift","getPool","pools","pool2","JSBI","sqrtRatioX96","tickCurrent","Pool","PoolState","PoolState2","usePools","poolKeys","poolTokens","useMemo","currencyA","currencyB","equals","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","data","slot0s","isLoading","slot0sLoading","useReadContracts","contracts","assume0xAddress","abi","inputs","outputs","internalType","type","stateMutability","functionName","liquidities","liquiditiesLoading","_key","index","tokens","slot0","error","logger","tags","file","function","extra","useComputePoolState","usePool","PositionFlowStep","PositionFlowStep2","DEFAULT_POSITION_STATE","currencyInputs","userApprovedHook","getSortedCurrenciesTuple","a","b","getSortedCurrenciesTupleWithWrap","getCurrencyWithWrap","getCurrencyForProtocol","wrappedNative","WRAPPED_NATIVE_CURRENCY","areCurrenciesEqual","isToken","getCurrencyAddressWithWrap","getCurrencyAddressForTradingApi","poolEnabledProtocolVersion","pairEnabledProtocolVersion","validateCurrencyInput","currencies","getPairFromPositionStateAndRangeState","derivedPositionInfo","derivedPriceRangeInfo","creatingPoolOrPair","mockPair","getPoolFromPositionStateAndRangeState","mockPool","getInvertedTuple","tuple","inverted","getPrices","baseCurrency","quoteCurrency","pricesAtLimit","pricesAtTicks","state","fullRange","getInitialPrice","sortedCurrencies","initialPrice","price","currency0","currency1","invertPrice","Boolean","parsedQuoteAmount","tryParseCurrencyAmount","baseAmount","Price","quotient","getPrice","opts","priceOf","isInvalidPrice","encodeSqrtRatioX96","numerator","denominator","TickMath","MIN_SQRT_RATIO","MAX_SQRT_RATIO","createMockPair","getDependentAmountFromV2Pair","independentAmount","otherAmount","exactField","dependentToken","token0Wrapped","token1Wrapped","dependentTokenAmount","PositionField","TOKEN0","getDependentAmountFromV3Position","wrappedIndependentAmount","fromAmount0","useFullPrecision","fromAmount1","getDependentAmountFromV4Position","getV2PriceRangeInfo","priceInverted","baseToken","sortedTokens","priceDifference","getPriceDifference","defaultInitialPrice","deposit0Disabled","deposit1Disabled","getV3PriceRangeInfo","positionState","sortedToken0","sortedToken1","quoteToken","initialPriceTokens","invalidPrice","wrappedPrice","invertedPrice","priceToClosestV3Tick","currentSqrt","getSqrtRatioAtTick","createMockV3Pool","poolForPosition","tickSpaceLimits","nearestUsableTick","MIN_TICK","MAX_TICK","baseRangeInput","quoteRangeInput","maxPrice","minPrice","lowerTick","tryParseTick","upperTick","ticks","invalidRange","ticksAtLimit","getTickToPrice","isSorted","prices","outOfRange","lessThan","greaterThan","tryParseV4Tick","tryParsePrice","priceToClosestV4Tick","getV4PriceRangeInfo","initialPosition","sortedCurrency0","sortedCurrency1","initialPriceBaseCurrency","createMockV4Pool","isOutOfRange","getV4TickToPrice","generateAddLiquidityApprovalParams","account","derivedDepositInfo","generatePermitAsTransaction","currencyAmounts","apiProtocolItems","TOKEN1","simulateTransaction","walletAddress","protocol","getIndependentToken","unsortedCurrencies","independentField","token0Index","token1Index","independentToken","IndependentToken","TOKEN_0","TOKEN_1","generateCreateCalldataQueryParams","approvalCalldata","priceRangeState","slippageTolerance","dependentAmount","token0Approval","token1Approval","positionTokenApproval","permitData","token0PermitTransaction","token1PermitTransaction","independentAmount2","dependentAmount2","sortedToken02","sortedToken12","independentToken2","token0Index2","token1Index2","dependentField2","defaultDependentAmount","dependentField","initialDependentAmount","generateCreatePositionTxRequest","createCalldata","createCalldataQueryParams","validatedApprove0Request","validateTransactionRequest","validatedApprove1Request","validatedRevoke0Request","token0Cancel","validatedRevoke1Request","token1Cancel","validatedPermitRequest","validatePermit","validatedToken0PermitTransaction","validatedToken1PermitTransaction","txRequest","create","queryParams","batchPermitData","LiquidityTransactionType","Create","unsigned","createPositionRequestArgs","action","approveToken0Request","approveToken1Request","approvePositionTokenRequest","revokeToken0Request","revokeToken1Request","permit","method","PermitMethod","TypedData","typedData","getPoolIdOrAddressFromCreatePositionInfo","positionInfo","canUnwrapCurrency","getCurrencyWithOptionalUnwrap","shouldUnwrap","WARNING_PRICE_DIFFERENCE_PERCENTAGE","CRITICAL_PRICE_DIFFERENCE_PERCENTAGE","initialPriceNumber","defaultInitialPriceNumber","toSignificant","priceDifferencePercentage","priceDifferencePercentageRounded","priceDifferencePercentageAbsolute","abs","warning","WarningSeverity","High","Medium","absoluteValue","fraction","decimalValue","convertScientificNotationToNumber","match","withoutDecimals","priceToClosestTick","PositionField2","tickToPrice","tickToPriceV4"],"sourceRoot":""}