{"version":3,"file":"static/js/8602.b97919ff.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionCard.tsx?20e6","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionFeeStats.tsx?2582","webpack://@uniswap/interface/./src/components/Liquidity/LPIncentiveRewardsBadge.tsx?3846","../packages/ui/src/components/icons/EyeOff.tsx","components/Liquidity/LPIncentiveRewardsBadge.tsx","components/Liquidity/LiquidityPositionFeeStats.tsx","../packages/ui/src/components/icons/ArrowsLeftRight.tsx","../packages/ui/src/components/icons/Dollar.tsx","../packages/ui/src/components/icons/Minus.tsx","components/Liquidity/LiquidityPositionCard.tsx","hooks/useLpIncentivesFormattedEarnings.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [EyeOff, AnimatedEyeOff] = createIcon({\n  name: \"EyeOff\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M20.5901 10.52C21.1401 11.43 21.1401 12.57 20.5901 13.48C19.3601 15.53 16.61 19 12 19C11.252 19 10.5481 18.905 9.89407 18.74C9.67107 18.684 9.60094 18.3981 9.76394 18.2361L11.6599 16.3401C11.7759 16.2241 11.92 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12C16.25 11.92 16.2381 11.762 16.3211 11.679L19.063 8.93704C19.19 8.81004 19.4039 8.82313 19.5149 8.96413C19.9549 9.52013 20.3131 10.053 20.5901 10.52ZM21.5301 3.53005L3.53005 21.5301C3.38405 21.6761 3.19202 21.75 3.00002 21.75C2.80802 21.75 2.61599 21.6771 2.46999 21.5301C2.17699 21.2371 2.17699 20.762 2.46999 20.469L6.17507 16.7639C4.90507 15.6829 3.98394 14.436 3.40994 13.479C2.85994 12.569 2.85994 11.4291 3.40994 10.5191C4.63994 8.46907 7.39002 4.99905 12 4.99905C13.824 4.99905 15.3471 5.54595 16.6131 6.32595L20.47 2.46902C20.763 2.17602 21.238 2.17602 21.531 2.46902C21.824 2.76202 21.8231 3.23705 21.5301 3.53005ZM8.52004 14.419L9.60891 13.3301C9.38691 12.9351 9.25002 12.486 9.25002 12C9.25002 11.65 9.31996 11.32 9.43996 11.01C9.62996 11.17 9.86992 11.27 10.1399 11.27C10.7599 11.27 11.27 10.7599 11.27 10.1399C11.27 9.86992 11.17 9.62996 11.01 9.43996C11.32 9.31996 11.65 9.25002 12 9.25002C12.486 9.25002 12.9361 9.38691 13.3301 9.60891L14.419 8.52004C13.731 8.03804 12.899 7.75002 12 7.75002C9.66002 7.75002 7.75002 9.66002 7.75002 12C7.75002 12.9 8.03804 13.731 8.52004 14.419Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { Flex, Text } from \"ui/src\";\nimport Badge, { BadgeVariant } from \"uniswap/src/components/badge/Badge\";\nexport const LPIncentiveRewardsBadge = ({ formattedRewardApr }) => {\n  return <Badge\n    width=\"fit-content\"\n    badgeVariant={BadgeVariant.SOFT}\n    borderRadius=\"$rounded6\"\n    py=\"$spacing2\"\n    paddingLeft=\"$spacing4\"\n    paddingRight=\"$spacing4\"\n    marginBottom=\"$spacing1\"\n  >\r\n      <Flex row gap=\"$spacing4\" alignItems=\"center\">\r\n        <Text variant=\"buttonLabel4\" color=\"$accent1\">\r\n          +{formattedRewardApr}\r\n        </Text>\r\n        <Flex height={14} width={14} borderRadius={\"50%\"} backgroundColor=\"$neutral1\" centered>\r\n          <img height={12} width={12} src=\"/logo.svg\" alt=\"aborean-logo\" />\r\n        </Flex>\r\n        {\n    /* <CurrencyLogo currency={LP_INCENTIVES_REWARD_TOKEN} size={12} /> */\n  }\r\n      </Flex>\r\n    </Badge>;\n};\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CHART_WIDTH } from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport LPIncentiveFeeStatTooltip from \"components/Liquidity/LPIncentiveFeeStatTooltip\";\nimport { LPIncentiveRewardsBadge } from \"components/Liquidity/LPIncentiveRewardsBadge\";\nimport { useGetRangeDisplay } from \"components/Liquidity/hooks\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport { TextLoader } from \"pages/Pool/Positions/shared\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, styled, useMedia } from \"ui/src\";\nimport { ArrowUpDown } from \"ui/src/components/icons/ArrowUpDown\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nconst PrimaryText = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"body2\"\n});\nconst SecondaryText = styled(Text, {\n  color: \"$neutral2\",\n  variant: \"body3\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\"\n});\nfunction WrapChildrenForMediaSize({ children }) {\n  const media = useMedia();\n  const isMobile = media.sm;\n  if (isMobile) {\n    return <Flex row gap=\"$gap12\">\r\n        {children}\r\n      </Flex>;\n  }\n  return <>{children}</>;\n}\nfunction FeeStat({ children }) {\n  return <Flex flex={1} flexBasis={0} $sm={{ flexBasis: \"auto\" }}>\r\n      {children}\r\n    </Flex>;\n}\nfunction FeeStatLoader() {\n  return <Flex gap=\"$gap4\">\r\n      <TextLoader variant=\"body2\" width={60} />\r\n      <TextLoader variant=\"body3\" width={40} />\r\n    </Flex>;\n}\nexport function LiquidityPositionFeeStatsLoader() {\n  return <Flex row gap=\"$gap20\" justifyContent=\"space-between\" width=\"50%\" $md={{ width: \"100%\" }}>\r\n      <FeeStatLoader />\r\n      <FeeStatLoader />\r\n      <FeeStatLoader />\r\n    </Flex>;\n}\nexport function LiquidityPositionFeeStats({\n  formattedUsdValue,\n  formattedUsdFees,\n  formattedLpIncentiveEarnings,\n  priceOrdering,\n  tickLower,\n  tickUpper,\n  tickSpacing,\n  version,\n  apr,\n  currency0Info,\n  currency1Info,\n  cardHovered,\n  pricesInverted,\n  setPricesInverted,\n  lpIncentiveRewardApr,\n  totalApr,\n  hasRewards\n}) {\n  const { t } = useTranslation();\n  const earningsOrFees = hasRewards ? formattedLpIncentiveEarnings : formattedUsdFees ?? \"-\";\n  return <Flex\n    row\n    justifyContent=\"space-between\"\n    gap=\"$gap20\"\n    py=\"$spacing16\"\n    px=\"$spacing24\"\n    borderBottomLeftRadius=\"$rounded20\"\n    borderBottomRightRadius=\"$rounded20\"\n    backgroundColor={cardHovered ? \"$surface2Hovered\" : \"$surface2\"}\n  >\r\n      <Flex row gap=\"$gap20\" grow $sm={{ row: false }}>\r\n        <WrapChildrenForMediaSize>\r\n          <FeeStat>\r\n            {formattedUsdValue ? <PrimaryText>{formattedUsdValue}</PrimaryText> : <MouseoverTooltip text={<Trans i18nKey=\"position.valueUnavailable\" />} placement=\"top\">\r\n                <PrimaryText>-</PrimaryText>\r\n              </MouseoverTooltip>}\r\n            <SecondaryText>{t(\"pool.position\")}</SecondaryText>\r\n          </FeeStat>\r\n          <FeeStat>\r\n            {version === ProtocolVersion.V2 ? <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n                <Text variant=\"body2\" color=\"$neutral2\">\r\n                  {t(\"common.unavailable\")}\r\n                </Text>\r\n                <MouseoverTooltip text={t(\"fee.unavailable\")} placement=\"auto\">\r\n                  <Flex justifyContent=\"center\">\r\n                    <InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" />\r\n                  </Flex>\r\n                </MouseoverTooltip>\r\n              </Flex> : <PrimaryText>{earningsOrFees}</PrimaryText>}\r\n            <SecondaryText variant=\"body3\" color=\"$neutral2\">\r\n              {hasRewards ? t(\"pool.earnings\") : t(\"common.fees\")}\r\n            </SecondaryText>\r\n          </FeeStat>\r\n        </WrapChildrenForMediaSize>\r\n        {lpIncentiveRewardApr ? <LPIncentiveFeeStat\n    currency0Info={currency0Info}\n    currency1Info={currency1Info}\n    poolApr={apr}\n    lpIncentiveRewardApr={lpIncentiveRewardApr}\n    totalApr={totalApr}\n  /> : <APRFeeStat apr={apr} />}\r\n      </Flex>\r\n      <Flex $md={{ display: \"none\" }}>\r\n        <MinMaxRange\n    priceOrdering={priceOrdering}\n    tickLower={tickLower}\n    tickUpper={tickUpper}\n    tickSpacing={tickSpacing}\n    pricesInverted={pricesInverted}\n    setPricesInverted={setPricesInverted}\n  />\r\n      </Flex>\r\n    </Flex>;\n}\nexport function MinMaxRange({\n  priceOrdering,\n  tickLower,\n  tickUpper,\n  tickSpacing,\n  pricesInverted,\n  setPricesInverted\n}) {\n  const { t } = useTranslation();\n  const { maxPrice, minPrice, tokenASymbol, tokenBSymbol, isFullRange } = useGetRangeDisplay({\n    priceOrdering,\n    tickSpacing,\n    tickLower,\n    tickUpper,\n    pricesInverted\n  });\n  return <Flex group=\"item\" minWidth={224} alignSelf=\"flex-start\" width={CHART_WIDTH} $md={{ width: \"100%\" }} height=\"100%\">\r\n      {priceOrdering.priceLower && priceOrdering.priceUpper && !isFullRange ? <Flex\n    gap=\"$gap4\"\n    $md={{ row: true, justifyContent: \"flex-start\", gap: \"$gap24\", width: \"100%\" }}\n    $sm={{ row: false, gap: \"$gap4\", width: \"100%\" }}\n    justifyContent=\"center\"\n    height=\"100%\"\n  >\r\n          <Flex row gap=\"$gap12\" alignItems=\"center\">\r\n            <SecondaryText flexShrink={0}>\r\n              <Trans i18nKey=\"common.min\" />\r\n            </SecondaryText>\r\n            <SecondaryText color=\"$neutral1\">\r\n              {minPrice} {tokenASymbol} / {tokenBSymbol}\r\n            </SecondaryText>\r\n          </Flex>\r\n          <Flex row gap=\"$gap8\" alignItems=\"center\">\r\n            <SecondaryText flexShrink={0}>\r\n              <Trans i18nKey=\"common.max\" />\r\n            </SecondaryText>\r\n            <SecondaryText color=\"$neutral1\" display=\"flex\" alignItems=\"center\" gap=\"$gap4\">\r\n              <span\n    style={{\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    }}\n  >\r\n                {maxPrice}\r\n              </span>\r\n              <span>\r\n                {tokenASymbol} / {tokenBSymbol}\r\n              </span>\r\n            </SecondaryText>\r\n            <Flex\n    height=\"100%\"\n    justifyContent=\"center\"\n    onPress={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setPricesInverted((prevInverted) => !prevInverted);\n    }}\n    {...ClickableTamaguiStyle}\n    display=\"none\"\n    $group-item-hover={{ display: \"flex\" }}\n  >\r\n              <ArrowUpDown color=\"$neutral2\" size=\"$icon.16\" rotate=\"90deg\" />\r\n            </Flex>\r\n          </Flex>\r\n        </Flex> : <Flex grow height=\"100%\">\r\n          <SecondaryText>{t(\"common.fullRange\")}</SecondaryText>\r\n        </Flex>}\r\n    </Flex>;\n}\nfunction APRFeeStat({ apr }) {\n  const { formatPercent } = useLocalizationContext();\n  const { t } = useTranslation();\n  return <FeeStat>\r\n      <PrimaryText>{apr ? formatPercent(apr) : \"-\"}</PrimaryText>\r\n      <SecondaryText variant=\"body3\" color=\"$neutral2\">\r\n        {t(\"pool.apr\")}\r\n      </SecondaryText>\r\n    </FeeStat>;\n}\nfunction LPIncentiveFeeStat({\n  currency0Info,\n  currency1Info,\n  lpIncentiveRewardApr,\n  poolApr,\n  totalApr\n}) {\n  const { formatPercent } = useLocalizationContext();\n  const { t } = useTranslation();\n  return <Flex flex={1.3} flexBasis={0} $sm={{ flexBasis: \"auto\" }}>\r\n      <MouseoverTooltip\n    padding={0}\n    text={<LPIncentiveFeeStatTooltip\n      currency0Info={currency0Info}\n      currency1Info={currency1Info}\n      poolApr={poolApr}\n      lpIncentiveRewardApr={lpIncentiveRewardApr}\n      totalApr={totalApr}\n    />}\n    size={TooltipSize.Small}\n    placement=\"top\"\n  >\r\n        <>\r\n          <Flex row gap=\"$spacing6\" alignItems=\"center\">\r\n            <Text variant=\"body2\" color=\"$neutral1\">\r\n              {poolApr ? formatPercent(poolApr) : \"-\"}\r\n            </Text>\r\n            <LPIncentiveRewardsBadge formattedRewardApr={formatPercent(lpIncentiveRewardApr)} />\r\n          </Flex>\r\n          <SecondaryText variant=\"body3\" color=\"$neutral2\">\r\n            {t(\"pool.totalAPR\")}\r\n          </SecondaryText>\r\n        </>\r\n      </MouseoverTooltip>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { G, Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [ArrowsLeftRight, AnimatedArrowsLeftRight] = createIcon({\n  name: \"ArrowsLeftRight\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <G id=\"arrows-left-right\">\r\n        <Path\n    id=\"arrows-left-right_2\"\n    d=\"M14.2353 8.23617L11.5686 10.9028C11.5033 10.9682 11.418 11.0002 11.3326 11.0002C11.2473 11.0002 11.162 10.9675 11.0966 10.9028C10.9666 10.7728 10.9666 10.5615 11.0966 10.4315L13.194 8.33415H2.80334L4.90067 10.4315C5.03067 10.5615 5.03067 10.7728 4.90067 10.9028C4.83534 10.9682 4.75 11.0002 4.66467 11.0002C4.57934 11.0002 4.494 10.9675 4.42867 10.9028L1.762 8.23617C1.73133 8.20551 1.70656 8.16811 1.6899 8.12745C1.6559 8.04611 1.6559 7.95422 1.6899 7.87289C1.70656 7.83156 1.73133 7.79483 1.762 7.76417L4.42867 5.0975C4.55867 4.9675 4.77002 4.9675 4.90002 5.0975C5.03002 5.2275 5.03002 5.43885 4.90002 5.56885L2.80269 7.66619H13.1933L11.096 5.56885C10.966 5.43885 10.966 5.2275 11.096 5.0975C11.226 4.9675 11.4373 4.9675 11.5673 5.0975L14.234 7.76417C14.2647 7.79483 14.2893 7.83222 14.3059 7.87289C14.3399 7.95422 14.3399 8.04611 14.3059 8.12745C14.2906 8.16811 14.266 8.20551 14.2353 8.23617Z\"\n    fill={\"currentColor\"}\n  />\r\n      </G>\r\n    </Svg>,\n  defaultFill: \"#9B9B9B\"\n});\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Dollar, AnimatedDollar] = createIcon({\n  name: \"Dollar\",\n  getIcon: (props) => <Svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M17 15.63C17 13.627 15.641 11.884 13.691 11.389L10.795 10.671C10.274 10.539 9.826 10.2469 9.494 9.81995C9.175 9.41695 8.99899 8.902 8.99899 8.37C8.99899 7.06299 10.062 6 11.369 6H12.629C13.837 6 14.85 6.90806 14.985 8.11206C15.047 8.66106 15.543 9.05802 16.09 8.99402C16.639 8.93202 17.034 8.43704 16.972 7.88904C16.736 5.78404 15.035 4.18898 12.958 4.03198V3C12.958 2.45 12.508 2 11.958 2C11.408 2 10.958 2.45 10.958 3V4.04199C8.74299 4.25199 6.998 6.10097 6.998 8.37097C6.998 9.34997 7.327 10.306 7.918 11.054C8.511 11.819 9.35801 12.3711 10.307 12.6121L13.203 13.33C14.26 13.598 14.998 14.544 14.998 15.631C14.998 16.26 14.75 16.854 14.3 17.304C13.851 17.754 13.257 18.001 12.628 18.001H11.368C10.16 18.001 9.14699 17.093 9.01199 15.889C8.94999 15.34 8.451 14.945 7.907 15.007C7.358 15.069 6.963 15.5641 7.025 16.1121C7.258 18.1901 8.919 19.769 10.959 19.962V21C10.959 21.55 11.409 22 11.959 22C12.509 22 12.959 21.55 12.959 21V19.968C13.998 19.889 14.969 19.465 15.716 18.718C16.544 17.89 17 16.794 17 15.63Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [Minus, AnimatedMinus] = createIcon({\n  name: \"Minus\",\n  getIcon: (props) => <Svg viewBox=\"0 0 20 20\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M15.8333 10.8337H4.16659C3.70659 10.8337 3.33325 10.4603 3.33325 10.0003C3.33325 9.54033 3.70659 9.16699 4.16659 9.16699H15.8333C16.2933 9.16699 16.6666 9.54033 16.6666 10.0003C16.6666 10.4603 16.2933 10.8337 15.8333 10.8337Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport {\n  CHART_HEIGHT,\n  CHART_WIDTH,\n  LiquidityPositionRangeChartLoader,\n  WrappedLiquidityPositionRangeChart\n} from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { AdaptiveDropdown } from \"components/DropdownSelector/AdaptiveDropdown\";\nimport {\n  LiquidityPositionFeeStats,\n  LiquidityPositionFeeStatsLoader,\n  MinMaxRange\n} from \"components/Liquidity/LiquidityPositionFeeStats\";\nimport { LiquidityPositionInfo, LiquidityPositionInfoLoader } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { useGetRangeDisplay, usePositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport useHoverProps from \"hooks/useHoverProps\";\nimport { useLpIncentivesFormattedEarnings } from \"hooks/useLpIncentivesFormattedEarnings\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Shine, Text, TouchableArea, styled, useIsTouchDevice, useMedia } from \"ui/src\";\nimport { ArrowsLeftRight } from \"ui/src/components/icons/ArrowsLeftRight\";\nimport { Dollar } from \"ui/src/components/icons/Dollar\";\nimport { Eye } from \"ui/src/components/icons/Eye\";\nimport { EyeOff } from \"ui/src/components/icons/EyeOff\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { Minus } from \"ui/src/components/icons/Minus\";\nimport { MoreHorizontal } from \"ui/src/components/icons/MoreHorizontal\";\nimport { Plus } from \"ui/src/components/icons/Plus\";\nimport { RightArrow } from \"ui/src/components/icons/RightArrow\";\nimport { zIndexes } from \"ui/src/theme/zIndexes\";\nimport { MenuContent } from \"uniswap/src/components/menus/ContextMenuContent\";\nimport { ContextMenu } from \"uniswap/src/components/menus/ContextMenuV2\";\nimport { ContextMenuTriggerMode } from \"uniswap/src/components/menus/types\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useCurrencyInfo } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { togglePositionVisibility } from \"uniswap/src/features/visibility/slice\";\nimport { buildCurrencyId, currencyAddress } from \"uniswap/src/utils/currencyId\";\nimport { getPoolDetailsURL } from \"uniswap/src/utils/linking\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useBooleanState } from \"utilities/src/react/useBooleanState\";\nimport { isV4UnsupportedChain } from \"utils/networkSupportsV4\";\nimport { useAccount } from \"wagmi\";\nexport function LiquidityPositionCardLoader() {\n  return <Shine>\r\n      <Flex\n    p=\"$spacing24\"\n    gap=\"$spacing24\"\n    borderWidth=\"$spacing1\"\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    width=\"100%\"\n    overflow=\"hidden\"\n    $md={{ gap: \"$gap20\" }}\n  >\r\n        <Flex\n    row\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    $md={{ row: false, alignItems: \"flex-start\", gap: \"$gap20\" }}\n  >\r\n          <LiquidityPositionInfoLoader />\r\n          <LiquidityPositionRangeChartLoader height={CHART_HEIGHT} width={CHART_WIDTH} position=\"relative\" />\r\n        </Flex>\r\n        <LiquidityPositionFeeStatsLoader />\r\n      </Flex>\r\n    </Shine>;\n}\nfunction useDropdownOptions(liquidityPosition, showVisibilityOption, isVisible) {\n  const { t } = useTranslation();\n  const isOpenLiquidityPosition = liquidityPosition.status !== PositionStatus.CLOSED;\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const switchChain = useSwitchChain();\n  return useMemo(() => {\n    const chainInfo = getChainInfo(liquidityPosition.chainId);\n    const addLiquidityOption = {\n      onPress: () => {\n        dispatch(setOpenModal({ name: ModalName.AddLiquidity, initialState: liquidityPosition }));\n      },\n      label: t(\"common.addLiquidity\"),\n      Icon: Plus\n    };\n    const removeLiquidityOption = isOpenLiquidityPosition ? {\n      onPress: () => {\n        dispatch(setOpenModal({ name: ModalName.RemoveLiquidity, initialState: liquidityPosition }));\n      },\n      label: t(\"pool.removeLiquidity\"),\n      Icon: Minus\n    } : void 0;\n    const poolInfoOption = {\n      onPress: () => {\n        if (!liquidityPosition.poolId) {\n          return;\n        }\n        navigate(getPoolDetailsURL(liquidityPosition.poolId, liquidityPosition.chainId));\n      },\n      label: t(\"pool.info\"),\n      Icon: InfoCircleFilled\n    };\n    const hideOption = showVisibilityOption ? {\n      onPress: () => {\n        dispatch(\n          togglePositionVisibility({\n            poolId: liquidityPosition.poolId,\n            tokenId: liquidityPosition.tokenId,\n            chainId: liquidityPosition.chainId\n          })\n        );\n      },\n      label: isVisible ? t(\"common.hide.button\") : t(\"common.unhide\"),\n      Icon: isVisible ? EyeOff : Eye,\n      showDivider: true\n    } : void 0;\n    if (liquidityPosition.version === ProtocolVersion.V2) {\n      const migrateV2Option = isOpenLiquidityPosition ? {\n        onPress: async () => {\n          if (chainInfo.id !== account.chainId) {\n            await switchChain(chainInfo.id);\n          }\n          navigate(`/migrate/v2/${liquidityPosition.liquidityToken?.address ?? \"\"}`);\n        },\n        label: t(\"pool.migrateLiquidity\"),\n        Icon: RightArrow\n      } : void 0;\n      return [\n        isOpenLiquidityPosition ? addLiquidityOption : void 0,\n        // closed v2 positions cannot re-add liquidity since the erc20 liquidity token is permanently burned when closed. whereas v3 positions can be re-opened\n        removeLiquidityOption,\n        migrateV2Option,\n        poolInfoOption,\n        hideOption\n      ].filter((o) => o !== void 0);\n    }\n    const collectFeesOption = isOpenLiquidityPosition ? {\n      onPress: () => {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: liquidityPosition\n          })\n        );\n      },\n      label: t(\"pool.collectFees\"),\n      Icon: Dollar\n    } : void 0;\n    const showMigrateV3Option = isOpenLiquidityPosition && !isV4UnsupportedChain(liquidityPosition.chainId) && liquidityPosition.version !== ProtocolVersion.V4;\n    const migrateV3Option = showMigrateV3Option ? {\n      onPress: () => {\n        navigate(`/migrate/v3/${chainInfo.urlParam}/${liquidityPosition.tokenId}`);\n      },\n      label: t(\"pool.migrateLiquidity\"),\n      Icon: RightArrow\n    } : void 0;\n    return [\n      collectFeesOption,\n      addLiquidityOption,\n      removeLiquidityOption,\n      migrateV3Option,\n      poolInfoOption,\n      hideOption\n    ].filter((o) => o !== void 0);\n  }, [\n    account.chainId,\n    dispatch,\n    isOpenLiquidityPosition,\n    isVisible,\n    liquidityPosition,\n    navigate,\n    showVisibilityOption,\n    switchChain,\n    t\n  ]);\n}\nexport function LiquidityPositionCard({\n  liquidityPosition,\n  isMiniVersion,\n  showVisibilityOption,\n  showMigrateButton = false,\n  isVisible = true,\n  disabled = false\n}) {\n  const { value: isOpenContextMenu, setTrue: openContextMenu, setFalse: closeContextMenu } = useBooleanState(false);\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const isTouchDevice = useIsTouchDevice();\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const [hover, hoverProps] = useHoverProps();\n  const media = useMedia();\n  const isSmallScreen = media.sm;\n  const { fiatFeeValue0, fiatFeeValue1, fiatValue0, fiatValue1, priceOrdering, apr } = usePositionDerivedInfo(liquidityPosition);\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(\n    [liquidityPosition.currency0Amount.currency, liquidityPosition.currency1Amount.currency],\n    pricesInverted\n  );\n  const formattedUsdValue = fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    value: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatStandard\n  }) : void 0;\n  const { totalFormattedEarnings, hasRewards, formattedFeesValue } = useLpIncentivesFormattedEarnings({\n    liquidityPosition,\n    fiatFeeValue0,\n    fiatFeeValue1\n  });\n  const currency0Id = liquidityPosition?.version === ProtocolVersion.V4 ? buildCurrencyId(liquidityPosition.chainId, currencyAddress(liquidityPosition.currency0Amount.currency)) : void 0;\n  const currency1Id = liquidityPosition?.version === ProtocolVersion.V4 ? buildCurrencyId(liquidityPosition.chainId, currencyAddress(liquidityPosition.currency1Amount.currency)) : void 0;\n  const currency0Info = useCurrencyInfo(currency0Id);\n  const currency1Info = useCurrencyInfo(currency1Id);\n  const dropdownOptions = useDropdownOptions(liquidityPosition, showVisibilityOption, isVisible);\n  const priceOrderingForChart = useMemo(() => {\n    if (liquidityPosition?.version !== ProtocolVersion.V3 && liquidityPosition?.version !== ProtocolVersion.V4 || !liquidityPosition.position || !liquidityPosition.liquidity || !liquidityPosition.tickLower || !liquidityPosition.tickUpper) {\n      return {};\n    }\n    return {\n      base: baseCurrency,\n      priceLower: pricesInverted ? liquidityPosition.position.token0PriceUpper.invert() : liquidityPosition.position.token0PriceLower,\n      priceUpper: pricesInverted ? liquidityPosition.position.token0PriceLower.invert() : liquidityPosition.position.token0PriceUpper\n    };\n  }, [liquidityPosition, baseCurrency, pricesInverted]);\n  return <ContextMenu\n    menuItems={dropdownOptions}\n    isPlacementRight={!isMiniVersion}\n    disabled={disabled}\n    triggerMode={ContextMenuTriggerMode.Secondary}\n    isOpen={isOpenContextMenu}\n    openMenu={openContextMenu}\n    closeMenu={closeContextMenu}\n  >\r\n      {isMiniVersion ? <MiniPositionCard\n    menuOptions={dropdownOptions}\n    disabled={disabled}\n    positionInfo={liquidityPosition}\n    formattedUsdValue={formattedUsdValue}\n    formattedUsdFees={formattedFeesValue}\n    priceOrdering={priceOrdering}\n    tickSpacing={liquidityPosition.tickSpacing}\n    tickLower={liquidityPosition.tickLower}\n    tickUpper={liquidityPosition.tickUpper}\n  /> : <Flex\n    {...hoverProps}\n    group\n    position=\"relative\"\n    gap=\"$spacing16\"\n    borderWidth=\"$spacing1\"\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    width=\"100%\"\n    hoverStyle={!disabled ? { borderColor: \"$surface3Hovered\", backgroundColor: \"$surface1Hovered\" } : {}}\n  >\r\n          <Flex\n    row\n    pt=\"$spacing24\"\n    px=\"$spacing24\"\n    alignItems=\"center\"\n    justifyContent=\"space-between\"\n    overflow=\"hidden\"\n    $md={{ row: false, alignItems: \"flex-start\", gap: \"$gap20\" }}\n  >\r\n            <LiquidityPositionInfo\n    positionInfo={liquidityPosition}\n    isMiniVersion={isSmallScreen}\n    showMigrateButton={showMigrateButton}\n  />\r\n            <WrappedLiquidityPositionRangeChart\n    version={liquidityPosition.version}\n    chainId={liquidityPosition.chainId}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    positionStatus={liquidityPosition.status}\n    poolAddressOrId={liquidityPosition.poolId}\n    priceOrdering={priceOrderingForChart}\n  />\r\n            <Flex $md={{ display: \"block\" }} display=\"none\" width=\"100%\">\r\n              <MinMaxRange\n    priceOrdering={priceOrdering}\n    tickLower={liquidityPosition.tickLower}\n    tickUpper={liquidityPosition.tickUpper}\n    tickSpacing={liquidityPosition.tickSpacing}\n    pricesInverted={pricesInverted}\n    setPricesInverted={setPricesInverted}\n  />\r\n            </Flex>\r\n          </Flex>\r\n          <LiquidityPositionFeeStats\n    formattedUsdValue={formattedUsdValue}\n    formattedUsdFees={formattedFeesValue}\n    formattedLpIncentiveEarnings={totalFormattedEarnings}\n    hasRewards={hasRewards}\n    priceOrdering={priceOrdering}\n    tickSpacing={liquidityPosition.tickSpacing}\n    tickLower={liquidityPosition.tickLower}\n    tickUpper={liquidityPosition.tickUpper}\n    version={liquidityPosition.version}\n    currency0Info={currency0Info}\n    currency1Info={currency1Info}\n    apr={apr}\n    cardHovered={hover && !disabled}\n    pricesInverted={pricesInverted}\n    setPricesInverted={setPricesInverted}\n    lpIncentiveRewardApr={isLPIncentivesEnabled && liquidityPosition.version === ProtocolVersion.V4 ? liquidityPosition.boostedApr : void 0}\n    totalApr={isLPIncentivesEnabled && liquidityPosition.version === ProtocolVersion.V4 ? liquidityPosition.totalApr : void 0}\n  />\r\n          {!isTouchDevice && !disabled && <PositionDropdownMoreMenu menuOptions={dropdownOptions} />}\r\n        </Flex>}\r\n    </ContextMenu>;\n}\nfunction MiniPositionCard({\n  positionInfo,\n  menuOptions,\n  formattedUsdFees,\n  formattedUsdValue,\n  priceOrdering,\n  tickSpacing,\n  tickLower,\n  tickUpper,\n  disabled\n}) {\n  const { t } = useTranslation();\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const { maxPrice, minPrice, tokenASymbol, tokenBSymbol, isFullRange } = useGetRangeDisplay({\n    priceOrdering,\n    tickSpacing,\n    tickLower,\n    tickUpper,\n    pricesInverted\n  });\n  return <Flex\n    gap=\"$gap20\"\n    p=\"$padding16\"\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    position=\"relative\"\n    group\n    hoverStyle={!disabled ? { backgroundColor: \"$surface1Hovered\", borderColor: \"$surface3Hovered\" } : {}}\n    pressStyle={!disabled ? { backgroundColor: \"$surface1Pressed\", borderColor: \"$surface3Pressed\" } : {}}\n  >\r\n      <LiquidityPositionInfo hideStatusIndicator positionInfo={positionInfo} currencyLogoSize={32} isMiniVersion />\r\n      <Flex row gap=\"$gap12\">\r\n        <Flex>\r\n          {formattedUsdValue ? <Text variant=\"body2\">{formattedUsdValue}</Text> : <MouseoverTooltip text={t(\"position.valueUnavailable\")} placement=\"top\">\r\n              <Text variant=\"body2\">-</Text>\r\n            </MouseoverTooltip>}\r\n          <Text variant=\"body4\" color=\"$neutral2\">\r\n            {t(\"pool.position\")}\r\n          </Text>\r\n        </Flex>\r\n        <Flex>\r\n          <Text variant=\"body2\">{formattedUsdFees || t(\"common.unavailable\")}</Text>\r\n          <Text variant=\"body4\" color=\"$neutral2\">\r\n            {t(\"common.fees\")}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      {priceOrdering.priceLower && priceOrdering.priceUpper && !isFullRange ? <TouchableArea\n    {...ClickableTamaguiStyle}\n    onPress={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setPricesInverted((prevInverted) => !prevInverted);\n    }}\n  >\r\n          <Flex row gap={10}>\r\n            <Text variant=\"body4\">\r\n              {minPrice} {tokenASymbol} / {tokenBSymbol}\r\n            </Text>\r\n            <ArrowsLeftRight color=\"$neutral2\" size=\"$icon.16\" />\r\n            <Text variant=\"body4\">\r\n              {maxPrice} {tokenASymbol} / {tokenBSymbol}\r\n            </Text>\r\n          </Flex>\r\n        </TouchableArea> : <Text variant=\"body4\">{t(\"common.fullRange\")}</Text>}\r\n      <PositionDropdownMoreMenu menuOptions={menuOptions} />\r\n    </Flex>;\n}\nconst activeStyle = { opacity: 1, pointerEvents: \"auto\", backgroundColor: \"$scrim\" };\nconst PositionDetailsMenuButton = styled(Flex, {\n  animation: \"fast\",\n  opacity: 0,\n  borderRadius: \"$rounded12\",\n  p: \"$spacing8\",\n  variants: {\n    open: {\n      true: activeStyle\n    }\n  }\n});\nfunction PositionDropdownMoreMenu({ menuOptions }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownTrigger = <TouchableArea\n    zIndex={zIndexes.mask}\n    onPress={(event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setIsOpen(!isOpen);\n    }}\n  >\r\n      <PositionDetailsMenuButton $group-hover={activeStyle} open={isOpen} onPress={() => {\n  }}>\r\n        <MoreHorizontal size=\"$icon.16\" color=\"white\" />\r\n      </PositionDetailsMenuButton>\r\n    </TouchableArea>;\n  return <Flex position=\"absolute\" top=\"$spacing16\" right=\"$spacing16\">\r\n      <AdaptiveDropdown\n    alignRight\n    allowFlip\n    positionFixed\n    isOpen={isOpen}\n    toggleOpen={setIsOpen}\n    trigger={dropdownTrigger}\n    dropdownStyle={{\n      p: 0,\n      backgroundColor: \"transparent\",\n      borderRadius: \"$rounded20\",\n      minWidth: \"max-content\",\n      borderWidth: 0\n    }}\n  >\r\n        <MenuContent items={menuOptions} handleCloseMenu={() => setIsOpen(false)} />\r\n      </AdaptiveDropdown>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport JSBI from \"jsbi\";\nimport { useMemo } from \"react\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function useLpIncentivesFormattedEarnings({\n  liquidityPosition,\n  fiatFeeValue0,\n  fiatFeeValue1\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const { price: uniPrice } = useUSDCPrice(LP_INCENTIVES_REWARD_TOKEN);\n  return useMemo(() => {\n    const formatCurrency = (value) => {\n      return formatCurrencyAmount({\n        value,\n        type: NumberType.FiatStandard\n      });\n    };\n    const result = {\n      uniLpRewardsCurrencyAmount: void 0,\n      uniLpRewardsFiatValue: void 0,\n      totalFeesFiatValue: void 0,\n      formattedFeesValue: void 0,\n      formattedRewardsValue: void 0,\n      hasRewards: false,\n      hasFees: false,\n      totalEarningsFiatValue: void 0,\n      totalFormattedEarnings: void 0\n    };\n    if (fiatFeeValue0 && fiatFeeValue1) {\n      result.totalFeesFiatValue = fiatFeeValue0.add(fiatFeeValue1);\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    } else if (fiatFeeValue0) {\n      result.totalFeesFiatValue = fiatFeeValue0;\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    } else if (fiatFeeValue1) {\n      result.totalFeesFiatValue = fiatFeeValue1;\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    }\n    const shouldIncludeRewards = liquidityPosition.version === ProtocolVersion.V4 && liquidityPosition.unclaimedRewardsAmountUni && liquidityPosition.unclaimedRewardsAmountUni !== \"0\" && isLPIncentivesEnabled;\n    result.totalEarningsFiatValue = result.totalFeesFiatValue;\n    result.totalFormattedEarnings = result.formattedFeesValue;\n    if (!shouldIncludeRewards) {\n      return result;\n    }\n    const uniLpRewardsCurrencyAmount = CurrencyAmount.fromRawAmount(\n      LP_INCENTIVES_REWARD_TOKEN,\n      liquidityPosition.unclaimedRewardsAmountUni\n    );\n    result.uniLpRewardsCurrencyAmount = uniLpRewardsCurrencyAmount;\n    result.hasRewards = uniLpRewardsCurrencyAmount.greaterThan(0);\n    const uniLpRewardsFiatValue = uniPrice ? uniPrice.quote(uniLpRewardsCurrencyAmount) : void 0;\n    result.uniLpRewardsFiatValue = uniLpRewardsFiatValue;\n    if (uniLpRewardsFiatValue) {\n      result.formattedRewardsValue = formatCurrency(uniLpRewardsFiatValue);\n      result.totalEarningsFiatValue = CurrencyAmount.fromRawAmount(\n        uniLpRewardsFiatValue.currency,\n        result.totalFeesFiatValue ? JSBI.add(result.totalFeesFiatValue.quotient, uniLpRewardsFiatValue.quotient) : uniLpRewardsFiatValue.quotient\n      );\n      result.totalFormattedEarnings = formatCurrency(result.totalEarningsFiatValue);\n    }\n    return result;\n  }, [fiatFeeValue0, fiatFeeValue1, liquidityPosition, isLPIncentivesEnabled, uniPrice, formatCurrencyAmount]);\n}\n"],"names":["EyeOff","AnimatedEyeOff","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","LPIncentiveRewardsBadge","formattedRewardApr","Badge","width","badgeVariant","BadgeVariant","SOFT","borderRadius","py","paddingLeft","paddingRight","marginBottom","div","className","Text","variant","color","img","height","src","alt","_cn15","_cn14","_cn13","_cn12","_cn11","_cn10","_cn1","_cn0","_cn9","_cn8","_cn7","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","PrimaryText","styled","SecondaryText","overflow","textOverflow","whiteSpace","WrapChildrenForMediaSize","children","useMedia","sm","FeeStat","FeeStatLoader","TextLoader","LiquidityPositionFeeStatsLoader","LiquidityPositionFeeStats","formattedUsdValue","formattedUsdFees","formattedLpIncentiveEarnings","priceOrdering","tickLower","tickUpper","tickSpacing","version","apr","currency0Info","currency1Info","cardHovered","pricesInverted","setPricesInverted","lpIncentiveRewardApr","totalApr","hasRewards","t","useTranslation","earningsOrFees","concatClassName","MouseoverTooltip","text","Trans","i18nKey","placement","ProtocolVersion","V2","InfoCircleFilled","size","LPIncentiveFeeStat","poolApr","APRFeeStat","MinMaxRange","maxPrice","minPrice","tokenASymbol","tokenBSymbol","isFullRange","useGetRangeDisplay","Flex","group","minWidth","alignSelf","CHART_WIDTH","$md","priceLower","priceUpper","flexShrink","display","alignItems","gap","span","style","justifyContent","onPress","e","preventDefault","stopPropagation","prevInverted","ClickableTamaguiStyle","$group-item-hover","ArrowUpDown","rotate","formatPercent","useLocalizationContext","padding","LPIncentiveFeeStatTooltip","TooltipSize","Small","ArrowsLeftRight","AnimatedArrowsLeftRight","G","id","defaultFill","Dollar","AnimatedDollar","Minus","AnimatedMinus","LiquidityPositionCardLoader","Shine","LiquidityPositionInfoLoader","LiquidityPositionRangeChartLoader","CHART_HEIGHT","position","LiquidityPositionCard","liquidityPosition","isMiniVersion","showVisibilityOption","showMigrateButton","isVisible","disabled","value","isOpenContextMenu","setTrue","openContextMenu","setFalse","closeContextMenu","useBooleanState","formatCurrencyAmount","isTouchDevice","useIsTouchDevice","useState","isLPIncentivesEnabled","useFeatureFlag","FeatureFlags","LpIncentives","hover","hoverProps","useHoverProps","isSmallScreen","fiatFeeValue0","fiatFeeValue1","fiatValue0","fiatValue1","usePositionDerivedInfo","baseCurrency","quoteCurrency","getInvertedTuple","currency0Amount","currency","currency1Amount","add","type","NumberType","FiatStandard","totalFormattedEarnings","formattedFeesValue","useLpIncentivesFormattedEarnings","currency0Id","V4","buildCurrencyId","chainId","currencyAddress","currency1Id","useCurrencyInfo","dropdownOptions","isOpenLiquidityPosition","status","PositionStatus","CLOSED","dispatch","useAppDispatch","navigate","useNavigate","account","useAccount","switchChain","useSwitchChain","useMemo","chainInfo","getChainInfo","addLiquidityOption","setOpenModal","ModalName","AddLiquidity","initialState","label","Icon","Plus","removeLiquidityOption","RemoveLiquidity","poolInfoOption","poolId","getPoolDetailsURL","hideOption","togglePositionVisibility","tokenId","Eye","showDivider","migrateV2Option","liquidityToken","address","RightArrow","filter","o","ClaimFee","isV4UnsupportedChain","urlParam","useDropdownOptions","priceOrderingForChart","V3","liquidity","base","token0PriceUpper","invert","token0PriceLower","ContextMenu","menuItems","isPlacementRight","triggerMode","ContextMenuTriggerMode","Secondary","isOpen","openMenu","closeMenu","MiniPositionCard","menuOptions","positionInfo","borderWidth","borderColor","hoverStyle","backgroundColor","LiquidityPositionInfo","WrappedLiquidityPositionRangeChart","positionStatus","poolAddressOrId","boostedApr","PositionDropdownMoreMenu","p","pressStyle","hideStatusIndicator","currencyLogoSize","TouchableArea","activeStyle","opacity","pointerEvents","PositionDetailsMenuButton","animation","variants","open","true","setIsOpen","dropdownTrigger","zIndex","zIndexes","mask","event","$group-hover","MoreHorizontal","AdaptiveDropdown","alignRight","allowFlip","positionFixed","toggleOpen","trigger","dropdownStyle","MenuContent","items","handleCloseMenu","price","uniPrice","useUSDCPrice","LP_INCENTIVES_REWARD_TOKEN","formatCurrency","result","uniLpRewardsCurrencyAmount","uniLpRewardsFiatValue","totalFeesFiatValue","formattedRewardsValue","hasFees","totalEarningsFiatValue","greaterThan","shouldIncludeRewards","unclaimedRewardsAmountUni","CurrencyAmount","fromRawAmount","quote","JSBI","quotient"],"sourceRoot":""}