{"version":3,"file":"static/js/1133.0d17301b.chunk.js","mappings":"yOAKA,MAAMA,GAAUC,EAAAA,EAAAA,OAAK,IAAM,mGACpB,SAASC,IACd,MAAM,IAAEC,EAAG,UAAEC,EAAS,aAAEC,IAAiBC,EAAAA,EAAAA,MACnCC,IAAeC,EAAAA,EAAAA,MAAcC,SAASC,SAAS,WAC/CC,EAAcC,OAAOC,OAAOC,EAAAA,GAClC,OAAIX,IAAQC,GAAaO,EAAYD,SAASP,GACrC,CAAEA,MAAKC,eAAW,EAAQC,gBACxBF,IAAQC,EACV,CAAED,SAAK,EAAQC,UAAWD,EAAKE,gBAC7BE,IAAgBJ,EAClB,CAAEA,IAAKW,EAAAA,EAAWC,OAAQX,YAAWC,gBAClCF,EAGH,CAAEA,MAAKC,YAAWC,gBAFlB,CAAEF,SAAK,EAAQC,eAAW,EAAQC,kBAAc,EAI3D,CACe,SAASW,IACtB,MAAM,IAAEb,EAAG,UAAEC,EAAS,aAAEC,GAAiBH,IAEzC,KADqBM,EAAAA,EAAAA,MAAcC,SAASC,SAAS,WACpC,CACf,GAAIP,GAAOC,GAAaC,EACtB,OAAO,SAACY,EAAAA,GAAQA,CAACC,GAAI,YAAYf,KAAOC,KAAaC,IAAgBc,SAAO,IACvE,GAAIf,GAAaC,EACtB,OAAO,SAACY,EAAAA,GAAQA,CAACC,GAAI,mBAAmBd,KAAaC,IAAgBc,SAAO,IACvE,GAAIhB,GAAOC,EAChB,OAAO,SAACa,EAAAA,GAAQA,CAACC,GAAI,YAAYf,KAAOC,IAAae,SAAO,GAEhE,CACA,OAAO,SAACC,EAAAA,SAAQA,CAACC,UAAU,SAACC,EAAAA,EAAOC,IAAG,I,UAClC,SAACvB,EAAAA,CAAQwB,WAAYrB,KAE3B,C","sources":["pages/Explore/redirects.tsx"],"sourcesContent":["\"use strict\";\nimport { ExploreTab } from \"pages/Explore/constants\";\nimport { Suspense, lazy } from \"react\";\nimport { Navigate, useLocation, useParams } from \"react-router-dom\";\nimport { Loader } from \"ui/src/loading/Loader\";\nconst Explore = lazy(() => import(\"pages/Explore\"));\nexport function useExploreParams() {\n  const { tab, chainName, tokenAddress } = useParams();\n  const isLegacyUrl = !useLocation().pathname.includes(\"explore\");\n  const exploreTabs = Object.values(ExploreTab);\n  if (tab && !chainName && exploreTabs.includes(tab)) {\n    return { tab, chainName: void 0, tokenAddress };\n  } else if (tab && !chainName) {\n    return { tab: void 0, chainName: tab, tokenAddress };\n  } else if (isLegacyUrl && !tab) {\n    return { tab: ExploreTab.Tokens, chainName, tokenAddress };\n  } else if (!tab) {\n    return { tab: void 0, chainName: void 0, tokenAddress: void 0 };\n  } else {\n    return { tab, chainName, tokenAddress };\n  }\n}\nexport default function RedirectExplore() {\n  const { tab, chainName, tokenAddress } = useExploreParams();\n  const isLegacyUrl = !useLocation().pathname.includes(\"explore\");\n  if (isLegacyUrl) {\n    if (tab && chainName && tokenAddress) {\n      return <Navigate to={`/explore/${tab}/${chainName}/${tokenAddress}`} replace />;\n    } else if (chainName && tokenAddress) {\n      return <Navigate to={`/explore/tokens/${chainName}/${tokenAddress}`} replace />;\n    } else if (tab && chainName) {\n      return <Navigate to={`/explore/${tab}/${chainName}`} replace />;\n    }\n  }\n  return <Suspense fallback={<Loader.Box />}>\r\n      <Explore initialTab={tab} />\r\n    </Suspense>;\n}\n"],"names":["Explore","lazy","useExploreParams","tab","chainName","tokenAddress","useParams","isLegacyUrl","useLocation","pathname","includes","exploreTabs","Object","values","ExploreTab","Tokens","RedirectExplore","Navigate","to","replace","Suspense","fallback","Loader","Box","initialTab"],"sourceRoot":""}