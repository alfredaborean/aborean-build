{"version":3,"file":"static/js/9623.3ef0ef7a.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/pages/Pool/Positions/LegacyPositionPage.tsx?6149","webpack://@uniswap/interface/./src/pages/Pool/Positions/PositionPage.tsx?b171","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountsTile.tsx?e129","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionPriceRangeTile.tsx?4534","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionAmountRows.tsx?c7b9","webpack://@uniswap/interface/./src/components/Liquidity/LiquidityPositionStackedBars.tsx?2661","webpack://@uniswap/interface/./src/pages/NotFound/index.tsx?8b6d","webpack://@uniswap/interface/./src/components/DropdownSelector/index.tsx?94b8","../packages/uniswap/src/data/rest/getPosition.ts","components/BreadcrumbNav/index.tsx","components/DropdownSelector/FilterButton.tsx","components/DropdownSelector/index.tsx","hooks/useLpIncentivesFormattedEarnings.ts","pages/NotFound/index.tsx","components/Liquidity/LiquidityPositionAmountRows.tsx","components/Liquidity/LiquidityPositionStackedBars.tsx","components/Liquidity/PositionNFT.tsx","hooks/usePositionTokenURI.ts","components/Liquidity/LiquidityPositionAmountsTile.tsx","components/Liquidity/LiquidityPositionPriceRangeTile.tsx","pages/Pool/Positions/LegacyPositionPage.tsx","../packages/ui/src/components/icons/ExchangeHorizontal.tsx","pages/Pool/Positions/PositionPage.tsx","pages/Pool/Positions/create/BaseQuoteFiatAmount.tsx","utils/addressesAreEquivalent.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { useQuery } from \"@connectrpc/connect-query\";\nimport { getPosition } from \"@uniswap/client-pools/dist/pools/v1/api-PoolsService_connectquery\";\nimport { uniswapGetTransport } from \"uniswap/src/data/rest/base\";\nexport function useGetPositionQuery(input) {\n  return useQuery(getPosition, input, { transport: uniswapGetTransport, enabled: !!input });\n}\n","\"use strict\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { ClickableStyle } from \"theme/components/styles\";\nimport { useMedia } from \"ui/src\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nexport const BreadcrumbNavContainer = styled.nav`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  line-height: 24px;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  width: fit-content;\n`;\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  text-decoration: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`;\nconst CurrentPageBreadcrumbContainer = styled(Row)`\n  gap: 6px;\n`;\nconst PageTitleText = styled.h1`\n  font-weight: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: ${({ theme }) => theme.neutral1};\n  white-space: nowrap;\n  margin: 0;\n`;\nconst TokenAddressHoverContainer = styled(Row)`\n  cursor: ${({ isDisabled }) => isDisabled ? \"default\" : \"pointer\"};\n  gap: 10px;\n  white-space: nowrap;\n`;\nconst CopyIcon = styled(Copy)`\n  ${ClickableStyle}\n`;\nexport const CurrentPageBreadcrumb = ({\n  address,\n  currency,\n  poolName\n}) => {\n  const { t } = useTranslation();\n  const { neutral2 } = useTheme();\n  const [hover, setHover] = useState(false);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const isNative = currency?.isNative;\n  const tokenSymbolName = currency?.symbol ?? t(\"tdp.symbolNotFound\");\n  const media = useMedia();\n  const shouldEnableCopy = !media.md;\n  const shouldShowActions = shouldEnableCopy && hover && !isCopied;\n  return <CurrentPageBreadcrumbContainer\n    aria-current=\"page\"\n    data-testid=\"current-breadcrumb\"\n    onMouseEnter={() => setHover(true)}\n    onMouseLeave={() => setHover(false)}\n  >\r\n      <PageTitleText>{currency ? tokenSymbolName : poolName}</PageTitleText>{\" \"}\r\n      {(!currency || currency && !isNative) && <TokenAddressHoverContainer\n    data-testid=\"breadcrumb-token-address\"\n    isDisabled={!shouldEnableCopy}\n    onClick={shouldEnableCopy ? copy : void 0}\n  >\r\n          <MouseoverTooltip\n    placement=\"bottom\"\n    size={TooltipSize.Max}\n    forceShow={isCopied}\n    text={t(\"common.copied\")}\n    disabled\n  >\r\n            {shortenAddress(address)}\r\n          </MouseoverTooltip>\r\n          {shouldShowActions && <CopyIcon data-testid=\"breadcrumb-hover-copy\" width={16} height={16} color={neutral2} />}\r\n        </TokenAddressHoverContainer>}\r\n    </CurrentPageBreadcrumbContainer>;\n};\n","\"use strict\";\nimport { styled, Text } from \"ui/src\";\nconst FilterButton = styled(Text, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  height: \"100%\",\n  color: \"$neutral1\",\n  backgroundColor: \"$surface1\",\n  m: 0,\n  p: \"$spacing2\",\n  pr: 6,\n  pl: 14,\n  borderRadius: \"$rounded12\",\n  fontSize: \"$medium\",\n  lineHeight: 24,\n  fontWeight: \"$book\",\n  borderWidth: 1,\n  borderStyle: \"solid\",\n  borderColor: \"$surface3\",\n  whiteSpace: \"nowrap\",\n  hoverStyle: {\n    cursor: \"pointer\",\n    backgroundColor: \"$surface2\"\n  },\n  focusStyle: {\n    backgroundColor: \"$surface2\"\n  },\n  variants: {\n    active: {\n      true: {\n        backgroundColor: \"$surface2\",\n        focusStyle: {\n          backgroundColor: \"$surface2\"\n        }\n      }\n    }\n  }\n});\nexport default FilterButton;\n","\"use strict\";\nimport { AdaptiveDropdown } from \"components/DropdownSelector/AdaptiveDropdown\";\nimport FilterButton from \"components/DropdownSelector/FilterButton\";\nimport { useMemo } from \"react\";\nimport { Flex, Text, styled } from \"ui/src\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { iconSizes } from \"ui/src/theme/iconSizes\";\nexport const InternalMenuItem = styled(Text, {\n  display: \"flex\",\n  flex: 1,\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  px: \"$spacing8\",\n  py: \"$spacing12\",\n  gap: \"$gap12\",\n  color: \"$neutral1\",\n  textDecorationLine: \"none\",\n  cursor: \"pointer\",\n  borderRadius: \"$rounded8\",\n  hoverStyle: {\n    backgroundColor: \"$surface3\"\n  },\n  variants: {\n    disabled: {\n      true: {\n        opacity: 0.6,\n        cursor: \"default\"\n      }\n    }\n  }\n});\nexport function DropdownSelector({\n  menuLabel,\n  dataTestId,\n  hideChevron,\n  buttonStyle,\n  isOpen,\n  toggleOpen,\n  ...rest\n}) {\n  const Trigger = useMemo(\n    () => <FilterButton\n      onPress={() => toggleOpen(!isOpen)}\n      active={isOpen}\n      aria-label={dataTestId}\n      data-testid={dataTestId}\n      {...buttonStyle}\n    >\r\n        <Flex row justifyContent=\"space-between\" alignItems=\"center\" gap=\"$gap8\" width=\"100%\">\r\n          {typeof menuLabel === \"string\" ? <Text>{menuLabel}</Text> : menuLabel}\r\n          {!hideChevron && <RotatableChevron\n      animation=\"200ms\"\n      color=\"$neutral2\"\n      direction={isOpen ? \"up\" : \"down\"}\n      height={iconSizes.icon20}\n      width={iconSizes.icon20}\n    />}\r\n        </Flex>\r\n      </FilterButton>,\n    [toggleOpen, isOpen, dataTestId, buttonStyle, menuLabel, hideChevron]\n  );\n  return <AdaptiveDropdown isOpen={isOpen} toggleOpen={toggleOpen} trigger={Trigger} {...rest} />;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport JSBI from \"jsbi\";\nimport { useMemo } from \"react\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { useUSDCPrice } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function useLpIncentivesFormattedEarnings({\n  liquidityPosition,\n  fiatFeeValue0,\n  fiatFeeValue1\n}) {\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const isLPIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const { price: uniPrice } = useUSDCPrice(LP_INCENTIVES_REWARD_TOKEN);\n  return useMemo(() => {\n    const formatCurrency = (value) => {\n      return formatCurrencyAmount({\n        value,\n        type: NumberType.FiatStandard\n      });\n    };\n    const result = {\n      uniLpRewardsCurrencyAmount: void 0,\n      uniLpRewardsFiatValue: void 0,\n      totalFeesFiatValue: void 0,\n      formattedFeesValue: void 0,\n      formattedRewardsValue: void 0,\n      hasRewards: false,\n      hasFees: false,\n      totalEarningsFiatValue: void 0,\n      totalFormattedEarnings: void 0\n    };\n    if (fiatFeeValue0 && fiatFeeValue1) {\n      result.totalFeesFiatValue = fiatFeeValue0.add(fiatFeeValue1);\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    } else if (fiatFeeValue0) {\n      result.totalFeesFiatValue = fiatFeeValue0;\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    } else if (fiatFeeValue1) {\n      result.totalFeesFiatValue = fiatFeeValue1;\n      result.formattedFeesValue = formatCurrency(result.totalFeesFiatValue);\n      result.hasFees = result.totalFeesFiatValue.greaterThan(0);\n    }\n    const shouldIncludeRewards = liquidityPosition.version === ProtocolVersion.V4 && liquidityPosition.unclaimedRewardsAmountUni && liquidityPosition.unclaimedRewardsAmountUni !== \"0\" && isLPIncentivesEnabled;\n    result.totalEarningsFiatValue = result.totalFeesFiatValue;\n    result.totalFormattedEarnings = result.formattedFeesValue;\n    if (!shouldIncludeRewards) {\n      return result;\n    }\n    const uniLpRewardsCurrencyAmount = CurrencyAmount.fromRawAmount(\n      LP_INCENTIVES_REWARD_TOKEN,\n      liquidityPosition.unclaimedRewardsAmountUni\n    );\n    result.uniLpRewardsCurrencyAmount = uniLpRewardsCurrencyAmount;\n    result.hasRewards = uniLpRewardsCurrencyAmount.greaterThan(0);\n    const uniLpRewardsFiatValue = uniPrice ? uniPrice.quote(uniLpRewardsCurrencyAmount) : void 0;\n    result.uniLpRewardsFiatValue = uniLpRewardsFiatValue;\n    if (uniLpRewardsFiatValue) {\n      result.formattedRewardsValue = formatCurrency(uniLpRewardsFiatValue);\n      result.totalEarningsFiatValue = CurrencyAmount.fromRawAmount(\n        uniLpRewardsFiatValue.currency,\n        result.totalFeesFiatValue ? JSBI.add(result.totalFeesFiatValue.quotient, uniLpRewardsFiatValue.quotient) : uniLpRewardsFiatValue.quotient\n      );\n      result.totalFormattedEarnings = formatCurrency(result.totalEarningsFiatValue);\n    }\n    return result;\n  }, [fiatFeeValue0, fiatFeeValue1, liquidityPosition, isLPIncentivesEnabled, uniPrice, formatCurrencyAmount]);\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Trans } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport { Button, Flex } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound({ title, subtitle, actionButton }) {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const navigate = useNavigate();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper>\r\n      <Trace logImpression page={InterfacePageName.NOT_FOUND}>\r\n        <Header>\r\n          <Container>\r\n            {title ?? <Title>404</Title>}\r\n            {subtitle ?? <Paragraph color=\"neutral2\">\r\n                <Trans i18nKey=\"common.pageNotFound\" />\r\n              </Paragraph>}\r\n          </Container>\r\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\r\n        </Header>\r\n        {actionButton ?? <Flex row alignSelf=\"stretch\">\r\n            <Button onPress={() => navigate(\"/\")} variant=\"branded\">\r\n              <Trans i18nKey=\"notFound.oops\" />\r\n            </Button>\r\n          </Flex>}\r\n      </Trace>\r\n    </PageWrapper>;\n}\n","\"use strict\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { getChainUrlParam } from \"utils/chainParams\";\nexport function LiquidityPositionAmountRows({ rows }) {\n  const navigate = useNavigate();\n  const { formatCurrencyAmount } = useLocalizationContext();\n  const chainUrlParam = getChainUrlParam(rows[0].currencyInfo.currency.chainId || UniverseChainId.Mainnet);\n  const getLink = useCallback(\n    (currencyInfo) => {\n      return getTokenDetailsURL({\n        address: currencyInfo.currency.isToken ? currencyInfo.currency.address : void 0,\n        // util handles native addresses\n        chainUrlParam\n      });\n    },\n    [chainUrlParam]\n  );\n  return <Flex gap=\"$gap16\">\r\n      {rows.map((row) => <Flex row alignItems=\"center\" justifyContent=\"space-between\" key={row.currencyInfo.currencyId}>\r\n          <TouchableArea onPress={() => navigate(getLink(row.currencyInfo))} {...ClickableTamaguiStyle}>\r\n            <Flex row alignItems=\"center\" gap=\"$gap12\" maxWidth={160}>\r\n              <CurrencyLogo currencyInfo={row.currencyInfo} size={24} />\r\n              <Text variant=\"subheading1\" color=\"neutral1\" $lg={{ variant: \"subheading2\" }} numberOfLines={1}>\r\n                {formatCurrencyAmount({ value: row.fiatValue, type: NumberType.FiatTokenPrice })}\r\n              </Text>\r\n            </Flex>\r\n          </TouchableArea>\r\n          <Flex alignItems=\"flex-end\" gap=\"$gap4\">\r\n            <Flex row alignItems=\"center\" justifyContent=\"flex-end\" gap=\"$gap4\">\r\n              <Text variant=\"body2\" color=\"$neutral2\">\r\n                {formatCurrencyAmount({ value: row.currencyAmount, type: NumberType.TokenNonTx })}{\" \"}\r\n                {row.currencyAmount.currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>)}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { scaleLinear } from \"d3\";\nimport { useMemo } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nexport const LiquidityPositionStackedBars = ({ bars }) => {\n  const { formatPercent } = useLocalizationContext();\n  const scale = useMemo(() => {\n    const sum = bars.reduce((acc, bar) => acc.add(bar.value), new Percent(0, 100));\n    const sumValue = sum.equalTo(new Percent(0, 100)) ? 1 : Number(sum.toFixed(2));\n    return scaleLinear().domain([0, sumValue]).range([0, 100]);\n  }, [bars]);\n  const safePercentToNumber = (percent) => {\n    return percent.equalTo(new Percent(0, 100)) ? 0 : Number(percent.toFixed(2));\n  };\n  return <Flex gap=\"$gap8\">\r\n      <Flex row borderRadius=\"$roundedFull\" gap=\"$spacing2\" height={4}>\r\n        {bars.map((bar, i) => <Flex\n    key={i}\n    height={4}\n    borderRadius=\"$roundedFull\"\n    backgroundColor={bar.color}\n    width={`${scale(safePercentToNumber(bar.value))}%`}\n  />)}\r\n      </Flex>\r\n      <Flex row gap=\"$gap12\">\r\n        {bars.map((bar, i) => <Flex row alignItems=\"center\" gap=\"$spacing6\" key={i}>\r\n            <CurrencyLogo currencyInfo={bar.currencyInfo} size={16} />\r\n            <Text variant=\"body3\" color=\"$neutral1\">\r\n              {bar.value.equalTo(new Percent(0, 100)) ? \"0%\" : formatPercent(scale(safePercentToNumber(bar.value)))}\r\n            </Text>\r\n          </Flex>)}\r\n      </Flex>\r\n    </Flex>;\n};\n","\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  >\r\n      <NFTCanvas ref={canvasRef} />\r\n      <NFTImage\n    ref={imageRef}\n    src={image}\n    hidden={!animate}\n    onLoad={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n    }}\n  />\r\n    </NFTGrid>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { useV3NFTPositionManagerContract, useV4NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useMemo } from \"react\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nfunction useNFTPositionManagerContract(version, chainId) {\n  const v3Contract = useV3NFTPositionManagerContract(false, chainId);\n  const v4Contract = useV4NFTPositionManagerContract(false, chainId);\n  return version === ProtocolVersion.V3 ? v3Contract : v4Contract;\n}\nexport function usePositionTokenURI(tokenId, chainId, version) {\n  const contract = useNFTPositionManagerContract(version ?? ProtocolVersion.V3, chainId);\n  const { data, isLoading, error } = useQuery({\n    queryKey: [ReactQueryCacheKey.PositionTokenURI, tokenId, chainId, version],\n    queryFn: async () => {\n      const input = tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16);\n      if (!input) {\n        return null;\n      }\n      return await contract?.tokenURI(input);\n    }\n  });\n  return useMemo(() => {\n    if (error || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (isLoading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!data) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (!data || !data.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(data.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, isLoading, data, tokenId]);\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityPositionAmountsTile({\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) {\n  const navigate = useNavigate();\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  const chainUrlParam = getChainInfo(currencyInfo0?.currency.chainId || UniverseChainId.Mainnet).urlParam;\n  const currency0Link = getTokenDetailsURL({\n    address: currencyInfo0?.currency.isToken ? currencyInfo0?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  const currency1Link = getTokenDetailsURL({\n    address: currencyInfo1?.currency.isToken ? currencyInfo1?.currency.address : void 0,\n    // util handles native addresses\n    chainUrlParam\n  });\n  return <Flex borderRadius=\"$rounded12\" gap=\"$gap12\" backgroundColor=\"$surface3\" p=\"$padding16\">\r\n      <Flex row alignItems=\"center\" justifyContent=\"space-between\">\r\n        <TouchableArea onPress={() => navigate(currency0Link)} {...ClickableTamaguiStyle}>\r\n          <Flex row alignItems=\"center\" gap=\"$gap16\">\r\n            <CurrencyLogo currencyInfo={currencyInfo0} size={20} />\r\n            <Text variant=\"body2\" color=\"neutral1\">\r\n              {currency0Amount.currency.symbol}\r\n            </Text>\r\n          </Flex>\r\n        </TouchableArea>\r\n        <Flex row alignItems=\"center\" gap=\"$gap8\">\r\n          <Text variant=\"body2\" color=\"$neutral1\">\r\n            {formatCurrencyAmount({ value: currency0Amount })}\r\n          </Text>\r\n          {fiatValue0?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\r\n              ({formatCurrencyAmount({ value: fiatValue0, type: NumberType.FiatTokenPrice })})\r\n            </Text>}\r\n          {totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue0 && <Text variant=\"body2\" color=\"$neutral1\">\r\n              {formatPercent(new Percent(fiatValue0.quotient, totalFiatValue.quotient).toFixed(6))}\r\n            </Text>}\r\n        </Flex>\r\n      </Flex>\r\n      <Flex row alignItems=\"center\" justifyContent=\"space-between\">\r\n        <TouchableArea onPress={() => navigate(currency1Link)} {...ClickableTamaguiStyle}>\r\n          <Flex row alignItems=\"center\" gap=\"$gap16\">\r\n            <CurrencyLogo currencyInfo={currencyInfo1} size={20} />\r\n            <Text variant=\"body2\" color=\"$neutral1\">\r\n              {currency1Amount.currency.symbol}\r\n            </Text>\r\n          </Flex>\r\n        </TouchableArea>\r\n        <Flex row alignItems=\"center\" gap=\"$gap8\">\r\n          <Text variant=\"body2\" color=\"neutral1\">\r\n            {formatCurrencyAmount({ value: currency1Amount })}\r\n          </Text>\r\n          {fiatValue1?.greaterThan(0) && <Text variant=\"body2\" color=\"$neutral2\">\r\n              ({formatCurrencyAmount({ value: fiatValue1, type: NumberType.FiatTokenPrice })})\r\n            </Text>}\r\n          {totalFiatValue && totalFiatValue?.toExact() !== \"0\" && fiatValue1 && <Text variant=\"body2\" color=\"$neutral1\">\r\n              {formatPercent(new Percent(fiatValue1.quotient, totalFiatValue.quotient).toFixed(6))}\r\n            </Text>}\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { useGetRangeDisplay } from \"components/Liquidity/hooks\";\nimport { useMemo, useState } from \"react\";\nimport { Trans } from \"react-i18next\";\nimport { Flex, SegmentedControl, Text, styled } from \"ui/src\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst InnerTile = styled(Flex, {\n  grow: true,\n  alignItems: \"center\",\n  gap: \"$gap8\",\n  borderRadius: \"$rounded12\",\n  backgroundColor: \"$surface3\",\n  p: \"$padding16\"\n});\nexport function LiquidityPositionPriceRangeTile({\n  token1,\n  priceOrdering,\n  token0CurrentPrice,\n  token1CurrentPrice,\n  tickSpacing,\n  tickLower,\n  tickUpper\n}) {\n  const { formatPrice } = useFormatter();\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const currencyASymbol = token0CurrentPrice.baseCurrency.symbol;\n  const currencyBSymbol = token0CurrentPrice.quoteCurrency.symbol;\n  const controlOptions = useMemo(() => {\n    return [\n      {\n        value: currencyASymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyASymbol}</Text>\n      },\n      {\n        value: currencyBSymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyBSymbol}</Text>\n      }\n    ];\n  }, [currencyASymbol, currencyBSymbol]);\n  if (!currencyASymbol || !currencyBSymbol) {\n    throw new Error(\"LiquidityPositionPriceRangeTile: Currency symbols are required\");\n  }\n  const { minPrice, maxPrice, tokenASymbol, tokenBSymbol } = useGetRangeDisplay({\n    priceOrdering,\n    tickSpacing,\n    tickLower,\n    tickUpper,\n    pricesInverted\n  });\n  const currentPrice = useMemo(() => {\n    const { base } = priceOrdering;\n    if (!base) {\n      return void 0;\n    }\n    if (!pricesInverted) {\n      return base?.equals(token1) ? token1CurrentPrice : token0CurrentPrice;\n    }\n    return base?.equals(token1) ? token0CurrentPrice : token1CurrentPrice;\n  }, [priceOrdering, token0CurrentPrice, token1CurrentPrice, token1, pricesInverted]);\n  return <Flex backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" p=\"$padding12\" width=\"100%\" gap=\"$gap12\">\r\n      <Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex row alignItems=\"center\" gap=\"$gap12\">\r\n          <Text variant=\"subheading1\">\r\n            <Trans i18nKey=\"pool.priceRange\" />\r\n          </Text>\r\n        </Flex>\r\n        <SegmentedControl\n    size=\"large\"\n    options={controlOptions}\n    selectedOption={pricesInverted ? currencyBSymbol : currencyASymbol}\n    onSelectOption={(selected) => {\n      setPricesInverted(selected !== currencyASymbol);\n    }}\n  />\r\n      </Flex>\r\n      <Flex row width=\"100%\" gap=\"$gap12\" $lg={{ row: false }}>\r\n        <InnerTile>\r\n          <Text variant=\"subheading2\" color=\"$neutral2\">\r\n            <Trans i18nKey=\"pool.minPrice\" />\r\n          </Text>\r\n          <Text variant=\"heading2\" color=\"$neutral1\">\r\n            {minPrice}\r\n          </Text>\r\n          <Text variant=\"subheading2\" color=\"$neutral2\">\r\n            <Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  />\r\n          </Text>\r\n        </InnerTile>\r\n        <InnerTile>\r\n          <Text variant=\"subheading2\" color=\"$neutral2\">\r\n            <Trans i18nKey=\"pool.maxPrice\" />\r\n          </Text>\r\n          <Text variant=\"heading2\" color=\"$neutral1\">\r\n            {maxPrice}\r\n          </Text>\r\n          <Text variant=\"subheading2\" color=\"$neutral2\">\r\n            <Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  />\r\n          </Text>\r\n        </InnerTile>\r\n      </Flex>\r\n      <InnerTile>\r\n        <Text variant=\"subheading2\" color=\"$neutral2\">\r\n          <Trans i18nKey=\"common.marketPrice\" />\r\n        </Text>\r\n        <Text variant=\"heading2\" color=\"$neutral1\">\r\n          {formatPrice({ price: currentPrice, type: NumberType.TokenTx })}\r\n        </Text>\r\n        <Text variant=\"subheading2\" color=\"$neutral2\">\r\n          <Trans\n    i18nKey=\"common.feesEarnedPerBase\"\n    values={{\n      symbolA: tokenASymbol,\n      symbolB: tokenBSymbol\n    }}\n  />\r\n        </Text>\r\n      </InnerTile>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionAmountsTile } from \"components/Liquidity/LiquidityPositionAmountsTile\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionPriceRangeTile } from \"components/Liquidity/LiquidityPositionPriceRangeTile\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { usePositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen, LoadingRows } from \"components/Loader/styled\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport NotFound from \"pages/NotFound\";\nimport { LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { useMemo } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { Button, Flex, Main, Text, styled } from \"ui/src\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { currencyId, currencyIdToAddress } from \"uniswap/src/utils/currencyId\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { isV4UnsupportedChain } from \"utils/networkSupportsV4\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"$spacing32\",\n  width: \"100%\",\n  maxWidth: 1200,\n  zIndex: \"$default\",\n  py: \"$spacing24\",\n  px: \"$spacing40\",\n  $lg: {\n    px: \"$padding20\"\n  }\n});\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nexport function LegacyPositionPage() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const tokenId = parseTokenId(tokenIdFromUrl);\n  const chainId = useChainIdFromUrlParam();\n  const chainInfo = chainId ? getChainInfo(chainId) : void 0;\n  const account = useAccount();\n  const supportedAccountChainId = useSupportedChainId(account.chainId);\n  const { pathname } = useLocation();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED,\n    tokenId: tokenIdFromUrl,\n    chainId: chainId ?? supportedAccountChainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId, chainInfo?.id, positionInfo?.version);\n  usePendingLPTransactionsChangeListener(refetch);\n  const dispatch = useAppDispatch();\n  const { formatCurrencyAmount } = useFormatter();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0CurrentPrice,\n    token1CurrentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceOrdering\n  } = usePositionDerivedInfo(positionInfo);\n  if (positionLoading) {\n    return <BodyWrapper>\r\n        <LoadingRows>\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n        </LoadingRows>\r\n      </BodyWrapper>;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\">\r\n            <Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">\r\n              {t(\"position.notFound.description\")}\r\n            </Text>\r\n          </Flex>}\n      actionButton={<Button onPress={() => navigate(\"/positions\")}>{t(\"common.backToPositions\")}</Button>}\n    />;\n  }\n  const hasFees = feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || false;\n  const isOwner = addressesAreEquivalent(positionInfo.owner, account?.address);\n  const showV4UnsupportedTooltip = isV4UnsupportedChain(positionInfo.chainId);\n  return <Trace\n    logImpression\n    page={InterfacePageNameLocal.PositionDetails}\n    properties={{\n      pool_address: positionInfo.poolId,\n      label: [currency0Amount.currency.symbol, currency1Amount.currency.symbol].join(\"/\"),\n      type: positionInfo.version,\n      fee_tier: typeof positionInfo.feeTier === \"string\" ? parseInt(positionInfo.feeTier) : positionInfo.feeTier,\n      baseCurrencyId: currencyIdToAddress(currencyId(currency0Amount.currency)),\n      quoteCurrencyId: currencyIdToAddress(currencyId(currency1Amount.currency))\n    }}\n  >\r\n      <Helmet>\r\n        <title>\r\n          {t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount.currency.symbol,\n    baseSymbol: currency0Amount.currency.symbol\n  })}\r\n        </title>\r\n      </Helmet>\r\n      <BodyWrapper>\r\n        <Flex gap=\"$gap20\">\r\n          <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\r\n            <BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\">\r\n              <ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" />\r\n            </BreadcrumbNavLink>\r\n          </BreadcrumbNavContainer>\r\n          <Flex\n    row\n    $lg={{ row: false, alignItems: \"flex-start\", gap: \"$gap16\" }}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n  >\r\n            <LiquidityPositionInfo positionInfo={positionInfo} linkToPool />\r\n            {isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                {positionInfo.version === ProtocolVersion.V3 && status !== PositionStatus.CLOSED && <MouseoverTooltip\n    text={t(\"pool.migrateLiquidityDisabledTooltip\")}\n    disabled={!showV4UnsupportedTooltip}\n  >\r\n                    <Flex row>\r\n                      <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    isDisabled={showV4UnsupportedTooltip}\n    opacity={showV4UnsupportedTooltip ? 0.5 : 1}\n    onPress={() => {\n      navigate(`/migrate/v3/${chainInfo?.urlParam}/${tokenIdFromUrl}`);\n    }}\n  >\r\n                        <Trans i18nKey=\"pool.migrateToV4\" />\r\n                      </Button>\r\n                    </Flex>\r\n                  </MouseoverTooltip>}\r\n                <Flex row>\r\n                  <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.AddLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >\r\n                    <Trans i18nKey=\"common.addLiquidity\" />\r\n                  </Button>\r\n                </Flex>\r\n                {status !== PositionStatus.CLOSED && <Flex row>\r\n                    <Button\n    size=\"small\"\n    emphasis=\"primary\"\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.RemoveLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >\r\n                      <Trans i18nKey=\"pool.removeLiquidity\" />\r\n                    </Button>\r\n                  </Flex>}\r\n              </Flex>}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex row $lg={{ row: false }} width=\"100%\" gap=\"$gap16\">\r\n          <Flex\n    grow\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded12\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    flexBasis=\"50%\"\n  >\r\n            {\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}\r\n          </Flex>\r\n          <Flex grow gap=\"$gap12\" flexBasis=\"50%\">\r\n            <Flex borderRadius=\"$rounded16\" backgroundColor=\"$surface2\" p=\"$padding12\" gap=\"$gap16\">\r\n              <Flex gap=\"$gap8\">\r\n                <Text variant=\"subheading1\">\r\n                  <Trans i18nKey=\"common.liquidity\" />\r\n                </Text>\r\n                <Text variant=\"heading2\">\r\n                  {fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    amount: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\">\r\n                      <Flex alignItems=\"center\" row gap=\"$gap8\">\r\n                        <Text variant=\"body1\" color=\"$neutral2\">\r\n                          {t(\"pool.positions.usdValueUnavailable\")}\r\n                        </Text>\r\n                        <InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" />\r\n                      </Flex>\r\n                    </MouseoverTooltip>}\r\n                </Text>\r\n              </Flex>\r\n              <LiquidityPositionAmountsTile\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n  />\r\n            </Flex>\r\n            <Flex p=\"$padding12\" backgroundColor=\"$surface2\" borderRadius=\"$rounded16\">\r\n              <Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Text variant=\"subheading1\">\r\n                  <Trans i18nKey=\"pool.uncollectedFees\" />\r\n                </Text>\r\n                {hasFees && isOwner && <Flex row>\r\n                    <Button\n    size=\"xsmall\"\n    emphasis=\"primary\"\n    onPress={() => {\n      if (hasFees) {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: positionInfo\n          })\n        );\n      }\n    }}\n  >\r\n                      <Trans i18nKey=\"pool.collectFees\" />\r\n                    </Button>\r\n                  </Flex>}\r\n              </Flex>\r\n              <Text variant=\"heading2\" mt=\"$spacing8\" mb=\"$spacing16\">\r\n                {fiatFeeValue0 && fiatFeeValue1 ? formatCurrencyAmount({\n    amount: fiatFeeValue0.add(fiatFeeValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\">\r\n                    <Flex alignItems=\"center\" row gap=\"$gap8\">\r\n                      <Text variant=\"body1\" color=\"$neutral2\">\r\n                        {t(\"pool.positions.usdValueUnavailable\")}\r\n                      </Text>\r\n                      <InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" />\r\n                    </Flex>\r\n                  </MouseoverTooltip>}\r\n              </Text>\r\n              {feeValue0 && feeValue1 && <LiquidityPositionAmountsTile\n    currency0Amount={feeValue0}\n    currency1Amount={feeValue1}\n    fiatValue0={fiatFeeValue0}\n    fiatValue1={fiatFeeValue1}\n  />}\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n        {priceOrdering && token0CurrentPrice && token1CurrentPrice && <LiquidityPositionPriceRangeTile\n    token1={positionInfo.currency1Amount.currency}\n    priceOrdering={priceOrdering}\n    tickSpacing={positionInfo.tickSpacing}\n    tickLower={positionInfo.tickLower}\n    tickUpper={positionInfo.tickUpper}\n    token0CurrentPrice={token0CurrentPrice}\n    token1CurrentPrice={token1CurrentPrice}\n  />}\r\n      </BodyWrapper>\r\n    </Trace>;\n}\n","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [ExchangeHorizontal, AnimatedExchangeHorizontal] = createIcon({\n  name: \"ExchangeHorizontal\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M14.3532 9.68654L11.0198 13.0199C10.9225 13.1172 10.7945 13.1665 10.6665 13.1665C10.5385 13.1665 10.4105 13.1179 10.3131 13.0199C10.1178 12.8245 10.1178 12.5078 10.3131 12.3125L12.7931 9.83254H3.99982C3.72382 9.83254 3.49982 9.60854 3.49982 9.33254C3.49982 9.05654 3.72382 8.83254 3.99982 8.83254H13.9998C14.2025 8.83254 14.3846 8.95446 14.4619 9.14113C14.5392 9.32846 14.4965 9.54387 14.3532 9.68654ZM12.4998 5.99985C12.4998 5.72385 12.2758 5.49985 11.9998 5.49985H3.20717L5.68715 3.01987C5.88249 2.82454 5.88249 2.50785 5.68715 2.31252C5.49182 2.11718 5.17513 2.11718 4.9798 2.31252L1.64646 5.64585C1.50313 5.78852 1.46107 6.00378 1.53774 6.19045C1.61507 6.37711 1.79782 6.4992 1.99982 6.4992H11.9998C12.2758 6.49987 12.4998 6.27585 12.4998 5.99985Z\"\n    fill={\"currentColor\"}\n  />\r\n    </Svg>,\n  defaultFill: \"#9B9B9B\"\n});\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { WrappedLiquidityPositionRangeChart } from \"components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { LiquidityPositionAmountRows } from \"components/Liquidity/LiquidityPositionAmountRows\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionStackedBars } from \"components/Liquidity/LiquidityPositionStackedBars\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { usePositionDerivedInfo } from \"components/Liquidity/hooks\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen, LoadingRows } from \"components/Loader/styled\";\nimport { LP_INCENTIVES_REWARD_TOKEN } from \"components/LpIncentives/constants\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { useLpIncentivesFormattedEarnings } from \"hooks/useLpIncentivesFormattedEarnings\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport NotFound from \"pages/NotFound\";\nimport { LegacyPositionPage } from \"pages/Pool/Positions/LegacyPositionPage\";\nimport { BaseQuoteFiatAmount } from \"pages/Pool/Positions/create/BaseQuoteFiatAmount\";\nimport { getInvertedTuple } from \"pages/Pool/Positions/create/utils\";\nimport { BodyWrapper, LoadingRow } from \"pages/Pool/Positions/shared\";\nimport { useMemo, useState } from \"react\";\nimport { ArrowLeft } from \"react-feather\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { MultichainContextProvider } from \"state/multichain/MultichainContext\";\nimport { usePendingLPTransactionsChangeListener } from \"state/transactions/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport {\n  Button,\n  Flex,\n  SegmentedControl,\n  Text,\n  TouchableArea,\n  useMedia,\n  useSporeColors\n} from \"ui/src\";\nimport { ExchangeHorizontal } from \"ui/src/components/icons/ExchangeHorizontal\";\nimport { InfoCircleFilled } from \"ui/src/components/icons/InfoCircleFilled\";\nimport { RotatableChevron } from \"ui/src/components/icons/RotatableChevron\";\nimport { useDeviceDimensions } from \"ui/src/hooks/useDeviceDimensions\";\nimport { breakpoints } from \"ui/src/theme/breakpoints\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { HistoryDuration } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useGetPositionQuery } from \"uniswap/src/data/rest/getPosition\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfacePageNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useCurrencyInfos } from \"uniswap/src/features/tokens/useCurrencyInfo\";\nimport { buildCurrencyId, currencyId, currencyIdToAddress } from \"uniswap/src/utils/currencyId\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { useChainIdFromUrlParam } from \"utils/chainParams\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { isV4UnsupportedChain } from \"utils/networkSupportsV4\";\nimport { useAccount } from \"wagmi\";\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nexport default function PositionPageWrapper() {\n  const chainId = useChainIdFromUrlParam();\n  const isNewPositionPageEnabled = useFeatureFlag(FeatureFlags.PositionPageV2);\n  return <MultichainContextProvider initialChainId={chainId}>\r\n      {isNewPositionPageEnabled ? <PositionPage /> : <LegacyPositionPage />}\r\n    </MultichainContextProvider>;\n}\nfunction PositionPage() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const tokenId = parseTokenId(tokenIdFromUrl);\n  const chainId = useChainIdFromUrlParam();\n  const chainInfo = chainId ? getChainInfo(chainId) : void 0;\n  const account = useAccount();\n  const supportedAccountChainId = useSupportedChainId(account.chainId);\n  const { pathname } = useLocation();\n  const {\n    data,\n    isLoading: positionLoading,\n    refetch\n  } = useGetPositionQuery({\n    owner: account?.address ?? ZERO_ADDRESS,\n    protocolVersion: pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED,\n    tokenId: tokenIdFromUrl,\n    chainId: chainId ?? supportedAccountChainId\n  });\n  const position = data?.position;\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId, chainInfo?.id, positionInfo?.version);\n  usePendingLPTransactionsChangeListener(refetch);\n  const dispatch = useAppDispatch();\n  const isLpIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const media = useMedia();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0CurrentPrice,\n    token1CurrentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceOrdering\n  } = usePositionDerivedInfo(positionInfo);\n  const [priceInverted, setPriceInverted] = useState(false);\n  const [baseCurrency, quoteCurrency] = getInvertedTuple(\n    [currency0Amount?.currency, currency1Amount?.currency],\n    priceInverted\n  );\n  const [selectedHistoryDuration, setSelectedHistoryDuration] = useState(HistoryDuration.Month);\n  const [timePeriodDropdownOpen, setTimePeriodDropdownOpen] = useState(false);\n  const [mainViewDropdownOpen, setMainViewDropdownOpen] = useState(false);\n  const timePeriodOptions = useMemo(() => {\n    const options = [\n      [\n        HistoryDuration.Day,\n        t(\"token.priceExplorer.timeRangeLabel.day\"),\n        t(\"token.priceExplorer.timeRangeLabel.day.verbose\")\n      ],\n      [\n        HistoryDuration.Week,\n        t(\"token.priceExplorer.timeRangeLabel.week\"),\n        t(\"token.priceExplorer.timeRangeLabel.week.verbose\")\n      ],\n      [\n        HistoryDuration.Month,\n        t(\"token.priceExplorer.timeRangeLabel.month\"),\n        t(\"token.priceExplorer.timeRangeLabel.month.verbose\")\n      ],\n      [\n        HistoryDuration.Year,\n        t(\"token.priceExplorer.timeRangeLabel.year\"),\n        t(\"token.priceExplorer.timeRangeLabel.year.verbose\")\n      ],\n      [HistoryDuration.Max, t(\"token.priceExplorer.timeRangeLabel.all\")]\n    ].map((timePeriod) => ({\n      value: timePeriod[0],\n      display: <Text variant=\"buttonLabel3\">{timePeriod[1]}</Text>,\n      verboseDisplay: <Text variant=\"buttonLabel3\">{timePeriod[2] ?? timePeriod[1]}</Text>\n    }));\n    return {\n      options,\n      selected: selectedHistoryDuration\n    };\n  }, [selectedHistoryDuration, t]);\n  const [mainView, setMainView] = useState(\"chart\");\n  const mainViewOptions = useMemo(() => {\n    return [\n      {\n        value: \"chart\",\n        display: <Text variant=\"buttonLabel3\">{t(\"common.chart\")}</Text>\n      },\n      {\n        value: \"nft\",\n        display: <Text variant=\"buttonLabel3\">{t(\"common.nft\")}</Text>\n      }\n    ];\n  }, [t]);\n  const { fullWidth: screenWidth } = useDeviceDimensions();\n  const chartWidth = useMemo(() => {\n    if (screenWidth && screenWidth < breakpoints.lg) {\n      return screenWidth - 64;\n    }\n    if (screenWidth && screenWidth < breakpoints.xxl) {\n      return Math.min((screenWidth - 32) / 2, 620);\n    }\n    return 620;\n  }, [screenWidth]);\n  if (positionLoading) {\n    return <BodyWrapper>\r\n        <LoadingRows>\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n          <LoadingRow />\r\n        </LoadingRows>\r\n      </BodyWrapper>;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount || !baseCurrency || !quoteCurrency) {\n    return <NotFound\n      title={<Text variant=\"heading2\">{t(\"position.notFound\")}</Text>}\n      subtitle={<Flex centered maxWidth=\"75%\" mt=\"$spacing20\">\r\n            <Text color=\"$neutral2\" variant=\"heading3\" textAlign=\"center\">\r\n              {t(\"position.notFound.description\")}\r\n            </Text>\r\n          </Flex>}\n      actionButton={<Flex row centered>\r\n            <Button width=\"fit-content\" variant=\"branded\" onPress={() => navigate(\"/positions\")}>\r\n              {t(\"common.backToPositions\")}\r\n            </Button>\r\n          </Flex>}\n    />;\n  }\n  const hasFees = feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || false;\n  const isOwner = addressesAreEquivalent(positionInfo.owner, account?.address);\n  const showV4UnsupportedTooltip = isV4UnsupportedChain(positionInfo.chainId);\n  return <Trace\n    logImpression\n    page={InterfacePageNameLocal.PositionDetails}\n    properties={{\n      pool_address: positionInfo.poolId,\n      label: [currency0Amount.currency.symbol, currency1Amount.currency.symbol].join(\"/\"),\n      type: positionInfo.version,\n      fee_tier: typeof positionInfo.feeTier === \"string\" ? parseInt(positionInfo.feeTier) : positionInfo.feeTier,\n      baseCurrencyId: currencyIdToAddress(currencyId(currency0Amount.currency)),\n      quoteCurrencyId: currencyIdToAddress(currencyId(currency1Amount.currency))\n    }}\n  >\r\n      <Helmet>\r\n        <title>\r\n          {t(`liquidityPool.positions.page.title`, {\n    quoteSymbol: currency1Amount.currency.symbol,\n    baseSymbol: currency0Amount.currency.symbol\n  })}\r\n        </title>\r\n      </Helmet>\r\n      <BodyWrapper mb={100}>\r\n        <Flex gap=\"$gap20\">\r\n          <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\r\n            <BreadcrumbNavLink style={{ gap: \"8px\" }} to=\"/positions\">\r\n              <ArrowLeft size={14} /> <Trans i18nKey=\"pool.positions.title\" />\r\n            </BreadcrumbNavLink>\r\n          </BreadcrumbNavContainer>\r\n          <Flex\n    row\n    $lg={{ row: false, alignItems: \"flex-start\", gap: \"$gap16\" }}\n    justifyContent=\"space-between\"\n    alignItems=\"center\"\n    borderBottomWidth={1}\n    borderColor=\"$surface3\"\n    pb=\"$padding16\"\n  >\r\n            <LiquidityPositionInfo\n    positionInfo={positionInfo}\n    linkToPool\n    includeNetwork\n    includeLpIncentives={isLpIncentivesEnabled}\n  />\r\n            {isOwner && <Flex row gap=\"$gap12\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                {positionInfo.version === ProtocolVersion.V3 && status !== PositionStatus.CLOSED && <MouseoverTooltip\n    text={t(\"pool.migrateLiquidityDisabledTooltip\")}\n    disabled={!showV4UnsupportedTooltip}\n    style={media.sm ? { width: \"100%\", display: \"block\" } : {}}\n  >\r\n                    <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    $sm={{ width: \"100%\" }}\n    fill={false}\n    isDisabled={showV4UnsupportedTooltip}\n    opacity={showV4UnsupportedTooltip ? 0.5 : 1}\n    onPress={() => {\n      navigate(`/migrate/v3/${chainInfo?.urlParam}/${tokenIdFromUrl}`);\n    }}\n  >\r\n                      {t(\"pool.migrateToV4\")}\r\n                    </Button>\r\n                  </MouseoverTooltip>}\r\n                <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    $sm={{ width: \"100%\" }}\n    fill={false}\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.AddLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >\r\n                  {t(\"common.addLiquidity\")}\r\n                </Button>\r\n                {status !== PositionStatus.CLOSED && <Button\n    size=\"small\"\n    emphasis=\"secondary\"\n    fill={false}\n    $sm={{ width: \"100%\" }}\n    onPress={() => {\n      dispatch(\n        setOpenModal({\n          name: ModalName.RemoveLiquidity,\n          initialState: positionInfo\n        })\n      );\n    }}\n  >\r\n                    {t(\"pool.removeLiquidity\")}\r\n                  </Button>}\r\n                {hasFees && isOwner && <Button\n    size=\"small\"\n    maxWidth=\"fit-content\"\n    fill={false}\n    onPress={() => {\n      if (hasFees) {\n        dispatch(\n          setOpenModal({\n            name: ModalName.ClaimFee,\n            initialState: positionInfo\n          })\n        );\n      }\n    }}\n  >\r\n                    {t(\"pool.collectFees\")}\r\n                  </Button>}\r\n              </Flex>}\r\n          </Flex>\r\n        </Flex>\r\n        <Flex row justifyContent=\"space-between\" pt=\"$padding20\" $lg={{ row: false, gap: \"$gap24\" }}>\r\n          <Flex gap=\"$gap12\" width={chartWidth}>\r\n            <Flex row gap=\"$gap8\" alignItems=\"center\">\r\n              <BaseQuoteFiatAmount\n    price={priceInverted ? token1CurrentPrice : token0CurrentPrice}\n    base={priceInverted ? currency1Amount.currency : currency0Amount.currency}\n    quote={priceInverted ? currency0Amount.currency : currency1Amount.currency}\n    variant=\"heading3\"\n  />\r\n              <TouchableArea\n    onPress={() => {\n      setPriceInverted((prev) => !prev);\n    }}\n  >\r\n                <ExchangeHorizontal size=\"$icon.16\" />\r\n              </TouchableArea>\r\n            </Flex>\r\n            <Flex\n    animation=\"fast\"\n    height=\"auto\"\n    width=\"100%\"\n    $lg={{ width: \"100%\" }}\n    borderWidth={0}\n    borderColor=\"$surface3\"\n    pb=\"$padding12\"\n  >\r\n              {mainView === \"chart\" ? <WrappedLiquidityPositionRangeChart\n    version={positionInfo.version}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    poolAddressOrId={positionInfo.poolId}\n    chainId={positionInfo.chainId}\n    tickSpacing={positionInfo.tickSpacing}\n    feeTier={positionInfo.feeTier}\n    hook={positionInfo.v4hook}\n    positionStatus={status}\n    priceOrdering={priceInverted ? {\n      base: priceOrdering.quote,\n      priceLower: priceOrdering.priceUpper?.invert(),\n      priceUpper: priceOrdering.priceLower?.invert()\n    } : priceOrdering}\n    duration={selectedHistoryDuration}\n    width={chartWidth}\n    height={440}\n    showXAxis\n    showYAxis\n    showLiquidityBars\n    showChartBorder\n    crosshairEnabled={false}\n  /> : <Flex\n    width=\"100%\"\n    height=\"100%\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    py=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded20\"\n  >\r\n                  {\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}\r\n                </Flex>}\r\n            </Flex>\r\n            <Flex row alignItems=\"center\" justifyContent=\"space-between\" flexDirection=\"row-reverse\" width=\"100%\">\r\n              {isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth=\"$spacing1\"\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >\r\n                      {mainViewOptions.find((p) => p.value === mainView)?.display}\r\n                      <RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" />\r\n                    </Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160\n    }}\n    hideChevron\n    isOpen={mainViewDropdownOpen}\n    toggleOpen={() => {\n      setMainViewDropdownOpen((prev) => !prev);\n    }}\n  >\r\n                  {mainViewOptions.map((p) => <Flex\n    key={p.value}\n    width=\"100%\"\n    height={32}\n    row\n    alignItems=\"center\"\n    justifyContent=\"flex-start\"\n    p=\"$padding12\"\n    onPress={() => {\n      setMainView(p.value);\n    }}\n  >\r\n                      {p.display}\r\n                    </Flex>)}\r\n                </DropdownSelector> : <SegmentedControl\n    options={mainViewOptions}\n    selectedOption={mainView}\n    onSelectOption={(option) => {\n      setMainView(option);\n    }}\n  />}\r\n              {mainView === \"chart\" && (isMobileWeb ? <DropdownSelector\n    containerStyle={{ width: \"auto\" }}\n    menuLabel={<Flex\n      borderRadius=\"$rounded16\"\n      backgroundColor=\"transparent\"\n      row\n      centered\n      p=\"$padding8\"\n      pl=\"$padding12\"\n      borderColor=\"$surface3\"\n      borderWidth=\"$spacing1\"\n      gap=\"$gap6\"\n      {...ClickableTamaguiStyle}\n    >\r\n                        {timePeriodOptions.options.find((p) => p.value === timePeriodOptions.selected)?.display}\r\n                        <RotatableChevron direction=\"down\" height={16} width={16} color=\"$neutral2\" />\r\n                      </Flex>}\n    buttonStyle={{\n      borderWidth: 0,\n      p: 0\n    }}\n    dropdownStyle={{\n      width: 160,\n      left: 0\n    }}\n    hideChevron\n    isOpen={timePeriodDropdownOpen}\n    toggleOpen={() => {\n      setTimePeriodDropdownOpen((prev) => !prev);\n    }}\n  >\r\n                    {timePeriodOptions.options.map((p) => <Flex\n    key={p.value}\n    width=\"100%\"\n    height={32}\n    row\n    alignItems=\"center\"\n    justifyContent=\"flex-start\"\n    p=\"$padding12\"\n    onPress={() => {\n      setSelectedHistoryDuration(p.value);\n    }}\n  >\r\n                        {p.verboseDisplay}\r\n                      </Flex>)}\r\n                  </DropdownSelector> : <SegmentedControl\n    options={timePeriodOptions.options}\n    selectedOption={timePeriodOptions.selected}\n    onSelectOption={(option) => {\n      setSelectedHistoryDuration(option);\n    }}\n  />)}\r\n            </Flex>\r\n          </Flex>\r\n          <Flex gap=\"$spacing20\">\r\n            <PositionSection\n    position={position}\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n  />\r\n            <EarningsSection\n    positionInfo={positionInfo}\n    currency0Amount={currency0Amount}\n    currency1Amount={currency1Amount}\n    fiatValue0={fiatValue0}\n    fiatValue1={fiatValue1}\n    fiatFeeValue0={fiatFeeValue0}\n    fiatFeeValue1={fiatFeeValue1}\n    feeValue0={feeValue0}\n    feeValue1={feeValue1}\n  />\r\n            {isLpIncentivesEnabled && positionInfo?.version === ProtocolVersion.V4 && Boolean(positionInfo.boostedApr) && <APRSection\n    poolApr={positionInfo.apr}\n    lpIncentiveRewardApr={positionInfo.boostedApr}\n    totalApr={positionInfo.totalApr}\n  />}\r\n          </Flex>\r\n        </Flex>\r\n      </BodyWrapper>\r\n    </Trace>;\n}\nconst SectionContainer = ({ children }) => {\n  return <Flex\n    p=\"$spacing20\"\n    backgroundColor=\"$surface2\"\n    width={380}\n    $lg={{ width: \"100%\" }}\n    borderRadius=\"$rounded16\"\n    gap=\"$spacing24\"\n    $platform-web={{\n      height: \"min-content\"\n    }}\n  >\r\n      {children}\r\n    </Flex>;\n};\nconst PositionSection = ({\n  position,\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const token0Color = useSrcColor(\n    currencyInfo0?.logoUrl ?? void 0,\n    currencyInfo0?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const token1Color = useSrcColor(\n    currencyInfo1?.logoUrl ?? void 0,\n    currencyInfo1?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  const bars = useMemo(() => {\n    const percent0 = totalFiatValue?.greaterThan(0) && fiatValue0 ? new Percent(fiatValue0.quotient, totalFiatValue.quotient) : void 0;\n    const percent1 = totalFiatValue?.greaterThan(0) && fiatValue1 ? new Percent(fiatValue1.quotient, totalFiatValue.quotient) : void 0;\n    if (!percent0 || !percent1 || !token0Color || !token1Color || !currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    return [\n      { value: percent0, color: token0Color, currencyInfo: currencyInfo0 },\n      { value: percent1, color: token1Color, currencyInfo: currencyInfo1 }\n    ];\n  }, [currencyInfo0, currencyInfo1, fiatValue0, fiatValue1, token0Color, token1Color, totalFiatValue]);\n  const rows = useMemo(() => {\n    if (!currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: currencyInfo0,\n        currencyAmount: currency0Amount,\n        fiatValue: fiatValue0\n      },\n      {\n        currencyInfo: currencyInfo1,\n        currencyAmount: currency1Amount,\n        fiatValue: fiatValue1\n      }\n    ];\n  }, [currencyInfo0, currencyInfo1, currency0Amount, currency1Amount, fiatValue0, fiatValue1]);\n  return <SectionContainer>\r\n      <Flex gap=\"$gap8\">\r\n        <Text color=\"$neutral2\" variant=\"body2\">\r\n          <Trans i18nKey=\"pool.position\" />\r\n        </Text>\r\n        {position.status === PositionStatus.CLOSED ? <Text variant=\"heading2\" $lg={{ variant: \"heading3\" }}>\r\n            {formatCurrencyAmount({\n    amount: CurrencyAmount.fromRawAmount(currency0Amount.currency, 0),\n    type: NumberType.FiatTokenPrice\n  })}\r\n          </Text> : <>\r\n            <Text variant=\"heading2\" mb=\"$spacing12\">\r\n              {fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n    amount: fiatValue0.add(fiatValue1),\n    type: NumberType.FiatTokenPrice\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\">\r\n                  <Flex alignItems=\"center\" row gap=\"$gap8\">\r\n                    <Text variant=\"body1\" color=\"$neutral2\">\r\n                      {t(\"pool.positions.usdValueUnavailable\")}\r\n                    </Text>\r\n                    <InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" />\r\n                  </Flex>\r\n                </MouseoverTooltip>}\r\n            </Text>\r\n            {bars.length > 0 && <Flex mb=\"$spacing24\">\r\n                <LiquidityPositionStackedBars bars={bars} />\r\n              </Flex>}\r\n            {rows.length > 0 && <LiquidityPositionAmountRows rows={rows} />}\r\n          </>}\r\n      </Flex>\r\n    </SectionContainer>;\n};\nconst APRSection = ({\n  poolApr,\n  lpIncentiveRewardApr,\n  totalApr\n}) => {\n  const { address, chainId, symbol } = LP_INCENTIVES_REWARD_TOKEN;\n  const currencyInfo = useCurrencyInfo(address, chainId);\n  const { t } = useTranslation();\n  const { formatPercent } = useLocalizationContext();\n  const displayPoolApr = poolApr ? formatPercent(poolApr) : \"-\";\n  const displayRewardApr = lpIncentiveRewardApr ? formatPercent(lpIncentiveRewardApr) : \"-\";\n  const displayTotalApr = totalApr ? formatPercent(totalApr) : \"-\";\n  return <SectionContainer>\r\n      <Flex justifyContent=\"space-between\" gap=\"$gap8\">\r\n        <Text color=\"$neutral2\" variant=\"body2\">\r\n          {t(\"pool.totalAPR\")}\r\n        </Text>\r\n        <Text color=\"$neutral1\" variant=\"heading2\" pb=\"$spacing4\">\r\n          {displayTotalApr}\r\n        </Text>\r\n        <Flex row justifyContent=\"space-between\">\r\n          <Text color=\"$neutral2\" variant=\"body3\">\r\n            {t(\"pool.aprText\")}\r\n          </Text>\r\n          <Text color=\"$neutral1\" variant=\"body3\">\r\n            {displayPoolApr}\r\n          </Text>\r\n        </Flex>\r\n        <Flex row justifyContent=\"space-between\">\r\n          <Text color=\"$neutral2\" variant=\"body3\">\r\n            {t(\"pool.rewardAPR\")}\r\n          </Text>\r\n          <Flex row gap=\"$spacing6\" alignItems=\"center\">\r\n            <CurrencyLogo currencyInfo={currencyInfo} size={16} />\r\n            <Text color=\"$accent1\" variant=\"body3\">\r\n              {displayRewardApr} {symbol}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n    </SectionContainer>;\n};\nconst EarningsSection = ({\n  positionInfo,\n  currency0Amount,\n  currency1Amount,\n  fiatFeeValue0,\n  fiatFeeValue1,\n  feeValue0,\n  feeValue1\n}) => {\n  const { formatCurrencyAmount } = useFormatter();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const isLpIncentivesEnabled = useFeatureFlag(FeatureFlags.LpIncentives);\n  const { uniLpRewardsCurrencyAmount, uniLpRewardsFiatValue, totalEarningsFiatValue, hasRewards, hasFees } = useLpIncentivesFormattedEarnings({\n    liquidityPosition: positionInfo,\n    fiatFeeValue0,\n    fiatFeeValue1\n  });\n  const [currencyInfo0, currencyInfo1, rewardCurrencyInfo] = useCurrencyInfos([\n    currencyId(currency0Amount.currency),\n    currencyId(currency1Amount.currency),\n    buildCurrencyId(UniverseChainId.Mainnet, LP_INCENTIVES_REWARD_TOKEN.address)\n  ]);\n  const token0Color = useSrcColor(\n    currencyInfo0?.logoUrl ?? void 0,\n    currencyInfo0?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const token1Color = useSrcColor(\n    currencyInfo1?.logoUrl ?? void 0,\n    currencyInfo1?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const rewardTokenColor = useSrcColor(\n    rewardCurrencyInfo?.logoUrl ?? void 0,\n    rewardCurrencyInfo?.currency.name,\n    colors.surface2.val\n  ).tokenColor;\n  const bars = useMemo(() => {\n    const percent0 = totalEarningsFiatValue?.greaterThan(0) && fiatFeeValue0 ? new Percent(fiatFeeValue0.quotient, totalEarningsFiatValue.quotient) : void 0;\n    const percent1 = totalEarningsFiatValue?.greaterThan(0) && fiatFeeValue1 ? new Percent(fiatFeeValue1.quotient, totalEarningsFiatValue.quotient) : void 0;\n    if (!percent0 || !percent1 || !token0Color || !token1Color || !currencyInfo0 || !currencyInfo1) {\n      return [];\n    }\n    const rewards = isLpIncentivesEnabled && rewardTokenColor && uniLpRewardsFiatValue?.greaterThan(0) && totalEarningsFiatValue?.greaterThan(0) && hasRewards ? [\n      {\n        value: new Percent(uniLpRewardsFiatValue.quotient, totalEarningsFiatValue.quotient),\n        color: rewardTokenColor,\n        currencyInfo: rewardCurrencyInfo\n      }\n    ] : [];\n    return [\n      { value: percent0, color: token0Color, currencyInfo: currencyInfo0 },\n      { value: percent1, color: token1Color, currencyInfo: currencyInfo1 },\n      ...rewards\n    ];\n  }, [\n    totalEarningsFiatValue,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    token0Color,\n    token1Color,\n    currencyInfo0,\n    currencyInfo1,\n    isLpIncentivesEnabled,\n    rewardTokenColor,\n    uniLpRewardsFiatValue,\n    hasRewards,\n    rewardCurrencyInfo\n  ]);\n  const feeRows = useMemo(() => {\n    if (!currencyInfo0 || !currencyInfo1 || !feeValue0 || !feeValue1) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: currencyInfo0,\n        currencyAmount: feeValue0,\n        fiatValue: fiatFeeValue0\n      },\n      {\n        currencyInfo: currencyInfo1,\n        currencyAmount: feeValue1,\n        fiatValue: fiatFeeValue1\n      }\n    ];\n  }, [currencyInfo0, currencyInfo1, feeValue0, feeValue1, fiatFeeValue0, fiatFeeValue1]);\n  const rewardRows = useMemo(() => {\n    if (!isLpIncentivesEnabled || !rewardCurrencyInfo || !hasRewards) {\n      return [];\n    }\n    return [\n      {\n        currencyInfo: rewardCurrencyInfo,\n        currencyAmount: uniLpRewardsCurrencyAmount || CurrencyAmount.fromRawAmount(rewardCurrencyInfo.currency, 0),\n        fiatValue: uniLpRewardsFiatValue\n      }\n    ];\n  }, [isLpIncentivesEnabled, rewardCurrencyInfo, uniLpRewardsCurrencyAmount, uniLpRewardsFiatValue, hasRewards]);\n  return <SectionContainer>\r\n      <Flex gap=\"$gap8\">\r\n        <Text color=\"$neutral2\" variant=\"body2\">\r\n          {isLpIncentivesEnabled && hasRewards ? t(\"pool.earnings\") : t(\"common.feesEarned\")}\r\n        </Text>\r\n        {positionInfo.status === PositionStatus.CLOSED ? <Text variant=\"heading2\">\r\n            {formatCurrencyAmount({\n    amount: CurrencyAmount.fromRawAmount(currency0Amount.currency, 0),\n    type: NumberType.FiatRewards\n  })}\r\n          </Text> : <>\r\n            <Text variant=\"heading2\" mb=\"$spacing12\">\r\n              {totalEarningsFiatValue ? formatCurrencyAmount({\n    amount: totalEarningsFiatValue,\n    type: NumberType.FiatRewards\n  }) : <MouseoverTooltip text={t(\"pool.positions.usdValueUnavailable.tooltip\")} placement=\"right\">\r\n                  <Flex alignItems=\"center\" row gap=\"$gap8\">\r\n                    <Text variant=\"body1\" color=\"$neutral2\">\r\n                      {t(\"pool.positions.usdValueUnavailable\")}\r\n                    </Text>\r\n                    <InfoCircleFilled color=\"$neutral2\" size=\"$icon.16\" />\r\n                  </Flex>\r\n                </MouseoverTooltip>}\r\n            </Text>\r\n            {bars.length > 0 && <Flex mb=\"$spacing24\">\r\n                <LiquidityPositionStackedBars bars={bars} />\r\n              </Flex>}\r\n\r\n            {isLpIncentivesEnabled ? <>\r\n                {hasRewards && rewardRows.length > 0 && <>\r\n                    <Text color=\"$neutral2\" variant=\"body2\" mb=\"$spacing12\">\r\n                      {t(\"pool.rewards\")}\r\n                    </Text>\r\n                    <LiquidityPositionAmountRows rows={rewardRows} />\r\n                  </>}\r\n                {hasFees && feeRows.length > 0 && <>\r\n                    <Text color=\"$neutral2\" variant=\"body2\" mb=\"$spacing12\" mt={hasRewards ? \"$spacing24\" : \"$none\"}>\r\n                      {t(\"common.fees\")}\r\n                    </Text>\r\n                    <LiquidityPositionAmountRows rows={feeRows} />\r\n                  </>}\r\n              </> : feeRows.length > 0 && <LiquidityPositionAmountRows rows={feeRows} />}\r\n\r\n            {(!totalEarningsFiatValue || totalEarningsFiatValue.equalTo(0)) && <Text variant=\"body3\" color=\"$neutral3\">\r\n                {t(\"pool.earnings.empty\")}\r\n              </Text>}\r\n          </>}\r\n      </Flex>\r\n    </SectionContainer>;\n};\n","\"use strict\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Text } from \"ui/src\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function BaseQuoteFiatAmount({\n  price,\n  base,\n  quote,\n  variant\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const quoteCurrencyAmount = tryParseCurrencyAmount(price?.toFixed(), price?.quoteCurrency);\n  const usdPrice = useUSDCValue(quoteCurrencyAmount);\n  if (!price || !base || !quote) {\n    return null;\n  }\n  return <>\r\n      <Text variant={variant ?? \"body3\"} color=\"$neutral1\">\r\n        {formatPrice({ price, type: NumberType.TokenTx })} {quote?.symbol} = 1 {base?.symbol}\r\n      </Text>{\" \"}\r\n      <Text variant={variant ?? \"body3\"} color=\"$neutral2\">\r\n        (\r\n        {formatCurrencyAmount({\n    amount: usdPrice,\n    type: NumberType.FiatTokenPrice\n  })}\r\n        )\r\n      </Text>\r\n    </>;\n}\n","\"use strict\";\nexport function addressesAreEquivalent(a, b) {\n  if (!a || !b) {\n    return false;\n  }\n  return a === b || a.toLowerCase() === b.toLowerCase();\n}\n"],"names":["useGetPositionQuery","input","useQuery","getPosition","transport","uniswapGetTransport","enabled","BreadcrumbNavContainer","styled","nav","theme","neutral2","BreadcrumbNavLink","Link","transition","duration","fast","neutral3","CurrentPageBreadcrumbContainer","Row","PageTitleText","h1","neutral1","TokenAddressHoverContainer","isDisabled","CopyIcon","Copy","ClickableStyle","CurrentPageBreadcrumb","address","currency","poolName","t","useTranslation","useTheme","hover","setHover","useState","isCopied","setCopied","useCopyClipboard","copy","useCallback","isNative","tokenSymbolName","symbol","shouldEnableCopy","useMedia","md","shouldShowActions","aria-current","data-testid","onMouseEnter","onMouseLeave","onClick","MouseoverTooltip","placement","size","TooltipSize","Max","forceShow","text","disabled","shortenAddress","width","height","color","Text","display","flexDirection","backgroundColor","m","p","pr","pl","borderRadius","fontSize","lineHeight","fontWeight","borderWidth","borderStyle","borderColor","whiteSpace","hoverStyle","cursor","focusStyle","variants","active","true","_cn","InternalMenuItem","flex","alignItems","justifyContent","px","py","gap","textDecorationLine","opacity","DropdownSelector","menuLabel","dataTestId","hideChevron","buttonStyle","isOpen","toggleOpen","rest","Trigger","useMemo","FilterButton","onPress","aria-label","div","className","RotatableChevron","animation","direction","iconSizes","icon20","AdaptiveDropdown","trigger","useLpIncentivesFormattedEarnings","liquidityPosition","fiatFeeValue0","fiatFeeValue1","formatCurrencyAmount","useLocalizationContext","isLPIncentivesEnabled","useFeatureFlag","FeatureFlags","LpIncentives","price","uniPrice","useUSDCPrice","LP_INCENTIVES_REWARD_TOKEN","formatCurrency","value","type","NumberType","FiatStandard","result","uniLpRewardsCurrencyAmount","uniLpRewardsFiatValue","totalFeesFiatValue","formattedFeesValue","formattedRewardsValue","hasRewards","hasFees","totalEarningsFiatValue","totalFormattedEarnings","add","greaterThan","shouldIncludeRewards","version","ProtocolVersion","V4","unclaimedRewardsAmountUni","CurrencyAmount","fromRawAmount","quote","JSBI","quotient","Image","img","Container","Header","PageWrapper","breakpoint","lg","NotFound","title","subtitle","actionButton","isDarkMode","useIsDarkMode","isMobile","useIsMobile","navigate","useNavigate","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","Trans","i18nKey","src","darkImage","lightImage","alt","Button","variant","LiquidityPositionAmountRows","rows","chainUrlParam","getChainUrlParam","currencyInfo","chainId","UniverseChainId","Mainnet","getLink","getTokenDetailsURL","isToken","map","row","TouchableArea","ClickableTamaguiStyle","CurrencyLogo","$lg","numberOfLines","fiatValue","FiatTokenPrice","currencyAmount","TokenNonTx","currencyId","LiquidityPositionStackedBars","bars","formatPercent","scale","sum","reduce","acc","bar","Percent","sumValue","equalTo","Number","toFixed","scaleLinear","domain","range","safePercentToNumber","percent","i","Flex","getSnapshot","canvas","targetHeight","context","getContext","ratio","Math","round","devicePixelRatio","style","clearRect","drawImage","NFTGrid","NFTCanvas","NFTImage","PositionNFT","image","animate","setAnimate","canvasRef","useRef","imageRef","current","ref","hidden","onLoad","STARTS_WITH","usePositionTokenURI","tokenId","contract","v3Contract","useV3NFTPositionManagerContract","v4Contract","useV4NFTPositionManagerContract","V3","useNFTPositionManagerContract","data","isLoading","error","queryKey","ReactQueryCacheKey","PositionTokenURI","queryFn","BigNumber","toHexString","toString","tokenURI","valid","loading","startsWith","JSON","parse","atob","slice","length","error2","_cn4","_cn3","_cn2","LiquidityPositionAmountsTile","currency0Amount","currency1Amount","fiatValue0","fiatValue1","currencyInfo0","currencyInfo1","totalFiatValue","useCurrencyInfo","getChainInfo","urlParam","currency0Link","currency1Link","toExact","InnerTile","grow","LiquidityPositionPriceRangeTile","token1","priceOrdering","token0CurrentPrice","token1CurrentPrice","tickSpacing","tickLower","tickUpper","formatPrice","useFormatter","pricesInverted","setPricesInverted","currencyASymbol","baseCurrency","currencyBSymbol","quoteCurrency","controlOptions","Error","minPrice","maxPrice","tokenASymbol","tokenBSymbol","useGetRangeDisplay","currentPrice","base","equals","SegmentedControl","options","selectedOption","onSelectOption","selected","values","symbolA","symbolB","TokenTx","_cn11","_cn10","_cn1","_cn0","_cn9","_cn8","_cn7","_cn6","_cn5","BodyWrapper","Main","maxWidth","zIndex","LegacyPositionPage","account","chainInfo","positionInfo","feeValue0","feeValue1","tokenIdFromUrl","useParams","from","parseTokenId","useChainIdFromUrlParam","useAccount","supportedAccountChainId","useSupportedChainId","pathname","useLocation","positionLoading","refetch","owner","ZERO_ADDRESS","protocolVersion","includes","UNSPECIFIED","position","parseRestPosition","metadata","id","usePendingLPTransactionsChangeListener","dispatch","useAppDispatch","status","usePositionDerivedInfo","LoadingRows","LoadingRow","textAlign","isOwner","addressesAreEquivalent","showV4UnsupportedTooltip","isV4UnsupportedChain","InterfacePageNameLocal","PositionDetails","properties","pool_address","poolId","label","join","fee_tier","feeTier","parseInt","baseCurrencyId","currencyIdToAddress","quoteCurrencyId","Helmet","quoteSymbol","baseSymbol","to","ArrowLeft","LiquidityPositionInfo","linkToPool","PositionStatus","CLOSED","emphasis","setOpenModal","name","ModalName","AddLiquidity","initialState","RemoveLiquidity","LoadingFullscreen","amount","InfoCircleFilled","ClaimFee","mt","mb","ExchangeHorizontal","AnimatedExchangeHorizontal","createIcon","getIcon","props","Svg","viewBox","fill","Path","d","defaultFill","_cn14","_cn12","PositionPageWrapper","isNewPositionPageEnabled","PositionPageV2","MultichainContextProvider","initialChainId","PositionPage","mainViewOptions","timePeriodOptions","isLpIncentivesEnabled","media","priceInverted","setPriceInverted","getInvertedTuple","selectedHistoryDuration","setSelectedHistoryDuration","HistoryDuration","Month","timePeriodDropdownOpen","setTimePeriodDropdownOpen","mainViewDropdownOpen","setMainViewDropdownOpen","Day","Week","Year","timePeriod","verboseDisplay","mainView","setMainView","fullWidth","screenWidth","useDeviceDimensions","chartWidth","breakpoints","xxl","min","includeNetwork","includeLpIncentives","sm","$sm","BaseQuoteFiatAmount","prev","pb","WrappedLiquidityPositionRangeChart","poolAddressOrId","hook","v4hook","positionStatus","priceLower","priceUpper","invert","showXAxis","showYAxis","showLiquidityBars","showChartBorder","crosshairEnabled","isMobileWeb","containerStyle","centered","find","dropdownStyle","option","left","PositionSection","EarningsSection","Boolean","boostedApr","APRSection","poolApr","apr","lpIncentiveRewardApr","totalApr","SectionContainer","children","$platform-web","colors","useSporeColors","token0Color","useSrcColor","logoUrl","surface2","val","tokenColor","token1Color","percent0","percent1","displayPoolApr","displayRewardApr","displayTotalApr","rewardCurrencyInfo","useCurrencyInfos","buildCurrencyId","rewardTokenColor","rewards","feeRows","rewardRows","FiatRewards","quoteCurrencyAmount","tryParseCurrencyAmount","usdPrice","useUSDCValue","a","b","toLowerCase"],"sourceRoot":""}