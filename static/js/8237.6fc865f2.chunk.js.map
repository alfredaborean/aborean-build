{"version":3,"file":"static/js/8237.6fc865f2.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/ErrorCallout/index.tsx?5e87","../packages/ui/src/components/icons/RotateLeft.tsx","components/ErrorCallout/index.tsx","pages/Pool/Positions/create/CreatePositionContext.tsx","hooks/useIsPoolOutOfSync.ts","pages/Pool/Positions/create/hooks.tsx","pages/Pool/Positions/create/hooks/useDefaultInitialPrice.ts","pages/Pool/Positions/create/hooks/useNativeTokenPercentageBufferExperiment.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [RotateLeft, AnimatedRotateLeft] = createIcon({\n  name: \"RotateLeft\",\n  getIcon: (props) => <Svg viewBox=\"0 0 16 16\" fill=\"none\" {...props}>\r\n      <Path\n    d=\"M14.6667 8C14.6667 11.676 11.676 14.6667 8.00004 14.6667C5.45204 14.6667 3.16399 13.248 2.02999 10.9634C1.86599 10.6334 2.00077 10.2333 2.33077 10.07C2.65944 9.90532 3.06067 10.0413 3.224 10.3706C4.13133 12.1986 5.96137 13.334 8.00004 13.334C10.9407 13.334 13.3334 10.9413 13.3334 8.00065C13.3334 5.05998 10.9407 2.66732 8.00004 2.66732C6.07537 2.66732 4.33143 3.71065 3.39343 5.33398H5.33337C5.70204 5.33398 6.00004 5.63265 6.00004 6.00065C6.00004 6.36865 5.70204 6.66732 5.33337 6.66732H2.00004C1.63137 6.66732 1.33337 6.36865 1.33337 6.00065V2.66732C1.33337 2.29932 1.63137 2.00065 2.00004 2.00065C2.36871 2.00065 2.66671 2.29932 2.66671 2.66732V4.00602C3.90204 2.35736 5.86471 1.33398 8.00004 1.33398C11.676 1.33332 14.6667 4.324 14.6667 8Z\"\n    fill=\"currentColor\"\n  />\r\n    </Svg>\n});\n","\"use strict\";\nimport { useTranslation } from \"react-i18next\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, Text, TouchableArea } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { RotateLeft } from \"ui/src/components/icons/RotateLeft\";\nexport function ErrorCallout({\n  errorMessage,\n  description,\n  title,\n  isWarning = false,\n  action,\n  pressIcon = <RotateLeft size=\"$icon.16\" color=\"$neutral1\" />,\n  onPress\n}) {\n  const { t } = useTranslation();\n  if (!errorMessage) {\n    return null;\n  }\n  return <Flex row gap=\"$spacing12\" backgroundColor=\"$surface2\" borderRadius=\"$rounded16\" p=\"$padding12\">\r\n      <Flex\n    backgroundColor={isWarning ? \"$statusWarning2\" : \"$statusCritical2\"}\n    p=\"$padding12\"\n    borderRadius=\"$rounded12\"\n    alignSelf=\"flex-start\"\n  >\r\n        <AlertTriangleFilled color={isWarning ? \"$statusWarning\" : \"$statusCritical\"} size=\"$icon.20\" />\r\n      </Flex>\r\n      <Flex alignItems=\"flex-start\" flexWrap=\"wrap\" flexShrink={1} gap=\"$gap4\">\r\n        <Text color={isWarning ? \"$statusWarning\" : \"$statusCritical\"} variant=\"body3\">\r\n          {title || t(\"common.card.error.description\")}\r\n        </Text>\r\n        <Text variant=\"body3\" color=\"$neutral2\">\r\n          {description || t(\"pool.liquidity.data.error.message\")}\r\n        </Text>\r\n        {\n    /* the error message will be of type true or a string. True means there was an error but the message is unknown. */\n  }\r\n        {errorMessage !== true && <Text variant=\"body3\" color=\"$neutral3\">\r\n            {t(\"common.error.label\")}: {errorMessage}\r\n          </Text>}\r\n        {Boolean(onPress) && <TouchableArea {...ClickableTamaguiStyle} onPress={onPress} mt=\"$spacing2\">\r\n            <Flex row gap=\"$gap4\">\r\n              {pressIcon}\r\n              <Text variant=\"buttonLabel3\">{action || t(\"common.button.tryAgain\")}</Text>\r\n            </Flex>\r\n          </TouchableArea>}\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport {\n  DEFAULT_POSITION_STATE,\n  PositionFlowStep\n} from \"pages/Pool/Positions/create/types\";\nimport React, { useContext } from \"react\";\nimport { PositionField } from \"types/position\";\nexport const CreatePositionContext = React.createContext({\n  reset: () => void 0,\n  step: PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER,\n  setStep: () => void 0,\n  positionState: DEFAULT_POSITION_STATE,\n  setPositionState: () => void 0,\n  feeTierSearchModalOpen: false,\n  setFeeTierSearchModalOpen: () => void 0,\n  derivedPositionInfo: {\n    protocolVersion: ProtocolVersion.V4,\n    currencies: [void 0, void 0],\n    isPoolOutOfSync: false,\n    refetchPoolData: () => void 0,\n    defaultInitialPrice: void 0,\n    isDefaultInitialPriceLoading: false\n  },\n  dynamicFeeTierSpeedbumpData: {\n    open: false,\n    wishFeeData: DEFAULT_POSITION_STATE.fee\n  },\n  setDynamicFeeTierSpeedbumpData: () => void 0,\n  currentTransactionStep: void 0,\n  setCurrentTransactionStep: () => void 0\n});\nexport const useCreatePositionContext = () => {\n  return useContext(CreatePositionContext);\n};\nexport const DEFAULT_PRICE_RANGE_STATE = {\n  priceInverted: false,\n  fullRange: true,\n  minPrice: \"\",\n  maxPrice: \"\",\n  initialPrice: \"\"\n};\nexport const PriceRangeContext = React.createContext({\n  reset: () => void 0,\n  priceRangeState: DEFAULT_PRICE_RANGE_STATE,\n  setPriceRangeState: () => void 0,\n  derivedPriceRangeInfo: {\n    protocolVersion: ProtocolVersion.V4,\n    isSorted: false,\n    ticksAtLimit: [false, false],\n    invertPrice: false,\n    tickSpaceLimits: [0, 0],\n    deposit0Disabled: false,\n    deposit1Disabled: false,\n    ticks: [0, 0],\n    invalidPrice: false,\n    invalidRange: false,\n    outOfRange: false,\n    prices: [void 0, void 0],\n    pricesAtLimit: [void 0, void 0],\n    pricesAtTicks: [void 0, void 0]\n  }\n});\nexport const usePriceRangeContext = () => {\n  return useContext(PriceRangeContext);\n};\nexport const DEFAULT_DEPOSIT_STATE = {\n  exactField: PositionField.TOKEN0,\n  exactAmounts: {}\n};\nexport const DepositContext = React.createContext({\n  reset: () => void 0,\n  depositState: DEFAULT_DEPOSIT_STATE,\n  setDepositState: () => void 0,\n  derivedDepositInfo: {}\n});\nexport const useDepositContext = () => {\n  return useContext(DepositContext);\n};\nexport const CreateTxContext = React.createContext({ error: false });\nexport const useCreateTxContext = () => {\n  return useContext(CreateTxContext);\n};\n","\"use strict\";\nimport { CurrencyAmount, Fraction } from \"@uniswap/sdk-core\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport JSBI from \"jsbi\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nconst WARNING_THRESHOLD = new Fraction(5, 100);\nconst DECIMAL_SCALAR = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nfunction useMarketPrice(baseCurrency, quoteCurrency) {\n  const baseCurrencyUSDPrice = useUSDCValue(\n    baseCurrency ? CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(parseUnits(\"1\", baseCurrency?.decimals))) : void 0\n  );\n  const quoteCurrencyUSDPrice = useUSDCValue(\n    quoteCurrency ? CurrencyAmount.fromRawAmount(quoteCurrency, JSBI.BigInt(parseUnits(\"1\", quoteCurrency?.decimals))) : void 0\n  );\n  if (!baseCurrencyUSDPrice || !quoteCurrencyUSDPrice) {\n    return void 0;\n  }\n  const marketPrice = new Fraction(\n    baseCurrencyUSDPrice.multiply(DECIMAL_SCALAR).toFixed(0),\n    quoteCurrencyUSDPrice.multiply(DECIMAL_SCALAR).toFixed(0)\n  );\n  return marketPrice;\n}\nexport function useIsPoolOutOfSync(poolPrice) {\n  const marketPrice = useMarketPrice(poolPrice?.baseCurrency, poolPrice?.quoteCurrency);\n  if (!poolPrice || !marketPrice) {\n    return false;\n  }\n  const scaledMarketPrice = JSBI.BigInt(marketPrice.multiply(DECIMAL_SCALAR).toFixed(0));\n  const scaledPoolPrice = JSBI.BigInt(\n    poolPrice.quote(\n      CurrencyAmount.fromRawAmount(\n        poolPrice.baseCurrency,\n        JSBI.BigInt(parseUnits(\"1\", poolPrice.baseCurrency?.decimals))\n      )\n    ).multiply(DECIMAL_SCALAR).toFixed(0)\n  );\n  const difference = JSBI.lessThan(scaledMarketPrice, scaledPoolPrice) ? JSBI.subtract(scaledPoolPrice, scaledMarketPrice) : JSBI.subtract(scaledMarketPrice, scaledPoolPrice);\n  const divergence = new Fraction(difference, scaledMarketPrice);\n  return divergence.greaterThan(WARNING_THRESHOLD);\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { getPoolFromRest } from \"components/Liquidity/utils\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { checkIsNative, useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useIsPoolOutOfSync } from \"hooks/useIsPoolOutOfSync\";\nimport { PoolState, usePool } from \"hooks/usePools\";\nimport { PairState, useV2Pair } from \"hooks/useV2Pairs\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { useCreatePositionContext, usePriceRangeContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { useDefaultInitialPrice } from \"pages/Pool/Positions/create/hooks/useDefaultInitialPrice\";\nimport { useNativeTokenPercentageBufferExperiment } from \"pages/Pool/Positions/create/hooks/useNativeTokenPercentageBufferExperiment\";\nimport {\n  getCurrencyAddressWithWrap,\n  getCurrencyWithWrap,\n  getDependentAmountFromV2Pair,\n  getDependentAmountFromV3Position,\n  getDependentAmountFromV4Position,\n  getPairFromPositionStateAndRangeState,\n  getPoolFromPositionStateAndRangeState,\n  getSortedCurrenciesTuple,\n  getV2PriceRangeInfo,\n  getV3PriceRangeInfo,\n  getV4PriceRangeInfo,\n  pairEnabledProtocolVersion,\n  poolEnabledProtocolVersion,\n  validateCurrencyInput\n} from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport { parseCurrencyFromURLParameter } from \"state/swap/hooks\";\nimport { PositionField } from \"types/position\";\nimport { WRAPPED_NATIVE_CURRENCY, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useUrlContext } from \"uniswap/src/contexts/UrlContext\";\nimport { useGetPoolsByTokens } from \"uniswap/src/data/rest/getPools\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { useMaxAmountSpend } from \"uniswap/src/features/gas/useMaxAmountSpend\";\nimport { applyNativeTokenPercentageBuffer } from \"uniswap/src/features/gas/utils\";\nimport { useOnChainCurrencyBalance } from \"uniswap/src/features/portfolio/api\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { getValidAddress } from \"uniswap/src/utils/addresses\";\nimport { getParsedChainId } from \"utils/chainParams\";\nexport function useDerivedPositionInfo(state) {\n  const { chainId } = useMultichainContext();\n  const {\n    currencyInputs: { TOKEN0: token0Input, TOKEN1: token1Input },\n    protocolVersion\n  } = state;\n  const TOKEN0 = token0Input;\n  const TOKEN1 = token1Input;\n  const sortedCurrencies = getSortedCurrenciesTuple(TOKEN0, TOKEN1);\n  const validCurrencyInput = validateCurrencyInput(sortedCurrencies);\n  const sortedTokens = getSortedCurrenciesTuple(\n    getCurrencyWithWrap(sortedCurrencies[0], protocolVersion),\n    getCurrencyWithWrap(sortedCurrencies[1], protocolVersion)\n  );\n  const poolsQueryEnabled = poolEnabledProtocolVersion(protocolVersion) && validCurrencyInput;\n  const {\n    data: poolData,\n    isLoading: poolIsLoading,\n    refetch: refetchPoolData\n  } = useGetPoolsByTokens(\n    {\n      fee: state.fee.feeAmount,\n      chainId,\n      protocolVersions: [protocolVersion],\n      token0: getCurrencyAddressWithWrap(sortedCurrencies?.[0], protocolVersion),\n      token1: getCurrencyAddressWithWrap(sortedCurrencies?.[1], protocolVersion),\n      hooks: state.hook?.toLowerCase() ?? ZERO_ADDRESS\n      // BE does not accept checksummed addresses\n    },\n    poolsQueryEnabled\n  );\n  const pool = poolData?.pools && poolData.pools.length > 0 ? poolData.pools[0] : void 0;\n  const { pairsQueryEnabled } = useMemo(() => {\n    if (!pairEnabledProtocolVersion(protocolVersion)) {\n      return {\n        pairsQueryEnabled: false\n      };\n    }\n    if (!validateCurrencyInput(sortedTokens)) {\n      return {\n        pairsQueryEnabled: false\n      };\n    }\n    return {\n      pairsQueryEnabled: true\n    };\n  }, [protocolVersion, sortedTokens]);\n  const pairResult = useV2Pair(sortedTokens?.[0], sortedTokens?.[1]);\n  const pairIsLoading = pairResult[0] === PairState.LOADING;\n  const pair = pairsQueryEnabled ? pairResult[1] || void 0 : void 0;\n  const v3PoolResult = usePool(sortedTokens?.[0], sortedTokens?.[1], state.fee.feeAmount);\n  const v3Pool = protocolVersion === ProtocolVersion.V3 ? v3PoolResult[1] ?? void 0 : void 0;\n  const v3Price = v3Pool?.token0Price;\n  const { v4Pool, v4Price } = useMemo(() => {\n    const v4Pool2 = protocolVersion === ProtocolVersion.V4 ? getPoolFromRest({\n      pool,\n      token0: sortedCurrencies?.[0],\n      token1: sortedCurrencies?.[1],\n      protocolVersion,\n      hooks: pool?.hooks?.address || \"\"\n    }) : void 0;\n    return { v4Pool: v4Pool2, v4Price: v4Pool2?.token0Price };\n  }, [pool, protocolVersion, sortedCurrencies]);\n  const isPoolOutOfSync = useIsPoolOutOfSync(v4Price || v3Price);\n  const creatingPoolOrPair = useMemo(() => {\n    if (protocolVersion === ProtocolVersion.UNSPECIFIED) {\n      return false;\n    }\n    if (protocolVersion === ProtocolVersion.V2) {\n      return pairResult[0] === PairState.NOT_EXISTS;\n    }\n    if (protocolVersion === ProtocolVersion.V3) {\n      return v3PoolResult[0] === PoolState.NOT_EXISTS;\n    }\n    return poolData?.pools && poolData.pools.length === 0;\n  }, [protocolVersion, poolData?.pools, pairResult, v3PoolResult]);\n  const { price: defaultInitialPrice, isLoading: isDefaultInitialPriceLoading } = useDefaultInitialPrice({\n    currencies: state.currencyInputs,\n    // V2 create flow doesn't show the liquidity range chart so we always want\n    // to get the default initial price for DisplayCurrentPrice in deposit step\n    skip: !creatingPoolOrPair && pool?.protocolVersion === ProtocolVersion.V2\n  });\n  return useMemo(() => {\n    const currencies = [TOKEN0, TOKEN1];\n    if (protocolVersion === ProtocolVersion.UNSPECIFIED) {\n      return {\n        currencies,\n        protocolVersion: ProtocolVersion.V4,\n        isPoolOutOfSync: false,\n        defaultInitialPrice,\n        isDefaultInitialPriceLoading,\n        refetchPoolData: () => void 0\n      };\n    }\n    if (protocolVersion === ProtocolVersion.V2) {\n      return {\n        currencies,\n        protocolVersion,\n        pair,\n        creatingPoolOrPair,\n        poolOrPairLoading: pairIsLoading,\n        isPoolOutOfSync,\n        defaultInitialPrice,\n        isDefaultInitialPriceLoading,\n        refetchPoolData\n      };\n    }\n    if (protocolVersion === ProtocolVersion.V3) {\n      return {\n        currencies,\n        protocolVersion,\n        pool: v3Pool,\n        creatingPoolOrPair,\n        poolOrPairLoading: poolIsLoading,\n        isPoolOutOfSync,\n        poolId: pool?.poolId,\n        defaultInitialPrice,\n        isDefaultInitialPriceLoading,\n        refetchPoolData\n      };\n    }\n    return {\n      currencies,\n      protocolVersion,\n      // V4\n      pool: v4Pool,\n      creatingPoolOrPair,\n      poolOrPairLoading: poolIsLoading,\n      isPoolOutOfSync,\n      poolId: pool?.poolId,\n      boostedApr: pool?.boostedApr,\n      defaultInitialPrice,\n      isDefaultInitialPriceLoading,\n      refetchPoolData\n    };\n  }, [\n    TOKEN0,\n    TOKEN1,\n    protocolVersion,\n    v4Pool,\n    creatingPoolOrPair,\n    poolIsLoading,\n    isPoolOutOfSync,\n    pool?.poolId,\n    pair,\n    pairIsLoading,\n    defaultInitialPrice,\n    isDefaultInitialPriceLoading,\n    v3Pool,\n    refetchPoolData,\n    pool?.boostedApr\n  ]);\n}\nexport function useDerivedPriceRangeInfo(state) {\n  const { positionState, derivedPositionInfo } = useCreatePositionContext();\n  const priceRangeInfo = useMemo(() => {\n    if (derivedPositionInfo.protocolVersion === ProtocolVersion.V2) {\n      return getV2PriceRangeInfo({ state, derivedPositionInfo });\n    }\n    if (derivedPositionInfo.protocolVersion === ProtocolVersion.V3) {\n      return getV3PriceRangeInfo({ state, positionState, derivedPositionInfo });\n    }\n    return getV4PriceRangeInfo({ state, positionState, derivedPositionInfo });\n  }, [derivedPositionInfo, state, positionState]);\n  return priceRangeInfo;\n}\nexport function useDerivedDepositInfo(state) {\n  const account = useAccount();\n  const { derivedPositionInfo } = useCreatePositionContext();\n  const { derivedPriceRangeInfo } = usePriceRangeContext();\n  const { exactAmounts, exactField } = state;\n  const { protocolVersion } = derivedPriceRangeInfo;\n  const depositInfoProps = useMemo(() => {\n    if (protocolVersion === ProtocolVersion.V2) {\n      return {\n        protocolVersion,\n        pair: getPairFromPositionStateAndRangeState({ derivedPositionInfo, derivedPriceRangeInfo }),\n        address: account.address,\n        token0: derivedPositionInfo.currencies[0],\n        token1: derivedPositionInfo.currencies[1],\n        exactField,\n        exactAmounts\n      };\n    }\n    const tickLower = derivedPriceRangeInfo.ticks?.[0];\n    const tickUpper = derivedPriceRangeInfo.ticks?.[1];\n    const { invalidRange, outOfRange, deposit0Disabled, deposit1Disabled } = derivedPriceRangeInfo;\n    if (protocolVersion === ProtocolVersion.V3) {\n      return {\n        protocolVersion,\n        pool: getPoolFromPositionStateAndRangeState({ derivedPositionInfo, derivedPriceRangeInfo }),\n        address: account.address,\n        tickLower,\n        tickUpper,\n        token0: derivedPositionInfo.currencies[0],\n        token1: derivedPositionInfo.currencies[1],\n        exactField,\n        exactAmounts,\n        skipDependentAmount: outOfRange || invalidRange,\n        deposit0Disabled,\n        deposit1Disabled\n      };\n    }\n    return {\n      protocolVersion,\n      pool: getPoolFromPositionStateAndRangeState({ derivedPositionInfo, derivedPriceRangeInfo }),\n      address: account.address,\n      tickLower,\n      tickUpper,\n      token0: derivedPositionInfo.currencies[0],\n      token1: derivedPositionInfo.currencies[1],\n      exactField,\n      exactAmounts,\n      skipDependentAmount: outOfRange || invalidRange,\n      deposit0Disabled,\n      deposit1Disabled\n    };\n  }, [account.address, derivedPositionInfo, derivedPriceRangeInfo, exactAmounts, exactField, protocolVersion]);\n  return useDepositInfo(depositInfoProps);\n}\nexport function useTokenBalanceWithBuffer(currencyBalance, bufferPercentage) {\n  return useMemo(() => {\n    if (!currencyBalance) {\n      return void 0;\n    }\n    return applyNativeTokenPercentageBuffer(currencyBalance, bufferPercentage);\n  }, [currencyBalance, bufferPercentage]);\n}\nexport function useDepositInfo(state) {\n  const account = useAccount();\n  const bufferPercentage = useNativeTokenPercentageBufferExperiment();\n  const { protocolVersion, address, token0, token1, exactField, exactAmounts, deposit0Disabled, deposit1Disabled } = state;\n  const { balance: token0Balance } = useOnChainCurrencyBalance(token0, address);\n  const { balance: token1Balance } = useOnChainCurrencyBalance(token1, address);\n  const token0BalanceWithBuffer = useTokenBalanceWithBuffer(token0Balance, bufferPercentage);\n  const token1BalanceWithBuffer = useTokenBalanceWithBuffer(token1Balance, bufferPercentage);\n  const token0MaxAmount = useMaxAmountSpend({ currencyAmount: token0BalanceWithBuffer });\n  const token1MaxAmount = useMaxAmountSpend({ currencyAmount: token1BalanceWithBuffer });\n  const [independentToken, dependentToken] = exactField === PositionField.TOKEN0 ? [token0, token1] : [token1, token0];\n  const independentAmount = tryParseCurrencyAmount(exactAmounts[exactField], independentToken);\n  const otherAmount = tryParseCurrencyAmount(\n    exactAmounts[exactField === PositionField.TOKEN0 ? PositionField.TOKEN1 : PositionField.TOKEN0],\n    dependentToken\n  );\n  const dependentAmount = useMemo(() => {\n    const shouldSkip = state.skipDependentAmount || protocolVersion === ProtocolVersion.UNSPECIFIED;\n    if (shouldSkip) {\n      return dependentToken && CurrencyAmount.fromRawAmount(dependentToken, 0);\n    }\n    if (protocolVersion === ProtocolVersion.V2) {\n      return getDependentAmountFromV2Pair({\n        independentAmount,\n        otherAmount,\n        pair: state.pair,\n        exactField,\n        token0,\n        token1,\n        dependentToken\n      });\n    }\n    const { tickLower, tickUpper } = state;\n    if (tickLower === void 0 || tickUpper === void 0 || !state.pool || !independentAmount) {\n      return void 0;\n    }\n    const dependentTokenAmount = protocolVersion === ProtocolVersion.V3 ? getDependentAmountFromV3Position({\n      independentAmount,\n      pool: state.pool,\n      tickLower,\n      tickUpper\n    }) : getDependentAmountFromV4Position({\n      independentAmount,\n      pool: state.pool,\n      tickLower,\n      tickUpper\n    });\n    return dependentToken && CurrencyAmount.fromRawAmount(dependentToken, dependentTokenAmount.quotient);\n  }, [state, protocolVersion, independentAmount, otherAmount, dependentToken, exactField, token0, token1]);\n  const independentTokenUSDValue = useUSDCValue(independentAmount) || void 0;\n  const dependentTokenUSDValue = useUSDCValue(dependentAmount) || void 0;\n  const dependentField = exactField === PositionField.TOKEN0 ? PositionField.TOKEN1 : PositionField.TOKEN0;\n  const parsedAmounts = useMemo(() => {\n    return {\n      [PositionField.TOKEN0]: exactField === PositionField.TOKEN0 ? independentAmount : dependentAmount,\n      [PositionField.TOKEN1]: exactField === PositionField.TOKEN0 ? dependentAmount : independentAmount\n    };\n  }, [dependentAmount, independentAmount, exactField]);\n  const { [PositionField.TOKEN0]: currency0Amount, [PositionField.TOKEN1]: currency1Amount } = parsedAmounts;\n  const { t } = useTranslation();\n  const error = useMemo(() => {\n    if (!account.isConnected) {\n      return t(\"common.connectWallet.button\");\n    }\n    if (!parsedAmounts[PositionField.TOKEN0] && !deposit0Disabled || !parsedAmounts[PositionField.TOKEN1] && !deposit1Disabled) {\n      return t(\"common.noAmount.error\");\n    }\n    const insufficientToken0Balance = currency0Amount && token0MaxAmount?.lessThan(currency0Amount);\n    const insufficientToken1Balance = currency1Amount && token1MaxAmount?.lessThan(currency1Amount);\n    if (insufficientToken0Balance && insufficientToken1Balance) {\n      return <Trans i18nKey=\"common.insufficientBalance.error\" />;\n    }\n    if (insufficientToken0Balance) {\n      return <Trans\n        i18nKey=\"common.insufficientTokenBalance.error\"\n        values={{\n          tokenSymbol: token0?.symbol\n        }}\n      />;\n    }\n    if (insufficientToken1Balance) {\n      return <Trans\n        i18nKey=\"common.insufficientTokenBalance.error\"\n        values={{\n          tokenSymbol: token1?.symbol\n        }}\n      />;\n    }\n    return void 0;\n  }, [\n    account.isConnected,\n    parsedAmounts,\n    deposit0Disabled,\n    deposit1Disabled,\n    currency0Amount,\n    token0MaxAmount,\n    currency1Amount,\n    token1MaxAmount,\n    t,\n    token0?.symbol,\n    token1?.symbol\n  ]);\n  return useMemo(\n    () => ({\n      currencyBalances: { [PositionField.TOKEN0]: token0Balance, [PositionField.TOKEN1]: token1Balance },\n      formattedAmounts: { [exactField]: exactAmounts[exactField], [dependentField]: dependentAmount?.toExact() },\n      currencyAmounts: { [exactField]: independentAmount, [dependentField]: dependentAmount },\n      currencyAmountsUSDValue: { [exactField]: independentTokenUSDValue, [dependentField]: dependentTokenUSDValue },\n      error\n    }),\n    [\n      token0Balance,\n      token1Balance,\n      exactField,\n      exactAmounts,\n      dependentField,\n      dependentAmount,\n      independentAmount,\n      independentTokenUSDValue,\n      dependentTokenUSDValue,\n      error\n    ]\n  );\n}\nfunction getParsedHookAddrParam(params) {\n  const hookAddr = params?.hook;\n  if (!hookAddr || typeof hookAddr !== \"string\") {\n    return void 0;\n  }\n  const validAddress = getValidAddress(hookAddr);\n  return validAddress || void 0;\n}\nexport function useInitialPoolInputs() {\n  const { defaultChainId } = useEnabledChains();\n  const defaultInitialToken = nativeOnChain(defaultChainId);\n  const { useParsedQueryString } = useUrlContext();\n  const parsedQs = useParsedQueryString();\n  const hookAddress = getParsedHookAddrParam(parsedQs);\n  const parsedChainId = getParsedChainId(parsedQs);\n  const supportedChainId = useSupportedChainId(parsedChainId) ?? defaultChainId;\n  const { currencyAddressA, currencyAddressB } = useMemo(() => {\n    const currencyAddressA2 = parseCurrencyFromURLParameter(parsedQs.currencyA ?? parsedQs.currencya);\n    const parsedCurrencyAddressB = parseCurrencyFromURLParameter(parsedQs.currencyB ?? parsedQs.currencyb);\n    const currencyAddressB2 = parsedCurrencyAddressB === currencyAddressA2 ? void 0 : parsedCurrencyAddressB;\n    const isETHOrWETHA = checkIsNative(currencyAddressA2) || currencyAddressA2 === WRAPPED_NATIVE_CURRENCY[supportedChainId]?.address;\n    const isETHOrWETHB = checkIsNative(currencyAddressB2) || currencyAddressB2 === WRAPPED_NATIVE_CURRENCY[supportedChainId]?.address;\n    return {\n      currencyAddressA: currencyAddressA2,\n      currencyAddressB: currencyAddressB2 && !(isETHOrWETHA && isETHOrWETHB) ? currencyAddressB2 : void 0\n    };\n  }, [parsedQs.currencyA, parsedQs.currencyB, parsedQs.currencya, parsedQs.currencyb, supportedChainId]);\n  const currencyA = useCurrency(currencyAddressA, supportedChainId);\n  const currencyB = useCurrency(currencyAddressB, supportedChainId);\n  return useMemo(() => {\n    return {\n      [PositionField.TOKEN0]: currencyA ?? currencyB ?? defaultInitialToken,\n      [PositionField.TOKEN1]: currencyA && currencyB ? currencyB : void 0,\n      hook: hookAddress\n    };\n  }, [currencyA, currencyB, hookAddress, defaultInitialToken]);\n}\n","\"use strict\";\nimport { CurrencyAmount, Price, TradeType } from \"@uniswap/sdk-core\";\nimport JSBI from \"jsbi\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { PositionField } from \"types/position\";\nimport { PollingInterval } from \"uniswap/src/constants/misc\";\nimport { useTrade } from \"uniswap/src/features/transactions/swap/hooks/useTrade\";\nexport function useDefaultInitialPrice({\n  currencies,\n  skip\n}) {\n  const [price, setPrice] = useState();\n  const currencyIn = currencies[PositionField.TOKEN0];\n  const currencyOut = currencies[PositionField.TOKEN1];\n  const amountSpecified = useMemo(() => {\n    if (!currencyIn) {\n      return void 0;\n    }\n    return CurrencyAmount.fromRawAmount(currencyIn, JSBI.BigInt(10 ** currencyIn.decimals));\n  }, [currencyIn]);\n  const { trade, isLoading } = useTrade({\n    amountSpecified,\n    otherCurrency: currencyOut,\n    tradeType: TradeType.EXACT_INPUT,\n    pollInterval: PollingInterval.Slow,\n    skip: !amountSpecified || !currencyOut || !!price || skip\n  });\n  useEffect(() => {\n    setPrice(void 0);\n  }, [currencyIn, currencyOut]);\n  useEffect(() => {\n    if (trade?.outputAmount && currencyIn && currencyOut) {\n      setPrice(new Price(currencyIn, currencyOut, trade.inputAmount.quotient, trade.outputAmount.quotient));\n    }\n  }, [trade, currencyIn, currencyOut]);\n  return { isLoading, price };\n}\n","\"use strict\";\nimport { Experiments, NativeTokenPercentageBufferExperimentGroup } from \"uniswap/src/features/gating/experiments\";\nimport { useExperimentGroupNameWithLoading } from \"uniswap/src/features/gating/hooks\";\nexport function useNativeTokenPercentageBufferExperiment() {\n  const { value: nativeTokenPercentageBuffer } = useExperimentGroupNameWithLoading(\n    Experiments.NativeTokenPercentageBuffer\n  );\n  const controlPercentageBuffer = 0.5;\n  const bufferPercentage = nativeTokenPercentageBuffer === NativeTokenPercentageBufferExperimentGroup.Control ? controlPercentageBuffer : 1;\n  return bufferPercentage;\n}\n"],"names":["RotateLeft","AnimatedRotateLeft","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","_cn6","_cn5","_cn4","_cn3","_cn2","_cn","ErrorCallout","errorMessage","description","title","isWarning","action","pressIcon","size","color","onPress","t","useTranslation","div","className","concatClassName","AlertTriangleFilled","Text","variant","Boolean","TouchableArea","ClickableTamaguiStyle","mt","CreatePositionContext","React","reset","step","PositionFlowStep","SELECT_TOKENS_AND_FEE_TIER","setStep","positionState","DEFAULT_POSITION_STATE","setPositionState","feeTierSearchModalOpen","setFeeTierSearchModalOpen","derivedPositionInfo","protocolVersion","ProtocolVersion","V4","currencies","isPoolOutOfSync","refetchPoolData","defaultInitialPrice","isDefaultInitialPriceLoading","dynamicFeeTierSpeedbumpData","open","wishFeeData","fee","setDynamicFeeTierSpeedbumpData","currentTransactionStep","setCurrentTransactionStep","useCreatePositionContext","useContext","DEFAULT_PRICE_RANGE_STATE","priceInverted","fullRange","minPrice","maxPrice","initialPrice","PriceRangeContext","priceRangeState","setPriceRangeState","derivedPriceRangeInfo","isSorted","ticksAtLimit","invertPrice","tickSpaceLimits","deposit0Disabled","deposit1Disabled","ticks","invalidPrice","invalidRange","outOfRange","prices","pricesAtLimit","pricesAtTicks","usePriceRangeContext","DEFAULT_DEPOSIT_STATE","exactField","PositionField","TOKEN0","exactAmounts","DepositContext","depositState","setDepositState","derivedDepositInfo","useDepositContext","CreateTxContext","error","useCreateTxContext","WARNING_THRESHOLD","Fraction","DECIMAL_SCALAR","JSBI","useIsPoolOutOfSync","poolPrice","marketPrice","baseCurrency","quoteCurrency","baseCurrencyUSDPrice","useUSDCValue","CurrencyAmount","fromRawAmount","parseUnits","decimals","quoteCurrencyUSDPrice","multiply","toFixed","useMarketPrice","scaledMarketPrice","scaledPoolPrice","quote","difference","greaterThan","useDerivedPositionInfo","state","sortedCurrencies","poolData","sortedTokens","v3Pool","pool","chainId","useMultichainContext","currencyInputs","token0Input","TOKEN1","token1Input","getSortedCurrenciesTuple","validCurrencyInput","validateCurrencyInput","getCurrencyWithWrap","poolsQueryEnabled","poolEnabledProtocolVersion","data","isLoading","poolIsLoading","refetch","useGetPoolsByTokens","feeAmount","protocolVersions","token0","getCurrencyAddressWithWrap","token1","hooks","hook","toLowerCase","ZERO_ADDRESS","pools","length","pairsQueryEnabled","useMemo","pairEnabledProtocolVersion","pairResult","useV2Pair","pairIsLoading","PairState","LOADING","pair","v3PoolResult","usePool","V3","v3Price","token0Price","v4Pool","v4Price","v4Pool2","getPoolFromRest","address","creatingPoolOrPair","UNSPECIFIED","V2","NOT_EXISTS","PoolState","price","skip","setPrice","useState","currencyIn","currencyOut","amountSpecified","trade","useTrade","otherCurrency","tradeType","TradeType","EXACT_INPUT","pollInterval","PollingInterval","Slow","useEffect","outputAmount","Price","inputAmount","quotient","useDefaultInitialPrice","poolOrPairLoading","poolId","boostedApr","useDerivedPriceRangeInfo","getV2PriceRangeInfo","getV3PriceRangeInfo","getV4PriceRangeInfo","useDerivedDepositInfo","account","useAccount","useDepositInfo","getPairFromPositionStateAndRangeState","tickLower","tickUpper","getPoolFromPositionStateAndRangeState","skipDependentAmount","useTokenBalanceWithBuffer","currencyBalance","bufferPercentage","applyNativeTokenPercentageBuffer","useNativeTokenPercentageBufferExperiment","balance","token0Balance","useOnChainCurrencyBalance","token1Balance","token0BalanceWithBuffer","token1BalanceWithBuffer","token0MaxAmount","useMaxAmountSpend","currencyAmount","token1MaxAmount","independentToken","dependentToken","independentAmount","tryParseCurrencyAmount","otherAmount","dependentAmount","getDependentAmountFromV2Pair","dependentTokenAmount","getDependentAmountFromV3Position","getDependentAmountFromV4Position","independentTokenUSDValue","dependentTokenUSDValue","dependentField","parsedAmounts","currency0Amount","currency1Amount","isConnected","insufficientToken0Balance","lessThan","insufficientToken1Balance","Trans","i18nKey","values","tokenSymbol","symbol","currencyBalances","formattedAmounts","toExact","currencyAmounts","currencyAmountsUSDValue","useInitialPoolInputs","defaultChainId","useEnabledChains","defaultInitialToken","nativeOnChain","useParsedQueryString","useUrlContext","parsedQs","hookAddress","params","hookAddr","getValidAddress","getParsedHookAddrParam","parsedChainId","getParsedChainId","supportedChainId","useSupportedChainId","currencyAddressA","currencyAddressB","WRAPPED_NATIVE_CURRENCY","currencyAddressA2","parseCurrencyFromURLParameter","currencyA","currencya","parsedCurrencyAddressB","currencyB","currencyb","currencyAddressB2","isETHOrWETHA","checkIsNative","isETHOrWETHB","useCurrency","value","nativeTokenPercentageBuffer","useExperimentGroupNameWithLoading","Experiments","NativeTokenPercentageBuffer","NativeTokenPercentageBufferExperimentGroup","Control"],"sourceRoot":""}