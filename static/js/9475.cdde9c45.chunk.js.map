{"version":3,"file":"static/js/9475.cdde9c45.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Charts/ActiveLiquidityChart/TickTooltip.tsx?58c5","../packages/ui/src/components/icons/HorizontalDensityChart.tsx","../packages/ui/src/components/icons/LoadingPriceCurve.tsx","components/Charts/ActiveLiquidityChart/AxisRight.tsx","components/Charts/LiquidityRangeInput/svg.tsx","components/Charts/ActiveLiquidityChart/Brush.tsx","components/Charts/ActiveLiquidityChart/HorizontalArea.tsx","components/Charts/ActiveLiquidityChart/HorizontalLine.tsx","components/Charts/ActiveLiquidityChart/TickTooltip.tsx","components/Charts/ActiveLiquidityChart/ActiveLiquidityChart.tsx","components/Charts/LiquidityChart/renderer.tsx","components/Charts/LiquidityChart/liquidity-bar-series.tsx","components/Charts/LiquidityChart/index.tsx","components/Charts/BandsIndicator/helpers/closest-index.ts","components/Charts/BandsIndicator/helpers/min-max-in-range.ts","components/Charts/BandsIndicator/helpers/simple-clone.ts","components/Charts/BandsIndicator/plugin-base.ts","components/Charts/BandsIndicator/bands-indicator.ts","components/Charts/LiquidityPositionRangeChart/utils.ts","components/Charts/LiquidityPositionRangeChart/LiquidityPositionRangeChart.tsx","components/Charts/LiquidityRangeInput/hooks.ts","hooks/usePoolPriceChartData.tsx","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","utils/networkSupportsV4.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { Rect, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [HorizontalDensityChart, AnimatedHorizontalDensityChart] = createIcon({\n  name: \"HorizontalDensityChart\",\n  getIcon: (props) => <Svg viewBox=\"0 0 124 160\" fill=\"none\" {...props}>\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 10)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 13.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 17.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 21.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 28.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 32.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 36.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 40)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 43.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 47.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 51.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 55)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 58.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 62.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 66.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 70)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 73.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 77.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 81.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 85)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 88.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 92.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 96.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 100)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 103.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 107.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 111.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 115)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 118.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 122.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 126.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 130)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 133.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 137.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 141.25)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 145)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 148.75)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n      <Rect\n    width=\"60\"\n    height=\"1\"\n    rx=\"0.5\"\n    transform=\"matrix(1 0 0 -1 84 152.5)\"\n    fill={\"currentColor\"}\n    fillOpacity=\"0.6\"\n  />\r\n    </Svg>,\n  defaultFill: \"#5E5E5E\"\n});\n","\"use strict\";\nimport { ClipPath, Defs, G, Path, Rect, Svg, Circle as _Circle } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [LoadingPriceCurve, AnimatedLoadingPriceCurve] = createIcon({\n  name: \"LoadingPriceCurve\",\n  getIcon: (props) => <Svg viewBox=\"0 0 224 52\" fill=\"none\" {...props}>\r\n      <G clipPath=\"url(#clip0_6507_58835)\">\r\n        <mask id=\"mask0_6507_58835\" mask=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"-1\" y=\"0\" width=\"229\" height=\"35\">\r\n          <Path\n    d=\"M0 17.3223L2.27128 15.3383L4.54257 13.3855L6.81385 11.4949L9.08514 9.6961L11.3564 8.0176L13.6277 6.4859L15.899 5.125L18.1703 3.9565L20.4416 2.9988L22.7128 2.267L24.9841 1.7726L27.2554 1.5234H29.5267L31.798 1.7726L34.0693 2.267L36.3406 2.9988L38.6118 3.9565L40.8831 5.125L43.1544 6.4859L45.4257 8.0176L47.697 9.6961L49.9683 11.4949L52.2396 13.3855L54.5108 15.3383L56.7821 17.3223L59.0534 19.3064L61.3247 21.2591L63.596 23.1498L65.8673 24.9485L68.1385 26.627L70.4098 28.1588L72.6811 29.5196L74.9524 30.6881L77.2237 31.6458L79.495 32.3777L81.7663 32.872L84.0375 33.1212H86.3088L88.5801 32.872L90.8514 32.3777L93.1227 31.6458L95.394 30.6881L97.6653 29.5196L99.9365 28.1588L102.208 26.627L104.479 24.9485L106.75 23.1498L109.022 21.2591L111.293 19.3064L113.564 17.3223L115.836 15.3383L118.107 13.3855L120.378 11.4949L122.649 9.6961L124.921 8.0176L127.192 6.4859L129.463 5.125L131.735 3.9565L134.006 2.9988L136.277 2.267L138.548 1.7726L140.82 1.5234L143.091 1.5234L145.362 1.7726L147.634 2.267L149.905 2.9988L152.176 3.9565L154.447 5.125L156.719 6.4859L158.99 8.0176L161.261 9.6961L163.533 11.4949L165.804 13.3855L168.075 15.3383L170.346 17.3223L172.618 19.3064L174.889 21.2591L177.16 23.1498L179.432 24.9485L181.703 26.627L183.974 28.1588L186.245 29.5196L188.517 30.6881L190.788 31.6458L193.059 32.3777L195.331 32.872L197.602 33.1212H199.873L202.144 32.872L204.416 32.3777L206.687 31.6458L208.958 30.6881L211.229 29.5196L213.501 28.1588L215.772 26.627L218.043 24.9485L220.315 23.1498L222.586 21.2591L224.857 19.3064L227.128 17.3223\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n  />\r\n        </mask>\r\n        <G mask=\"url(#mask0_6507_58835)\">\r\n          <Rect width=\"224\" height=\"76.9609\" rx=\"1.2514\" fill=\"currentColor\" fillOpacity=\"0.12\" />\r\n          <G filter=\"url(#filter0_f_6507_58835)\">\r\n            <_Circle cx=\"-0.156054\" cy=\"19.1994\" r=\"17.676\" fill=\"currentColor\" fillOpacity=\"0.24\" />\r\n          </G>\r\n        </G>\r\n      </G>\r\n      <Defs>\r\n        <filter\n    id=\"filter0_f_6507_58835\"\n    x=\"-20.9605\"\n    y=\"-1.60505\"\n    width=\"41.6085\"\n    height=\"41.6085\"\n    filterUnits=\"userSpaceOnUse\"\n    colorInterpolationFilters=\"sRGB\"\n  >\r\n          <feFlood result=\"BackgroundImageFix\" floodOpacity=\"0\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"1.56425\" result=\"effect1_foregroundBlur_6507_58835\" />\r\n        </filter>\r\n        <ClipPath id=\"clip0_6507_58835\">\r\n          <Rect width=\"224\" height=\"52\" fill=\"currentColor\" />\r\n        </ClipPath>\r\n      </Defs>\r\n    </Svg>\n});\n","\"use strict\";\nimport { axisRight, select } from \"d3\";\nimport { useMemo } from \"react\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TEXT_Y_OFFSET = 5;\nconst Axis = ({\n  axisGenerator,\n  yScale,\n  height\n}) => {\n  const axisRef = (axis) => {\n    if (axis) {\n      select(axis).call(axisGenerator).call((g) => g.select(\".domain\").remove()).call(\n        (g) => g.selectAll(\"text\").attr(\"transform\", function(d) {\n          const yCoordinate = yScale(d);\n          if (yCoordinate < TEXT_Y_OFFSET) {\n            return `translate(0, ${TEXT_Y_OFFSET})`;\n          }\n          if (yCoordinate > height - TEXT_Y_OFFSET) {\n            return `translate(0, ${-TEXT_Y_OFFSET})`;\n          }\n          return \"\";\n        })\n      );\n    }\n  };\n  return <g ref={axisRef} />;\n};\nexport const AxisRight = ({\n  yScale,\n  offset = 0,\n  min,\n  current,\n  max,\n  height\n}) => {\n  const { formatNumber } = useFormatter();\n  const tickValues = useMemo(() => {\n    const minCoordinate = min ? yScale(min) : void 0;\n    const maxCoordinate = max ? yScale(max) : void 0;\n    const currentCoordinate = current ? yScale(current) : void 0;\n    if (minCoordinate && currentCoordinate && Math.abs(minCoordinate - currentCoordinate) < TEXT_Y_OFFSET) {\n      return [min, max].filter(Boolean);\n    }\n    if (maxCoordinate && currentCoordinate && Math.abs(maxCoordinate - currentCoordinate) < TEXT_Y_OFFSET) {\n      return [min, max].filter(Boolean);\n    }\n    return [min, current, max].filter(Boolean);\n  }, [current, max, min, yScale]);\n  return <g transform={`translate(${offset}, 0)`} className=\"axis-right\">\r\n      <Axis\n    axisGenerator={axisRight(yScale).tickValues(tickValues).tickFormat(\n      (d) => formatNumber({\n        input: d,\n        type: NumberType.TokenQuantityStats\n      })\n    )}\n    height={height}\n    yScale={yScale}\n  />\r\n    </g>;\n};\n","\"use strict\";\nexport const brushHandlePath = (width) => [\n  `M 0 0`,\n  // move to origin\n  `h ${width}`\n  // horizontal line with specified width\n].join(\" \");\nexport const brushHandleAccentPath = (width) => {\n  const lineStart = width / 2 - 15;\n  return [\n    \"M 0 0\",\n    // move to origin\n    `m ${lineStart} 8`,\n    // move to start of accent line\n    `h 30`\n    // horizontal line\n  ].join(\" \");\n};\nexport const OffScreenHandle = ({ color, size = 6 }) => {\n  const center = size / 3;\n  return <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={`translate(${center}, ${center}) rotate(-45) translate(-${center}, -${center})`}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />;\n};\n","\"use strict\";\nimport { OffScreenHandle, brushHandleAccentPath, brushHandlePath } from \"components/Charts/LiquidityRangeInput/svg\";\nimport { brushY, select } from \"d3\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSporeColors } from \"ui/src\";\nconst FLIP_HANDLE_THRESHOLD_PX = 20;\nconst BRUSH_EXTENT_MARGIN_PX = 2;\nconst compare = (a, b, yScale) => {\n  const aNorm = a.map((y) => yScale(y).toFixed(1));\n  const bNorm = b.map((y) => yScale(y).toFixed(1));\n  return aNorm.every((v, i) => v === bNorm[i]);\n};\nconst toYScale = (extent, yScale) => {\n  return [yScale(extent[1]), yScale(extent[0])];\n};\nconst toPriceExtent = (selection, yScale) => {\n  return [yScale.invert(selection[1]), yScale.invert(selection[0])];\n};\nconst normalizeExtent = (extent) => extent[0] < extent[1] ? extent : [extent[1], extent[0]];\nexport const Brush = ({\n  id,\n  yScale,\n  interactive,\n  brushExtent,\n  setBrushExtent,\n  hideHandles,\n  width,\n  height\n}) => {\n  const colors = useSporeColors();\n  const brushRef = useRef(null);\n  const brushBehavior = useRef(null);\n  const { t } = useTranslation();\n  const [localBrushExtent, setLocalBrushExtent] = useState(brushExtent);\n  const previousBrushExtent = usePrevious(brushExtent);\n  const [brushInProgress, setBrushInProgress] = useState(false);\n  useEffect(() => {\n    if (brushInProgress) {\n      return;\n    }\n    setLocalBrushExtent(brushExtent);\n  }, [brushExtent, brushInProgress]);\n  useEffect(() => {\n    if (!brushRef.current || brushInProgress) {\n      return;\n    }\n    const normalizedExtent = normalizeExtent(brushExtent);\n    const scaledExtent = toYScale(normalizedExtent, yScale);\n    brushBehavior.current = brushY().extent([\n      // x0, y0 (top left)\n      [0, BRUSH_EXTENT_MARGIN_PX],\n      // x1, y1 (bottom right)\n      [width, height - BRUSH_EXTENT_MARGIN_PX]\n    ]).handleSize(30).filter(() => interactive).filter((event) => {\n      const target = event.target;\n      return target.classList.contains(\"selection\") || target.classList.contains(\"handle\");\n    }).on(\"brush\", (event) => {\n      const { selection } = event;\n      setBrushInProgress(true);\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n      const priceExtent = normalizeExtent(toPriceExtent(selection, yScale));\n      setLocalBrushExtent(priceExtent);\n    }).on(\"end\", (event) => {\n      const { selection, mode } = event;\n      if (!selection) {\n        setLocalBrushExtent(null);\n        return;\n      }\n      const priceExtent = normalizeExtent(toPriceExtent(selection, yScale));\n      if (!compare(normalizedExtent, priceExtent, yScale)) {\n        setBrushExtent(priceExtent, mode);\n      }\n      setLocalBrushExtent(priceExtent);\n      setBrushInProgress(false);\n    });\n    brushBehavior.current(select(brushRef.current));\n    if (previousBrushExtent && compare(normalizedExtent, normalizeExtent(previousBrushExtent), yScale)) {\n      select(brushRef.current).transition().call(brushBehavior.current.move, scaledExtent);\n    }\n    select(brushRef.current).selectAll(\".overlay\").attr(\"cursor\", \"default\");\n    select(brushRef.current).selectAll(\".selection\").attr(\"stroke\", \"none\").attr(\"fill-opacity\", \"0.1\").attr(\"fill\", `url(#${id}-gradient-selection)`).attr(\"cursor\", \"grab\");\n  }, [brushExtent, id, height, interactive, previousBrushExtent, yScale, width, setBrushExtent, brushInProgress]);\n  useEffect(() => {\n    if (!brushRef.current || !brushBehavior.current) {\n      return;\n    }\n    brushBehavior.current.move(\n      select(brushRef.current),\n      normalizeExtent(toYScale(brushExtent, yScale))\n    );\n  }, [brushExtent, yScale]);\n  const normalizedBrushExtent = normalizeExtent(localBrushExtent ?? brushExtent);\n  const flipNorthHandle = yScale(normalizedBrushExtent[1]) < FLIP_HANDLE_THRESHOLD_PX;\n  const flipSouthHandle = yScale(normalizedBrushExtent[0]) > height - FLIP_HANDLE_THRESHOLD_PX;\n  const showNorthArrow = normalizedBrushExtent && (yScale(normalizedBrushExtent[0]) < 0 || yScale(normalizedBrushExtent[1]) < 0);\n  const showSouthArrow = normalizedBrushExtent && (yScale(normalizedBrushExtent[0]) > height || yScale(normalizedBrushExtent[1]) > height);\n  const southHandleInView = normalizedBrushExtent && yScale(normalizedBrushExtent[0]) >= 0 && yScale(normalizedBrushExtent[0]) <= height;\n  const northHandleInView = normalizedBrushExtent && yScale(normalizedBrushExtent[1]) >= 0 && yScale(normalizedBrushExtent[1]) <= height;\n  return useMemo(\n    () => <>\r\n        <defs>\r\n          <linearGradient id={`${id}-gradient-selection`} x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\">\r\n            <stop stopColor={colors.accent1.val} />\r\n            <stop stopColor={colors.accent1.val} offset=\"1\" />\r\n          </linearGradient>\r\n\r\n          {\n      /* clips at exactly the svg area */\n    }\r\n          <clipPath id={`${id}-brush-clip`}>\r\n            <rect x={0} y=\"0\" width={width} height={height} />\r\n          </clipPath>\r\n        </defs>\r\n\r\n        {\n      /* will host the d3 brush */\n    }\r\n        <g ref={brushRef} clipPath={`url(#${id}-brush-clip)`} />\r\n\r\n        {\n      /* custom brush handles */\n    }\r\n        {normalizedBrushExtent && !hideHandles && <>\r\n            {northHandleInView ? <g\n      transform={`translate(0, ${Math.max(0, yScale(normalizedBrushExtent[1]))}), scale(1, ${flipNorthHandle ? \"1\" : \"-1\"})`}\n      cursor={interactive ? \"ns-resize\" : \"default\"}\n      pointerEvents=\"none\"\n    >\r\n                <g>\r\n                  <path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      opacity={0.6}\n      d={brushHandlePath(width)}\n    />\r\n                  <path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      strokeWidth={4}\n      strokeLinecap=\"round\"\n      d={brushHandleAccentPath(width)}\n    />\r\n                </g>\r\n              </g> : null}\r\n\r\n            {southHandleInView ? <g\n      transform={`translate(0, ${yScale(normalizedBrushExtent[0])}), scale(1, ${flipSouthHandle ? \"-1\" : \"1\"})`}\n      cursor={interactive ? \"ns-resize\" : \"default\"}\n      pointerEvents=\"none\"\n    >\r\n                <g>\r\n                  <path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      opacity={0.6}\n      d={brushHandlePath(width)}\n    />\r\n                  <path\n      color={colors.neutral2.val}\n      stroke={colors.neutral2.val}\n      strokeWidth={4}\n      strokeLinecap=\"round\"\n      d={brushHandleAccentPath(width)}\n    />\r\n                </g>\r\n              </g> : null}\r\n\r\n            {showNorthArrow && <g transform=\"translate(18, 16) scale(1,-1)\">\r\n                <OffScreenHandle color={colors.accent1.val} />\r\n                <text\n      x={14}\n      y={-3}\n      fill={colors.accent1.val}\n      fontSize={10}\n      alignmentBaseline=\"middle\"\n      transform=\"scale(1,-1)\"\n    >\r\n                  {t(\"range.outOfView\")}\r\n                </text>\r\n              </g>}\r\n            {showSouthArrow && <g transform={`translate(18, ${height - 16}) `}>\r\n                <OffScreenHandle color={colors.accent1.val} />\r\n                {!showNorthArrow && <text x={14} y={5} fill={colors.accent1.val} fontSize={10} alignmentBaseline=\"middle\">\r\n                    {t(\"range.outOfView\")}\r\n                  </text>}\r\n              </g>}\r\n          </>}\r\n      </>,\n    [\n      id,\n      colors.accent1.val,\n      colors.neutral2.val,\n      width,\n      height,\n      normalizedBrushExtent,\n      hideHandles,\n      northHandleInView,\n      yScale,\n      flipNorthHandle,\n      interactive,\n      southHandleInView,\n      flipSouthHandle,\n      showNorthArrow,\n      t,\n      showSouthArrow\n    ]\n  );\n};\n","\"use strict\";\nimport { useSporeColors } from \"ui/src\";\nexport const HorizontalArea = ({\n  series,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  fill,\n  brushDomain,\n  selectedFill,\n  containerHeight,\n  containerWidth\n}) => {\n  const colors = useSporeColors();\n  return <>\r\n      {series.filter((d) => {\n    const value = yScale(yValue(d));\n    return value > 0 && value <= containerHeight;\n  }).map((d, i) => {\n    const price = yValue(d);\n    const isInDomain = brushDomain && price >= brushDomain[0] && price <= brushDomain[1];\n    const fillWithDefault = (isInDomain ? selectedFill : fill) ?? colors.accent1.val;\n    return <rect\n      key={i}\n      x={xScale(xValue(d))}\n      y={yScale(price)}\n      width={xScale(containerWidth) - xScale(xValue(d))}\n      height={0.2}\n      fill={fillWithDefault}\n      stroke={fillWithDefault}\n      rx={1}\n      ry={1}\n    />;\n  })}\r\n    </>;\n};\n","\"use strict\";\nimport { useSporeColors } from \"ui/src\";\nexport const HorizontalLine = ({\n  value,\n  yScale,\n  width,\n  containerWidth,\n  lineStyle = \"dashed\"\n}) => {\n  const lineStart = containerWidth - width;\n  const colors = useSporeColors();\n  if (isNaN(lineStart)) {\n    return null;\n  }\n  const strokeDasharray = lineStyle === \"dashed\" ? \"1, 4\" : \"none\";\n  return <line\n    strokeDasharray={strokeDasharray}\n    stroke={colors.neutral2.val}\n    opacity={0.5}\n    strokeWidth={1}\n    fill=\"none\"\n    y1={yScale(value)}\n    x1={lineStart}\n    y2={yScale(value)}\n    x2={lineStart + width}\n  />;\n};\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { Flex, Text } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useUSDCValue } from \"uniswap/src/features/transactions/hooks/useUSDCPrice\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport function TickTooltip({\n  hoverY,\n  hoveredTick,\n  currentPrice,\n  currentTick,\n  containerHeight,\n  contentWidth,\n  axisLabelPaneWidth,\n  quoteCurrency,\n  baseCurrency\n}) {\n  const { formatCurrencyAmount, formatPercent } = useFormatter();\n  const amountBaseLockedUSD = useUSDCValue(tryParseCurrencyAmount(hoveredTick.amount1Locked?.toFixed(2), baseCurrency));\n  const amountQuoteLockedUSD = useUSDCValue(\n    tryParseCurrencyAmount(hoveredTick.amount0Locked?.toFixed(2), quoteCurrency)\n  );\n  if (!amountQuoteLockedUSD || !amountBaseLockedUSD) {\n    return null;\n  }\n  const atTop = hoverY < 20;\n  const atBottom = containerHeight - hoverY < 20;\n  return <Flex\n    position=\"absolute\"\n    p=\"$padding8\"\n    gap=\"$gap4\"\n    top={hoverY - 18}\n    minWidth={150}\n    right={contentWidth + axisLabelPaneWidth + 8}\n    borderRadius=\"$rounded12\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    backgroundColor=\"$surface2\"\n    pointerEvents=\"none\"\n    transform={atBottom ? \"translateY(-12px)\" : atTop ? \"translateY(14px)\" : void 0}\n  >\r\n      {(currentPrice >= hoveredTick.price0 || hoveredTick.tick === currentTick) && <Flex justifyContent=\"space-between\" row alignItems=\"center\" gap=\"$gap8\">\r\n          <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n            <DoubleCurrencyLogo currencies={[quoteCurrency]} size={iconSizes.icon16} />\r\n            <Text variant=\"body4\">{quoteCurrency.symbol}</Text>\r\n          </Flex>\r\n          <Flex row alignItems=\"center\" gap=\"$gap4\">\r\n            <Text variant=\"body4\">\r\n              {formatCurrencyAmount({\n    amount: amountQuoteLockedUSD,\n    type: NumberType.FiatTokenStats\n  })}\r\n            </Text>\r\n            {amountBaseLockedUSD && <Text variant=\"body4\" color=\"$neutral2\">\r\n                {formatPercent(\n    hoveredTick.tick === currentTick ? new Percent(amountQuoteLockedUSD.quotient, amountBaseLockedUSD.add(amountQuoteLockedUSD).quotient) : new Percent(1, 1)\n  )}\r\n              </Text>}\r\n          </Flex>\r\n        </Flex>}\r\n      {(currentPrice <= hoveredTick.price0 || hoveredTick.tick === currentTick) && <Flex justifyContent=\"space-between\" row alignItems=\"center\" gap=\"$gap8\">\r\n          <Flex row gap=\"$gap4\" alignItems=\"center\">\r\n            <DoubleCurrencyLogo currencies={[baseCurrency]} size={iconSizes.icon16} />\r\n            <Text variant=\"body4\">{baseCurrency.symbol}</Text>\r\n          </Flex>\r\n          <Flex row alignItems=\"center\" gap=\"$gap4\">\r\n            <Text variant=\"body4\">\r\n              {formatCurrencyAmount({\n    amount: amountBaseLockedUSD,\n    type: NumberType.FiatTokenStats\n  })}\r\n            </Text>\r\n            {amountQuoteLockedUSD && <Text variant=\"body4\" color=\"$neutral2\">\r\n                {formatPercent(\n    hoveredTick.tick === currentTick ? new Percent(amountBaseLockedUSD.quotient, amountQuoteLockedUSD.add(amountBaseLockedUSD).quotient) : new Percent(1, 1)\n  )}\r\n              </Text>}\r\n          </Flex>\r\n        </Flex>}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { AxisRight } from \"components/Charts/ActiveLiquidityChart/AxisRight\";\nimport { Brush } from \"components/Charts/ActiveLiquidityChart/Brush\";\nimport { HorizontalArea } from \"components/Charts/ActiveLiquidityChart/HorizontalArea\";\nimport { HorizontalLine } from \"components/Charts/ActiveLiquidityChart/HorizontalLine\";\nimport { TickTooltip } from \"components/Charts/ActiveLiquidityChart/TickTooltip\";\nimport { max as getMax, scaleLinear } from \"d3\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Flex, Text, useSporeColors } from \"ui/src\";\nimport { opacify } from \"ui/src/theme\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst xAccessor = (d) => d.activeLiquidity;\nconst yAccessor = (d) => d.price0;\nconst priceDataCache = /* @__PURE__ */ new Map();\nfunction findClosestElementBinarySearch(data, target) {\n  let left = 0;\n  let right = data.length - 1;\n  if (!target) {\n    return null;\n  }\n  if (priceDataCache.has(target.toString())) {\n    return priceDataCache.get(target.toString());\n  }\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    if (data[mid].price0 === target) {\n      priceDataCache.set(target.toString(), data[mid]);\n      return data[mid];\n    } else if (data[mid].price0 < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  const closest = data[right] ?? { price0: Infinity };\n  const nextClosest = data[left] ?? { price0: Infinity };\n  const closestElement = Math.abs(closest.price0 - target) <= Math.abs(nextClosest.price0 - target) ? closest : nextClosest;\n  if (closestElement) {\n    priceDataCache.set(target.toString(), closestElement);\n  }\n  return closestElement;\n}\nfunction scaleToInteger(a, precision = 18) {\n  const scaleFactor = Math.pow(10, precision);\n  return Math.round(a * scaleFactor);\n}\nexport function ActiveLiquidityChart({\n  id = \"ActiveLiquidityChart2\",\n  quoteCurrency,\n  baseCurrency,\n  data: { series, current, min, max },\n  dimensions: { width, height, contentWidth, axisLabelPaneWidth },\n  brushDomain,\n  onBrushDomainChange,\n  disableBrush,\n  disableRightAxis,\n  disableBrushInteraction,\n  showDiffIndicators,\n  isMobile,\n  barColor\n}) {\n  const { formatPercent } = useFormatter();\n  const colors = useSporeColors();\n  const svgRef = useRef(null);\n  const [hoverY, setHoverY] = useState();\n  const { xScale, yScale } = useMemo(() => {\n    const activeEntries = min && max ? series.filter((d) => d.price0 >= min && d.price0 <= max) : series;\n    const scales = {\n      yScale: scaleLinear().domain([min, max]).range([height, 0]),\n      xScale: scaleLinear().domain([0, getMax(activeEntries, xAccessor)]).range([width - axisLabelPaneWidth, width - axisLabelPaneWidth - contentWidth])\n    };\n    return scales;\n  }, [min, max, series, height, width, axisLabelPaneWidth, contentWidth]);\n  const hoveredTick = useMemo(() => {\n    if (!hoverY || !yScale) {\n      return void 0;\n    }\n    const price = yScale.invert(hoverY);\n    return findClosestElementBinarySearch(series, price);\n  }, [hoverY, series, yScale]);\n  const currentTick = useMemo(() => {\n    return findClosestElementBinarySearch(series, current)?.tick;\n  }, [current, series]);\n  useEffect(() => {\n    if (!brushDomain) {\n      const [min2, max2] = yScale.domain();\n      const lowerBound = min2 + (max2 - min2) * 0.2;\n      const upperBound = min2 + (max2 - min2) * 0.8;\n      onBrushDomainChange([lowerBound, upperBound], void 0);\n    }\n  }, [brushDomain, onBrushDomainChange, yScale]);\n  const southHandleInView = brushDomain && yScale(brushDomain[0]) >= 0 && yScale(brushDomain[0]) <= height;\n  const northHandleInView = brushDomain && yScale(brushDomain[1]) >= 0 && yScale(brushDomain[1]) <= height;\n  return <>\r\n      {hoverY && hoveredTick ? <TickTooltip\n    containerHeight={height}\n    hoverY={hoverY}\n    hoveredTick={hoveredTick}\n    currentTick={currentTick}\n    currentPrice={current}\n    contentWidth={contentWidth}\n    axisLabelPaneWidth={axisLabelPaneWidth}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n  /> : null}\r\n      {showDiffIndicators && <>\r\n          {southHandleInView && <Flex\n    borderRadius=\"$rounded12\"\n    backgroundColor=\"$surface2\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    p=\"$padding8\"\n    position=\"absolute\"\n    left={0}\n    top={yScale(brushDomain[0]) - 16}\n  >\r\n              <Text variant=\"body4\">\r\n                {formatPercent(new Percent(scaleToInteger(brushDomain[0] - current), scaleToInteger(current)))}\r\n              </Text>\r\n            </Flex>}\r\n          {northHandleInView && <Flex\n    borderRadius=\"$rounded12\"\n    backgroundColor=\"$surface2\"\n    borderColor=\"$surface3\"\n    borderWidth=\"$spacing1\"\n    p=\"$padding8\"\n    position=\"absolute\"\n    left={0}\n    top={yScale(brushDomain[1]) - 16}\n  >\r\n              <Text variant=\"body4\">\r\n                {formatPercent(new Percent(scaleToInteger(brushDomain[1] - current), scaleToInteger(current)))}\r\n              </Text>\r\n            </Flex>}\r\n        </>}\r\n      <svg\n    ref={svgRef}\n    width=\"100%\"\n    height=\"100%\"\n    viewBox={`0 0 ${width} ${height}`}\n    onMouseMove={(event) => {\n      if (!svgRef.current) {\n        return;\n      }\n      const rect = svgRef.current?.getBoundingClientRect();\n      const y = event.clientY - rect.top;\n      const x = event.clientX - rect.left;\n      if (x > width - axisLabelPaneWidth - contentWidth) {\n        setHoverY(y);\n      } else {\n        setHoverY(void 0);\n      }\n    }}\n    onMouseLeave={() => setHoverY(void 0)}\n  >\r\n        <defs>\r\n          <clipPath id={`${id}-chart-clip`}>\r\n            <rect x=\"0\" y=\"0\" width={width} height={height} />\r\n          </clipPath>\r\n\r\n          {brushDomain && !disableBrush && // mask to highlight selected area\n  <mask id={`${id}-chart-area-mask`}>\r\n              <rect\n    fill=\"white\"\n    y={yScale(brushDomain[1])}\n    x={width - axisLabelPaneWidth - contentWidth - 1}\n    height={yScale(brushDomain[0]) - yScale(brushDomain[1])}\n    width={contentWidth + 2}\n  />\r\n            </mask>}\r\n\r\n          <style>\r\n            {`\n              .axis-right line { display: none; }\n              .axis-right text { fill: ${colors.neutral2.val}; }\n            `}\r\n          </style>\r\n        </defs>\r\n\r\n        <g>\r\n          <g clipPath={`url(#${id}-chart-clip)`}>\r\n            <HorizontalArea\n    series={series}\n    xScale={xScale}\n    yScale={yScale}\n    xValue={xAccessor}\n    yValue={yAccessor}\n    brushDomain={brushDomain}\n    containerHeight={height}\n    fill={opacify(10, brushDomain ? colors.neutral1.val : barColor ?? colors.accent1.val)}\n    selectedFill={opacify(10, barColor ?? colors.accent1.val)}\n    containerWidth={width - axisLabelPaneWidth}\n  />\r\n\r\n            {!disableBrush && <HorizontalLine\n    value={current}\n    yScale={yScale}\n    width={contentWidth + 12}\n    containerWidth={width - axisLabelPaneWidth}\n  />}\r\n\r\n            {hoverY && hoveredTick && Number(hoveredTick.amount0Locked) + Number(hoveredTick.amount1Locked) > 0 && <HorizontalLine\n    value={yScale.invert(hoverY)}\n    yScale={yScale}\n    width={contentWidth + 12}\n    containerWidth={width - axisLabelPaneWidth}\n    lineStyle=\"solid\"\n  />}\r\n          </g>\r\n\r\n          {isMobile || disableRightAxis ? null : <AxisRight\n    yScale={yScale}\n    offset={width - axisLabelPaneWidth}\n    min={brushDomain?.[0]}\n    current={current}\n    max={brushDomain?.[1]}\n    height={height}\n  />}\r\n\r\n          {!disableBrush && <Brush\n    id={id}\n    yScale={yScale}\n    interactive={!disableBrushInteraction}\n    brushExtent={brushDomain ?? yScale.domain()}\n    hideHandles={!brushDomain}\n    width={width - axisLabelPaneWidth}\n    height={height}\n    setBrushExtent={onBrushDomainChange}\n  />}\r\n        </g>\r\n      </svg>\r\n    </>;\n}\n","\"use strict\";\nimport { calculateColumnPositionsInPlace, positionsBox } from \"components/Charts/VolumeChart/utils\";\nimport { roundRect } from \"components/Charts/utils\";\nexport class LiquidityBarSeriesRenderer {\n  _data = null;\n  _options;\n  constructor(props) {\n    this._options = props;\n    this._options.hoveredTick = props.activeTick;\n  }\n  draw(target, priceConverter) {\n    target.useBitmapCoordinateSpace((scope) => this._drawImpl(scope, priceConverter));\n  }\n  update(data, options) {\n    this._data = data;\n    this._options = { ...this._options, ...options };\n  }\n  _drawImpl(renderingScope, priceToCoordinate) {\n    if (this._data === null || this._data.bars.length === 0 || this._data.visibleRange === null || this._options === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    const bars = this._data.bars.map((bar) => {\n      return {\n        x: bar.x,\n        y: priceToCoordinate(bar.originalData.liquidity) ?? 0,\n        tick: bar.originalData.tick\n      };\n    });\n    calculateColumnPositionsInPlace(\n      bars,\n      this._data.barSpacing,\n      renderingScope.horizontalPixelRatio,\n      this._data.visibleRange.from,\n      this._data.visibleRange.to\n    );\n    const zeroY = priceToCoordinate(0) ?? 0;\n    ctx.fillStyle = this._options.tokenAColor;\n    for (let i = this._data.visibleRange.from; i < this._data.visibleRange.to; i++) {\n      const stack = bars[i];\n      const column = stack.column;\n      const isCurrentTick = this._options.activeTick === stack.tick;\n      const isHoveredTick = this._options.hoveredTick === stack.tick;\n      if (!column) {\n        return;\n      }\n      const width = Math.min(\n        Math.max(renderingScope.horizontalPixelRatio, column.right - column.left),\n        this._data.barSpacing * renderingScope.horizontalPixelRatio\n      );\n      const margin = 0.3 * width;\n      const widthWithMargin = width - margin * 2;\n      const totalBox = positionsBox(zeroY, stack.y, renderingScope.verticalPixelRatio);\n      if (isHoveredTick) {\n        const highlightOffset = 0.3 * ctx.canvas.height;\n        const highlightLength = ctx.canvas.height - highlightOffset;\n        ctx.fillStyle = this._options.highlightColor;\n        roundRect(ctx, column.left + margin, highlightOffset, widthWithMargin, highlightLength, 8);\n        ctx.globalAlpha = 1;\n      } else {\n        ctx.globalAlpha = 0.4;\n      }\n      if (isCurrentTick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick === void 0) {\n        ctx.fillStyle = this._options.color ?? \"white\";\n      } else if (this._options.activeTick > stack.tick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick < stack.tick) {\n        ctx.fillStyle = this._options.tokenAColor;\n      }\n      roundRect(ctx, column.left + margin, totalBox.position, widthWithMargin, totalBox.length, 8);\n      ctx.globalAlpha = 1;\n      if (isCurrentTick && this._options.activeTickProgress) {\n        ctx.globalCompositeOperation = \"source-atop\";\n        const activeRangeAdjustedHeight = totalBox.length * this._options.activeTickProgress;\n        const activeRangeAdjustedPosition = totalBox.position + (totalBox.length - activeRangeAdjustedHeight);\n        ctx.fillStyle = this._options.tokenAColor;\n        ctx.beginPath();\n        ctx.fillRect(column.left, activeRangeAdjustedPosition, width, activeRangeAdjustedHeight);\n        ctx.globalCompositeOperation = \"source-over\";\n      }\n    }\n  }\n}\n","\"use strict\";\nimport {\n  LiquidityBarSeriesRenderer\n} from \"components/Charts/LiquidityChart/renderer\";\nimport {\n  customSeriesDefaultOptions\n} from \"lightweight-charts\";\nexport class LiquidityBarSeries {\n  _renderer;\n  _tokenAColor;\n  _tokenBColor;\n  _highlightColor;\n  constructor(props) {\n    this._tokenAColor = props.tokenAColor;\n    this._renderer = new LiquidityBarSeriesRenderer(props);\n    this._tokenBColor = props.tokenBColor;\n    this._highlightColor = props.highlightColor;\n  }\n  priceValueBuilder(plotRow) {\n    return [0, plotRow.liquidity];\n  }\n  isWhitespace(data) {\n    return !data.liquidity;\n  }\n  renderer() {\n    return this._renderer;\n  }\n  update(data, options) {\n    this._renderer.update(data, options);\n  }\n  defaultOptions() {\n    return {\n      ...customSeriesDefaultOptions,\n      tokenAColor: this._tokenAColor,\n      tokenBColor: this._tokenBColor,\n      highlightColor: this._highlightColor\n    };\n  }\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { Pool as PoolV3, TICK_SPACINGS, TickMath as TickMathV3, tickToPrice } from \"@uniswap/v3-sdk\";\nimport { Pool as PoolV4, tickToPrice as tickToPriceV4 } from \"@uniswap/v4-sdk\";\nimport { ChartModel } from \"components/Charts/ChartModel\";\nimport { LiquidityBarSeries } from \"components/Charts/LiquidityChart/liquidity-bar-series\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePoolActiveLiquidity } from \"hooks/usePoolTickData\";\nimport JSBI from \"jsbi\";\nimport { useEffect, useState } from \"react\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport class LiquidityBarChartModel extends ChartModel {\n  series;\n  activeTick;\n  constructor(chartDiv, params) {\n    super(chartDiv, params);\n    this.series = this.api.addCustomSeries(new LiquidityBarSeries(params));\n    this.series.setData(this.data);\n    this.updateOptions(params);\n    this.fitContent();\n  }\n  updateOptions(params) {\n    super.updateOptions(params, {\n      localization: {\n        locale: params.locale\n      },\n      rightPriceScale: {\n        visible: false,\n        borderVisible: false,\n        scaleMargins: {\n          top: 0.35,\n          bottom: 0\n        },\n        autoScale: true\n      },\n      timeScale: {\n        visible: false,\n        fixLeftEdge: true,\n        fixRightEdge: true,\n        borderVisible: false\n      },\n      crosshair: {\n        horzLine: {\n          visible: false,\n          labelVisible: false\n        },\n        vertLine: {\n          visible: false,\n          labelVisible: false\n        }\n      },\n      grid: {\n        vertLines: {\n          visible: false\n        },\n        horzLines: {\n          visible: false\n        }\n      }\n    });\n    const { data, activeTick } = params;\n    this.activeTick = activeTick;\n    if (this.data !== data) {\n      this.data = data;\n      this.series.setData(data);\n      this.fitContent();\n    }\n    this.series.applyOptions({\n      priceFormat: {\n        type: \"volume\"\n      },\n      priceLineVisible: false,\n      lastValueVisible: false\n    });\n    this.series.applyOptions(params);\n  }\n  onSeriesHover(hoverData) {\n    super.onSeriesHover(hoverData);\n    const updatedOptions = { hoveredTick: hoverData?.item.tick ?? this.activeTick };\n    this.series.applyOptions(updatedOptions);\n  }\n  activeTickIndex() {\n    return this.data.findIndex((bar) => bar.tick === this.activeTick);\n  }\n  fitContent() {\n    const length = this.data.length;\n    const activeTickIndex = this.data.findIndex((bar) => bar.tick === this.activeTick);\n    const midPoint = activeTickIndex !== -1 ? activeTickIndex : length / 2;\n    this.api.timeScale().setVisibleLogicalRange({ from: Math.max(midPoint - 50, 0), to: Math.min(midPoint + 50, this.data.length) });\n  }\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nfunction maxAmount(token) {\n  return CurrencyAmount.fromRawAmount(token, MAX_UINT128.toString());\n}\nasync function calculateActiveRangeTokensLocked(token0, token1, feeTier, tick, poolData) {\n  if (!poolData.currentTick || !poolData.sqrtPriceX96 || !poolData.liquidity) {\n    return void 0;\n  }\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool1 = new PoolV3(\n      token0,\n      token1,\n      feeTier,\n      poolData.sqrtPriceX96,\n      tick.liquidityActive,\n      poolData.currentTick,\n      mockTicks\n    );\n    const bottomOfRangePrice = TickMathV3.getSqrtRatioAtTick(mockTicks[0].index);\n    const token1Amount = (await pool1.getOutputAmount(maxAmount(token0), bottomOfRangePrice))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const topOfRangePrice = TickMathV3.getSqrtRatioAtTick(mockTicks[1].index);\n    const token0Amount = (await pool1.getOutputAmount(maxAmount(token1), topOfRangePrice))[0];\n    const amount1Locked = parseFloat(tick.sdkPrice.quote(token0Amount).toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport async function calculateTokensLockedV3(token0, token1, feeTier, tick) {\n  try {\n    const tickSpacing = TICK_SPACINGS[feeTier];\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const sqrtPriceX96 = TickMathV3.getSqrtRatioAtTick(tick.tick);\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool = new PoolV3(token0, token1, Number(feeTier), sqrtPriceX96, tick.liquidityActive, tick.tick, mockTicks);\n    const nextSqrtX96 = TickMathV3.getSqrtRatioAtTick(tick.tick - tickSpacing);\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString());\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const amount1Locked = parseFloat(token1Amount.toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport async function calculateTokensLockedV4(token0, token1, feeTier, tickSpacing, hooks, tick) {\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const sqrtPriceX96 = TickMathV3.getSqrtRatioAtTick(tick.tick);\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool = new PoolV4(\n      token0,\n      token1,\n      Number(feeTier),\n      tickSpacing,\n      hooks,\n      sqrtPriceX96,\n      tick.liquidityActive,\n      tick.tick,\n      mockTicks\n    );\n    const nextSqrtX96 = TickMathV3.getSqrtRatioAtTick(tick.tick - tickSpacing);\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString());\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const amount1Locked = parseFloat(token1Amount.toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport function useLiquidityBarData({\n  currencyA,\n  currencyB,\n  feeTier,\n  isReversed,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId\n}) {\n  const { formatNumber, formatPrice } = useFormatter();\n  const tokenAWrapped = currencyA.wrapped;\n  const tokenBWrapped = currencyB.wrapped;\n  const activePoolData = usePoolActiveLiquidity({\n    currencyA,\n    currencyB,\n    feeAmount: feeTier,\n    version,\n    poolId,\n    chainId,\n    tickSpacing: tickSpacing ?? TICK_SPACINGS[feeTier],\n    hooks\n  });\n  const [tickData, setTickData] = useState();\n  useEffect(() => {\n    async function formatData() {\n      const ticksProcessed = activePoolData.data;\n      if (!ticksProcessed) {\n        return;\n      }\n      let activeRangePercentage = void 0;\n      let activeRangeIndex = void 0;\n      const barData = [];\n      for (let index = 0; index < ticksProcessed.length; index++) {\n        const t = ticksProcessed[index];\n        const fakeTime = isReversed ? index * 1e3 : (ticksProcessed.length - index) * 1e3;\n        const isActive = activePoolData.activeTick === t.tick;\n        let price0 = t.sdkPrice;\n        let price1 = t.sdkPrice.invert();\n        if (isActive && activePoolData.activeTick && activePoolData.currentTick) {\n          activeRangeIndex = index;\n          activeRangePercentage = (activePoolData.currentTick - t.tick) / TICK_SPACINGS[feeTier];\n          price0 = version === ProtocolVersion.V3 ? tickToPrice(tokenAWrapped, tokenBWrapped, t.tick) : tickToPriceV4(currencyA, currencyB, t.tick);\n          price1 = price0.invert();\n        }\n        const { amount0Locked, amount1Locked } = await (version === ProtocolVersion.V3 ? calculateTokensLockedV3(tokenAWrapped, tokenBWrapped, feeTier, t) : calculateTokensLockedV4(\n          currencyA,\n          currencyB,\n          feeTier,\n          tickSpacing ?? TICK_SPACINGS[feeTier],\n          hooks ?? ZERO_ADDRESS,\n          t\n        ));\n        barData.push({\n          tick: t.tick,\n          liquidity: parseFloat(t.liquidityActive.toString()),\n          price0: formatPrice({ price: price0, type: NumberType.SwapDetailsAmount }),\n          price1: formatPrice({ price: price1, type: NumberType.SwapDetailsAmount }),\n          time: fakeTime,\n          amount0Locked,\n          amount1Locked\n        });\n      }\n      barData?.map((entry, i) => {\n        if (i > 0) {\n          barData[i - 1].amount0Locked = entry.amount0Locked;\n          barData[i - 1].amount1Locked = entry.amount1Locked;\n        }\n      });\n      const activeRangeData = activeRangeIndex !== void 0 ? barData[activeRangeIndex] : void 0;\n      if (activeRangeIndex !== void 0 && activeRangeData) {\n        const activeTickTvl = await calculateActiveRangeTokensLocked(\n          tokenAWrapped,\n          tokenBWrapped,\n          feeTier,\n          ticksProcessed[activeRangeIndex],\n          activePoolData\n        );\n        barData[activeRangeIndex] = { ...activeRangeData, ...activeTickTvl };\n      }\n      if (!isReversed) {\n        barData.reverse();\n      }\n      setTickData({ barData: barData.filter((t) => t.liquidity > 0), activeRangeData, activeRangePercentage });\n    }\n    formatData();\n  }, [\n    activePoolData,\n    currencyA,\n    currencyB,\n    tokenAWrapped,\n    tokenBWrapped,\n    formatNumber,\n    formatPrice,\n    isReversed,\n    feeTier,\n    version,\n    tickSpacing,\n    hooks\n  ]);\n  return { tickData, activeTick: activePoolData.activeTick, loading: activePoolData.isLoading || !tickData };\n}\n","\"use strict\";\nexport class ClosestTimeIndexFinder {\n  numbers;\n  cache;\n  constructor(sortedNumbers) {\n    this.numbers = sortedNumbers;\n    this.cache = /* @__PURE__ */ new Map();\n  }\n  findClosestIndex(target, direction) {\n    const cacheKey = `${target}:${direction}`;\n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n    const closestIndex = this._performSearch(target, direction);\n    this.cache.set(cacheKey, closestIndex);\n    return closestIndex;\n  }\n  _performSearch(target, direction) {\n    let low = 0;\n    let high = this.numbers.length - 1;\n    if (target <= this.numbers[0]?.time) {\n      return 0;\n    }\n    if (target >= this.numbers[high]?.time) {\n      return high;\n    }\n    while (low <= high) {\n      const mid = Math.floor((low + high) / 2);\n      const num = this.numbers[mid]?.time;\n      if (num === target) {\n        return mid;\n      } else if (num > target) {\n        high = mid - 1;\n      } else {\n        low = mid + 1;\n      }\n    }\n    return direction === \"left\" ? low : high;\n  }\n}\n","\"use strict\";\nexport class UpperLowerInRange {\n  _arr;\n  _chunkSize;\n  _cache;\n  constructor(arr, chunkSize = 10) {\n    this._arr = arr;\n    this._chunkSize = chunkSize;\n    this._cache = /* @__PURE__ */ new Map();\n  }\n  getMinMax(startIndex, endIndex) {\n    const cacheKey = `${startIndex}:${endIndex}`;\n    if (cacheKey in this._cache) {\n      return this._cache.get(cacheKey);\n    }\n    const result = {\n      lower: Infinity,\n      upper: -Infinity\n    };\n    const startChunkIndex = Math.floor(startIndex / this._chunkSize);\n    const endChunkIndex = Math.floor(endIndex / this._chunkSize);\n    for (let chunkIndex = startChunkIndex; chunkIndex <= endChunkIndex; chunkIndex++) {\n      const chunkStart = chunkIndex * this._chunkSize;\n      const chunkEnd = Math.min((chunkIndex + 1) * this._chunkSize - 1, this._arr.length - 1);\n      const chunkCacheKey = `${chunkStart}:${chunkEnd}`;\n      if (chunkCacheKey in this._cache.keys()) {\n        const item = this._cache.get(cacheKey);\n        this._check(item, result);\n      } else {\n        const chunkResult = {\n          lower: Infinity,\n          upper: -Infinity\n        };\n        for (let i = chunkStart; i <= chunkEnd; i++) {\n          this._check(this._arr[i], chunkResult);\n        }\n        this._cache.set(chunkCacheKey, chunkResult);\n        this._check(chunkResult, result);\n      }\n    }\n    this._cache.set(cacheKey, result);\n    return result;\n  }\n  _check(item, state) {\n    if (item.lower < state.lower) {\n      state.lower = item.lower;\n    }\n    if (item.upper > state.upper) {\n      state.upper = item.upper;\n    }\n  }\n}\n","\"use strict\";\nexport function cloneReadonly(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n","\"use strict\";\nexport class PluginBase {\n  _chart = void 0;\n  _series = void 0;\n  requestUpdate() {\n    if (this._requestUpdate) {\n      this._requestUpdate();\n    }\n  }\n  _requestUpdate;\n  attached({ chart, series, requestUpdate }) {\n    this._chart = chart;\n    this._series = series;\n    this._series.subscribeDataChanged(this._fireDataUpdated);\n    this._requestUpdate = requestUpdate;\n    this.requestUpdate();\n  }\n  detached() {\n    this._series?.unsubscribeDataChanged(this._fireDataUpdated);\n    this._chart = void 0;\n    this._series = void 0;\n    this._requestUpdate = void 0;\n  }\n  get chart() {\n    if (!this._chart) {\n      throw new Error(\"Value is undefined\");\n    }\n    return this._chart;\n  }\n  get series() {\n    if (!this._series) {\n      throw new Error(\"Value is undefined\");\n    }\n    return this._series;\n  }\n  // This method is a class property to maintain the\n  // lexical 'this' scope (due to the use of the arrow function)\n  // and to ensure its reference stays the same, so we can unsubscribe later.\n  _fireDataUpdated = (scope) => {\n    if (this.dataUpdated) {\n      this.dataUpdated(scope);\n    }\n  };\n}\n","\"use strict\";\nimport { ClosestTimeIndexFinder } from \"components/Charts/BandsIndicator/helpers/closest-index\";\nimport { UpperLowerInRange } from \"components/Charts/BandsIndicator/helpers/min-max-in-range\";\nimport { cloneReadonly } from \"components/Charts/BandsIndicator/helpers/simple-clone\";\nimport { PluginBase } from \"components/Charts/BandsIndicator/plugin-base\";\nclass BandsIndicatorPaneRenderer {\n  _viewData;\n  constructor(data) {\n    this._viewData = data;\n  }\n  draw() {\n  }\n  drawBackground(target) {\n    const points = this._viewData.data;\n    target.useBitmapCoordinateSpace((scope) => {\n      const ctx = scope.context;\n      ctx.scale(scope.horizontalPixelRatio, scope.verticalPixelRatio);\n      ctx.strokeStyle = this._viewData.options.lineColor;\n      ctx.lineWidth = this._viewData.options.lineWidth;\n      ctx.beginPath();\n      const region = new Path2D();\n      const lines = new Path2D();\n      region.moveTo(points[0]?.x, points[0]?.upper);\n      lines.moveTo(points[0]?.x, points[0]?.upper);\n      for (const point of points) {\n        region.lineTo(point?.x, point.upper);\n        lines.lineTo(point?.x, point.upper);\n      }\n      const end = points.length - 1;\n      region.lineTo(points[end]?.x, points[end]?.lower);\n      lines.moveTo(points[end]?.x, points[end]?.lower);\n      for (let i = points.length - 2; i >= 0; i--) {\n        region.lineTo(points[i]?.x, points[i]?.lower);\n        lines.lineTo(points[i]?.x, points[i]?.lower);\n      }\n      region.lineTo(points[0]?.x, points[0]?.upper);\n      region.closePath();\n      ctx.stroke(lines);\n      ctx.fillStyle = this._viewData.options.fillColor;\n      ctx.fill(region);\n    });\n  }\n}\nclass BandsIndicatorPaneView {\n  _source;\n  _data;\n  constructor(source) {\n    this._source = source;\n    this._data = {\n      data: [],\n      options: this._source._options\n    };\n  }\n  update() {\n    const series = this._source.series;\n    const timeScale = this._source.chart.timeScale();\n    this._data.data = this._source._bandsData.map((d) => {\n      return {\n        x: timeScale.timeToCoordinate(d.time) ?? -100,\n        upper: series.priceToCoordinate(d.upper) ?? -100,\n        lower: series.priceToCoordinate(d.lower) ?? -100\n      };\n    });\n  }\n  renderer() {\n    return new BandsIndicatorPaneRenderer(this._data);\n  }\n}\nexport class BandsIndicator extends PluginBase {\n  _paneViews;\n  _seriesData = [];\n  _bandsData = [];\n  _options;\n  _timeIndices;\n  _upperLower;\n  constructor(options) {\n    super();\n    this._options = options;\n    this._paneViews = [new BandsIndicatorPaneView(this)];\n    this._timeIndices = new ClosestTimeIndexFinder([]);\n    this._upperLower = new UpperLowerInRange([]);\n  }\n  updateOptions(options) {\n    this._options = options;\n    this.dataUpdated(\"full\");\n  }\n  updateAllViews() {\n    this._paneViews.forEach((pw) => pw.update());\n  }\n  paneViews() {\n    return this._paneViews;\n  }\n  attached(p) {\n    super.attached(p);\n    this.dataUpdated(\"full\");\n  }\n  dataUpdated(scope) {\n    this._seriesData = cloneReadonly(this.series.data());\n    this.calculateBands();\n    if (scope === \"full\") {\n      this._timeIndices = new ClosestTimeIndexFinder(this._seriesData);\n    }\n  }\n  calculateBands() {\n    const bandData = this._seriesData.map((d) => {\n      return {\n        upper: this._options.upperValue,\n        lower: this._options.lowerValue,\n        time: d.time\n      };\n    });\n    this._bandsData = bandData;\n    this._upperLower = new UpperLowerInRange(this._bandsData, 4);\n  }\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nexport function getCrosshairProps(color, { yCoordinate, xCoordinate }) {\n  return {\n    position: \"absolute\",\n    left: xCoordinate - 3,\n    top: yCoordinate - 3,\n    // Center the crosshair vertically on the price line.\n    width: 6,\n    height: 6,\n    borderRadius: \"$roundedFull\",\n    backgroundColor: color\n  };\n}\nexport function isEffectivelyInfinity(value) {\n  return Math.abs(value) >= 1e20 || Math.abs(value) <= 1e-20;\n}\nexport function priceToNumber(price, defaultValue) {\n  const baseCurrency = price?.baseCurrency;\n  if (!baseCurrency) {\n    return defaultValue;\n  }\n  const sigFigs = Boolean(baseCurrency.decimals) && baseCurrency.decimals > 0 ? baseCurrency.decimals : 6;\n  const numPrice = Number(\n    price.quote(CurrencyAmount.fromRawAmount(baseCurrency, Math.pow(10, baseCurrency.decimals)))?.toSignificant(sigFigs) ?? 0\n  );\n  if (isEffectivelyInfinity(numPrice)) {\n    return defaultValue;\n  }\n  return numPrice;\n}\n","\"use strict\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { ActiveLiquidityChart } from \"components/Charts/ActiveLiquidityChart/ActiveLiquidityChart\";\nimport { BandsIndicator } from \"components/Charts/BandsIndicator/bands-indicator\";\nimport { cloneReadonly } from \"components/Charts/BandsIndicator/helpers/simple-clone\";\nimport {\n  Chart,\n  ChartModel,\n  DEFAULT_BOTTOM_PRICE_SCALE_MARGIN,\n  DEFAULT_TOP_PRICE_SCALE_MARGIN\n} from \"components/Charts/ChartModel\";\nimport { getCrosshairProps, priceToNumber } from \"components/Charts/LiquidityPositionRangeChart/utils\";\nimport { useDensityChartData } from \"components/Charts/LiquidityRangeInput/hooks\";\nimport { PriceChartType, formatTickMarks } from \"components/Charts/utils\";\nimport ErrorBoundary from \"components/ErrorBoundary\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePoolPriceChartData } from \"hooks/usePoolPriceChartData\";\nimport { CrosshairMode, LineStyle, LineType } from \"lightweight-charts\";\nimport {\n  getCurrencyAddressWithWrap,\n  getInvertedTuple,\n  getPoolIdOrAddressFromCreatePositionInfo,\n  getSortedCurrenciesTupleWithWrap\n} from \"pages/Pool/Positions/create/utils\";\nimport { useMemo, useState } from \"react\";\nimport { Flex, Shine, useSporeColors } from \"ui/src\";\nimport { HorizontalDensityChart } from \"ui/src/components/icons/HorizontalDensityChart\";\nimport { LoadingPriceCurve } from \"ui/src/components/icons/LoadingPriceCurve\";\nimport { opacify } from \"ui/src/theme\";\nimport { zIndexes } from \"ui/src/theme/zIndexes\";\nimport { HistoryDuration } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport useResizeObserver from \"use-resize-observer\";\nimport { formatNumber } from \"utilities/src/format/localeBased\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nexport const CHART_HEIGHT = 52;\nexport const CHART_WIDTH = 224;\nconst X_AXIS_HEIGHT = 28;\nconst Y_AXIS_WIDTH = 40;\nconst LIQUIDITY_BARS_WIDTH = 120;\nconst pulseKeyframe = `\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(5);\n      opacity: 0;\n    }\n  }\n`;\nexport class LPPriceChartModel extends ChartModel {\n  series;\n  rangeBandSeries;\n  extendedData;\n  positionRangeMin;\n  positionRangeMax;\n  bandIndicator;\n  constructor(chartDiv, params) {\n    super(chartDiv, params);\n    this.series = this.api.addAreaSeries();\n    this.series.setData(this.data);\n    this.extendedData = LPPriceChartModel.generateExtendedData(this.data, params.disableExtendedTimeScale);\n    this.rangeBandSeries = this.api.addLineSeries({ priceScaleId: \"right\" });\n    this.rangeBandSeries.setData(this.extendedData);\n    this.rangeBandSeries.applyOptions({\n      priceLineVisible: false,\n      color: \"transparent\"\n    });\n    this.calculatePositionRange(params);\n    this.updateOptions(params);\n    this.fitContent();\n    this.overrideCrosshair(params);\n  }\n  updateOptions(params) {\n    if (this.data !== params.data) {\n      this.data = params.data;\n      this.series.setData(this.data);\n      this.extendedData = LPPriceChartModel.generateExtendedData(this.data, params.disableExtendedTimeScale);\n      this.calculatePositionRange(params);\n      this.rangeBandSeries?.setData(this.extendedData);\n      this.fitContent();\n      this.overrideCrosshair(params);\n    }\n    super.updateOptions(params, {\n      rightPriceScale: {\n        visible: false,\n        autoScale: true,\n        borderVisible: false,\n        minimumWidth: Y_AXIS_WIDTH,\n        alignLabels: true\n      },\n      leftPriceScale: {\n        visible: false\n      },\n      timeScale: {\n        visible: params.showXAxis ?? false,\n        borderVisible: false,\n        tickMarkFormatter: formatTickMarks\n      },\n      handleScroll: false,\n      handleScale: false,\n      localization: {\n        priceFormatter: (priceValue) => {\n          const currentLocale = window.navigator.languages[0];\n          const formatted = formatNumber({ input: priceValue, locale: currentLocale });\n          return formatted;\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Hidden,\n        vertLine: {\n          color: \"transparent\"\n        },\n        horzLine: {\n          color: \"transparent\"\n        }\n      }\n    });\n    const autoscaleInfoProvider = (original) => {\n      const res = original();\n      if (params.minVisiblePrice && params.maxVisiblePrice) {\n        return {\n          ...res,\n          priceRange: {\n            minValue: params.minVisiblePrice,\n            maxValue: params.maxVisiblePrice\n          }\n        };\n      }\n      return res;\n    };\n    const priceLineColor = LPPriceChartModel.getPriceLineColor(params);\n    this.series.applyOptions({\n      priceLineVisible: true,\n      priceLineStyle: LineStyle.SparseDotted,\n      priceLineColor: params.currentPriceLineColor ?? priceLineColor,\n      lineType: this.data.length < 20 ? LineType.WithSteps : LineType.Curved,\n      lineWidth: 2,\n      lineColor: priceLineColor,\n      topColor: \"transparent\",\n      bottomColor: \"transparent\",\n      autoscaleInfoProvider\n    });\n    this.series.priceScale().applyOptions({\n      scaleMargins: params.priceScaleMargins ?? {\n        top: DEFAULT_TOP_PRICE_SCALE_MARGIN,\n        bottom: DEFAULT_BOTTOM_PRICE_SCALE_MARGIN\n      }\n    });\n    this.rangeBandSeries?.applyOptions({\n      autoscaleInfoProvider\n    });\n    requestAnimationFrame(() => {\n      if (params.setBoundaryPrices) {\n        const maxPrice = this.series.coordinateToPrice(0);\n        const minPrice = this.series.coordinateToPrice(params.height);\n        params.setBoundaryPrices([minPrice, maxPrice]);\n      }\n    });\n  }\n  static getPriceLineColor(params) {\n    if (params.color) {\n      return params.color;\n    }\n    switch (params.positionStatus) {\n      case PositionStatus.OUT_OF_RANGE:\n        return params.colors.statusCritical.val;\n      case PositionStatus.IN_RANGE:\n        return params.colors.statusSuccess.val;\n      case PositionStatus.CLOSED:\n      default:\n        return params.colors.neutral2.val;\n    }\n  }\n  calculatePositionRange(params) {\n    this.positionRangeMin = typeof params.positionPriceLower === \"number\" ? params.positionPriceLower : priceToNumber(params.positionPriceLower, 0);\n    this.positionRangeMax = typeof params.positionPriceUpper === \"number\" ? params.positionPriceUpper : priceToNumber(params.positionPriceUpper, Number.MAX_SAFE_INTEGER);\n    if (params.positionPriceLower !== void 0 && params.positionPriceUpper !== void 0) {\n      if (!this.bandIndicator) {\n        this.bandIndicator = new BandsIndicator({\n          lineColor: opacify(10, params.theme.neutral1),\n          fillColor: params.theme.surface3,\n          lineWidth: 1,\n          upperValue: this.positionRangeMax,\n          lowerValue: this.positionRangeMin\n        });\n        this.rangeBandSeries?.attachPrimitive(this.bandIndicator);\n      } else {\n        this.bandIndicator.updateOptions({\n          lineColor: opacify(10, params.theme.neutral1),\n          fillColor: params.theme.surface3,\n          lineWidth: 1,\n          upperValue: this.positionRangeMax,\n          lowerValue: this.positionRangeMin\n        });\n        this.bandIndicator.updateAllViews();\n      }\n    }\n  }\n  overrideCrosshair(params) {\n    const lastDataPoint = this.data[this.data.length - 1];\n    if (!lastDataPoint) {\n      return;\n    }\n    requestAnimationFrame(() => {\n      const xCoordinate = this.api.timeScale().timeToCoordinate(lastDataPoint.time);\n      const yCoordinate = this.series.priceToCoordinate(lastDataPoint.value);\n      params.setCrosshairCoordinates?.({ x: Number(xCoordinate), y: Number(yCoordinate) });\n    });\n  }\n  static generateExtendedData(data, disableExtendedTimeScale = false) {\n    if (disableExtendedTimeScale) {\n      return data;\n    }\n    const lastTime = data[data.length - 1]?.time;\n    if (!lastTime) {\n      return data;\n    }\n    const timeDelta = lastTime - data[0]?.time;\n    const timeIncrement = timeDelta / data.length;\n    if (timeIncrement === 0) {\n      return data;\n    }\n    const newData = cloneReadonly(data);\n    const lastData = newData[newData.length - 1];\n    for (let i = 1; i <= Math.floor(data.length / 10); i++) {\n      const time = lastTime + timeIncrement * i;\n      newData.push({\n        ...lastData,\n        time\n      });\n    }\n    return newData;\n  }\n}\nexport function getLiquidityRangeChartProps({\n  positionInfo,\n  priceRangeInfo,\n  pricesInverted,\n  interactive\n}) {\n  const { currencies, protocolVersion } = positionInfo;\n  if (!currencies || !currencies[1] || !currencies[0]?.chainId) {\n    return void 0;\n  }\n  const sortedCurrencies = getSortedCurrenciesTupleWithWrap(currencies[0], currencies[1], protocolVersion);\n  const poolAddressOrId = getPoolIdOrAddressFromCreatePositionInfo(positionInfo);\n  const priceOrdering = priceRangeInfo.protocolVersion === ProtocolVersion.V2 ? {} : {\n    base: sortedCurrencies[0],\n    priceLower: priceRangeInfo.prices[0],\n    priceUpper: priceRangeInfo.prices[1]\n  };\n  const [baseCurrency, quoteCurrency] = getInvertedTuple([currencies[0], currencies[1]], pricesInverted);\n  return {\n    poolAddressOrId,\n    version: protocolVersion,\n    quoteCurrency,\n    baseCurrency,\n    chainId: currencies[0].chainId,\n    priceOrdering,\n    positionStatus: priceRangeInfo.protocolVersion !== ProtocolVersion.V2 && priceRangeInfo.outOfRange ? PositionStatus.OUT_OF_RANGE : PositionStatus.IN_RANGE,\n    interactive\n  };\n}\nexport function LiquidityPositionRangeChartLoader({\n  width,\n  height,\n  ...rest\n}) {\n  return <Shine\n    height={height}\n    width={width}\n    position=\"absolute\"\n    top={0}\n    left={0}\n    right={0}\n    bottom={0}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    {...rest}\n  >\r\n      <LoadingPriceCurve size={{ width, height }} color=\"$neutral2\" />\r\n    </Shine>;\n}\nfunction LiquidityPositionRangeChart({\n  version,\n  quoteCurrency,\n  baseCurrency,\n  poolAddressOrId,\n  chainId,\n  positionStatus,\n  priceOrdering,\n  duration,\n  width = CHART_WIDTH,\n  height = CHART_HEIGHT,\n  showXAxis,\n  showYAxis = false,\n  interactive,\n  tickSpacing,\n  hook,\n  feeTier,\n  showLiquidityBars,\n  crosshairEnabled,\n  showChartBorder = false\n}) {\n  const colors = useSporeColors();\n  const isV2 = version === ProtocolVersion.V2;\n  const isV3 = version === ProtocolVersion.V3;\n  const isV4 = version === ProtocolVersion.V4;\n  const chainInfo = getChainInfo(chainId);\n  const variables = poolAddressOrId ? {\n    addressOrId: poolAddressOrId,\n    chain: chainInfo.backendChain.chain,\n    duration: duration ?? HistoryDuration.Month,\n    isV4,\n    isV3,\n    isV2\n  } : void 0;\n  const sortedCurrencies = useMemo(\n    () => getSortedCurrenciesTupleWithWrap(quoteCurrency, baseCurrency, version),\n    [quoteCurrency, baseCurrency, version]\n  );\n  const priceData = usePoolPriceChartData(\n    variables,\n    quoteCurrency,\n    version,\n    getCurrencyAddressWithWrap(sortedCurrencies[0], version)\n  );\n  const [crosshairCoordinates, setCrosshairCoordinates] = useState();\n  const [boundaryPrices, setBoundaryPrices] = useState();\n  const chartParams = useMemo(() => {\n    return {\n      data: priceData.entries,\n      stale: priceData.dataQuality === DataQuality.STALE,\n      type: PriceChartType.LINE,\n      color: LPPriceChartModel.getPriceLineColor({ positionStatus, colors }),\n      colors,\n      positionPriceLower: isV2 ? 0 : priceOrdering.priceLower,\n      positionPriceUpper: isV2 ? Number.MAX_SAFE_INTEGER : priceOrdering.priceUpper,\n      height: showLiquidityBars ? height - X_AXIS_HEIGHT : height,\n      priceScaleMargins: {\n        top: 0,\n        bottom: 0\n      },\n      setCrosshairCoordinates,\n      setBoundaryPrices,\n      showXAxis,\n      showYAxis,\n      interactive\n    };\n  }, [\n    priceOrdering.priceLower,\n    priceOrdering.priceUpper,\n    priceData.entries,\n    priceData.dataQuality,\n    positionStatus,\n    colors,\n    isV2,\n    height,\n    showLiquidityBars,\n    showXAxis,\n    showYAxis,\n    interactive\n  ]);\n  const { formattedData, isLoading: liquidityDataLoading } = useDensityChartData({\n    poolId: poolAddressOrId,\n    currencyA: sortedCurrencies[0],\n    currencyB: sortedCurrencies[1],\n    invertPrices: quoteCurrency.equals(sortedCurrencies[0]),\n    version,\n    feeAmount: Number(feeTier),\n    tickSpacing,\n    hooks: hook ?? ZERO_ADDRESS,\n    skip: !showLiquidityBars\n  });\n  const sortedFormattedData = useMemo(() => {\n    if (!formattedData) {\n      return void 0;\n    }\n    const uniqueTicksMap = /* @__PURE__ */ new Map();\n    formattedData.forEach((entry) => {\n      uniqueTicksMap.set(entry.tick, entry);\n    });\n    return Array.from(uniqueTicksMap.values()).sort((a, b) => a.price0 - b.price0);\n  }, [formattedData]);\n  const loading = liquidityDataLoading && priceData.loading && priceData.entries.length === 0;\n  const dataUnavailable = priceData.entries.length === 0 && !liquidityDataLoading && !priceData.loading;\n  const { ref: frameRef, width: chartWidth } = useResizeObserver();\n  const hasChartWidth = !!chartWidth;\n  const shouldRenderChart = !dataUnavailable && hasChartWidth;\n  const shouldRenderCrosshair = crosshairEnabled && shouldRenderChart && !priceData.loading && crosshairCoordinates?.y && crosshairCoordinates.y > 5 && crosshairCoordinates.x;\n  return <Flex ref={frameRef} height={height} width={width} $md={{ width: \"100%\" }} overflow=\"hidden\" position=\"relative\">\r\n      {loading && chartWidth && !dataUnavailable && <LiquidityPositionRangeChartLoader\n    width={chartWidth - (showLiquidityBars ? Y_AXIS_WIDTH : 0)}\n    height={height}\n  />}\r\n      {loading && <LoadingPriceCurve\n    size={{ width: chartWidth ?? CHART_WIDTH, height: height ?? CHART_HEIGHT }}\n    color=\"$neutral2\"\n    mt=\"$spacing8\"\n    ml=\"$spacing4\"\n  />}\r\n      {shouldRenderChart && <Flex\n    width={showLiquidityBars ? chartWidth - Y_AXIS_WIDTH + 2 : chartWidth}\n    $md={{ width: \"100%\" }}\n    zIndex={zIndexes.default}\n    position=\"relative\"\n  >\r\n          {showChartBorder && <Flex\n    position=\"absolute\"\n    left={0}\n    top={0}\n    width={chartWidth - Y_AXIS_WIDTH}\n    height={height - X_AXIS_HEIGHT}\n    borderRightWidth={1}\n    borderBottomWidth={1}\n    borderColor=\"$surface3\"\n  />}\r\n          <Chart Model={LPPriceChartModel} params={chartParams} height={height ?? CHART_HEIGHT} />\r\n        </Flex>}\r\n      <style>{pulseKeyframe}</style>\r\n      {shouldRenderCrosshair && <>\r\n          <Flex\n    {...getCrosshairProps(LPPriceChartModel.getPriceLineColor({ positionStatus, colors }), {\n      xCoordinate: crosshairCoordinates.x,\n      yCoordinate: crosshairCoordinates.y\n    })}\n  />\r\n          <Flex\n    {...getCrosshairProps(LPPriceChartModel.getPriceLineColor({ positionStatus, colors }), {\n      xCoordinate: crosshairCoordinates.x,\n      yCoordinate: crosshairCoordinates.y\n    })}\n    style={{\n      animation: \"pulse 1.5s linear infinite\"\n    }}\n  />\r\n        </>}\r\n      {showLiquidityBars && chartWidth && sortedFormattedData && !loading && boundaryPrices && <Flex\n    width={chartWidth}\n    height={height - X_AXIS_HEIGHT}\n    position=\"absolute\"\n    left={0}\n    top={0}\n    zIndex={zIndexes.mask}\n  >\r\n          <ActiveLiquidityChart\n    barColor={colors.surface3.val}\n    data={{\n      series: sortedFormattedData,\n      current: priceData.entries[priceData.entries.length - 1]?.value,\n      min: boundaryPrices[0],\n      max: boundaryPrices[1]\n    }}\n    brushDomain={[\n      priceToNumber(priceOrdering.priceLower, 0),\n      priceToNumber(priceOrdering.priceUpper, Number.MAX_SAFE_INTEGER)\n    ]}\n    disableBrush={true}\n    disableRightAxis={!showYAxis}\n    showDiffIndicators={false}\n    dimensions={{\n      width: chartWidth,\n      height: height - X_AXIS_HEIGHT,\n      contentWidth: LIQUIDITY_BARS_WIDTH,\n      axisLabelPaneWidth: Y_AXIS_WIDTH\n    }}\n    onBrushDomainChange={() => {\n    }}\n    quoteCurrency={quoteCurrency}\n    baseCurrency={baseCurrency}\n    isMobile={isMobileWeb}\n  />\r\n        </Flex>}\r\n      {showLiquidityBars && loading && chartWidth && <Shine\n    position=\"absolute\"\n    right={Y_AXIS_WIDTH}\n    top={0}\n    alignItems=\"flex-end\"\n    height={height - X_AXIS_HEIGHT}\n    width={chartWidth - Y_AXIS_WIDTH}\n  >\r\n          <HorizontalDensityChart color=\"$neutral2\" size={height - X_AXIS_HEIGHT} />\r\n        </Shine>}\r\n    </Flex>;\n}\nexport function WrappedLiquidityPositionRangeChart(props) {\n  return <ErrorBoundary fallback={() => null}>\r\n      <LiquidityPositionRangeChart {...props} />\r\n    </ErrorBoundary>;\n}\n","\"use strict\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { calculateTokensLockedV3, calculateTokensLockedV4 } from \"components/Charts/LiquidityChart\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport { usePoolActiveLiquidity } from \"hooks/usePoolTickData\";\nimport { useMemo } from \"react\";\nimport { ReactQueryCacheKey } from \"utilities/src/reactQuery/cache\";\nexport function useDensityChartData({\n  poolId,\n  currencyA,\n  currencyB,\n  feeAmount,\n  invertPrices,\n  version,\n  chainId,\n  tickSpacing,\n  hooks,\n  skip\n}) {\n  const { isLoading, error, data } = usePoolActiveLiquidity({\n    currencyA,\n    currencyB,\n    version,\n    poolId,\n    feeAmount,\n    chainId,\n    tickSpacing,\n    hooks,\n    skip\n  });\n  const fetcher = async () => {\n    if (!data?.length || !currencyA || !currencyB || !feeAmount || !tickSpacing) {\n      return null;\n    }\n    const newData = [];\n    for (let i = 0; i < data.length; i++) {\n      const t = data[i];\n      const price0 = invertPrices ? t.sdkPrice.invert().toSignificant(8) : t.sdkPrice.toSignificant(8);\n      const { amount0Locked, amount1Locked } = await (version === ProtocolVersion.V3 ? calculateTokensLockedV3(currencyA?.wrapped, currencyB?.wrapped, feeAmount, t) : calculateTokensLockedV4(\n        currencyA?.wrapped,\n        currencyB?.wrapped,\n        feeAmount,\n        tickSpacing,\n        hooks ?? ZERO_ADDRESS,\n        t\n      ));\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(price0),\n        tick: t.tick,\n        amount0Locked: invertPrices ? amount0Locked : amount1Locked,\n        amount1Locked: invertPrices ? amount1Locked : amount0Locked\n      };\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry);\n      }\n    }\n    return newData;\n  };\n  const { data: formattedData } = useQuery({\n    queryKey: [\n      ReactQueryCacheKey.DensityChartData,\n      poolId,\n      currencyA,\n      currencyB,\n      feeAmount,\n      invertPrices,\n      version,\n      chainId,\n      tickSpacing,\n      data\n    ],\n    queryFn: fetcher\n  });\n  return useMemo(() => {\n    return {\n      isLoading: isLoading || Boolean(data) && !formattedData,\n      error,\n      formattedData: isLoading ? void 0 : formattedData\n    };\n  }, [data, error, formattedData, isLoading]);\n}\n","\"use strict\";\nimport { ChartType } from \"components/Charts/utils\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { getCurrencyAddressWithWrap } from \"pages/Pool/Positions/create/utils\";\nimport { useMemo } from \"react\";\nimport {\n  usePoolPriceHistoryQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { isSameAddress } from \"utilities/src/addresses\";\nexport function usePoolPriceChartData(variables, currencyA, protocolVersion, sortedCurrencyAAddress) {\n  const { data, loading } = usePoolPriceHistoryQuery({ variables, skip: !variables?.addressOrId });\n  return useMemo(() => {\n    const { priceHistory } = data?.v2Pair ?? data?.v3Pool ?? data?.v4Pool ?? {};\n    const entries = priceHistory?.filter((price) => price !== null).map((price) => {\n      const value = isSameAddress(sortedCurrencyAAddress, getCurrencyAddressWithWrap(currencyA, protocolVersion)) ? price?.token0Price : price?.token1Price;\n      return {\n        time: price.timestamp,\n        value,\n        open: value,\n        high: value,\n        low: value,\n        close: value\n      };\n    }) ?? [];\n    const dataQuality = loading || !priceHistory || !priceHistory.length ? DataQuality.INVALID : DataQuality.VALID;\n    return { chartType: ChartType.PRICE, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, data?.v4Pool, loading, sortedCurrencyAAddress, currencyA, protocolVersion]);\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { tickToPrice as tickToPriceV3 } from \"@uniswap/v3-sdk\";\nimport { tickToPrice as tickToPriceV4 } from \"@uniswap/v4-sdk\";\nimport JSBI from \"jsbi\";\nconst PRICE_FIXED_DIGITS = 8;\nexport default function computeSurroundingTicks(token0, token1, activeTickProcessed, sortedTickData, pivot, ascending, version) {\n  let previousTickProcessed = {\n    ...activeTickProcessed\n  };\n  if (version === ProtocolVersion.V3 && (token0.isNative || token1.isNative)) {\n    return [];\n  }\n  let processedTicks = [];\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i]?.tick);\n    const sdkPrice = version === ProtocolVersion.V3 ? tickToPriceV3(token0, token1, tick) : tickToPriceV4(token0, token1, tick);\n    const currentTickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? \"\"),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? 0)\n      );\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      );\n    }\n    processedTicks.push(currentTickProcessed);\n    previousTickProcessed = currentTickProcessed;\n  }\n  if (!ascending) {\n    processedTicks = processedTicks.reverse();\n  }\n  return processedTicks;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pool as V3Pool, tickToPrice as tickToPriceV3 } from \"@uniswap/v3-sdk\";\nimport { Pool as V4Pool, tickToPrice as tickToPriceV4 } from \"@uniswap/v4-sdk\";\nimport { ZERO_ADDRESS } from \"constants/misc\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { getCurrencyAddressWithWrap, poolEnabledProtocolVersion } from \"pages/Pool/Positions/create/utils\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useMultichainContext } from \"state/multichain/useMultichainContext\";\nimport {\n  useAllV3TicksQuery,\n  useAllV4TicksQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { useGetPoolsByTokens } from \"uniswap/src/data/rest/getPools\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { toGraphQLChain } from \"uniswap/src/features/chains/utils\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport computeSurroundingTicks from \"utils/computeSurroundingTicks\";\nconst PRICE_FIXED_DIGITS = 8;\nconst getActiveTick = (tickCurrent, feeAmount, tickSpacing) => tickCurrent && feeAmount && tickSpacing ? Math.floor(tickCurrent / tickSpacing) * tickSpacing : void 0;\nconst MAX_TICK_FETCH_VALUE = 1e3;\nfunction usePaginatedTickQuery(poolId, version, skip = 0, chainId) {\n  const { defaultChainId } = useEnabledChains();\n  const supportedChainId = useSupportedChainId(chainId);\n  const v3Result = useAllV3TicksQuery({\n    variables: {\n      address: poolId?.toLowerCase() ?? \"\",\n      chain: toGraphQLChain(supportedChainId ?? defaultChainId),\n      skip,\n      first: MAX_TICK_FETCH_VALUE\n    },\n    skip: !poolId || version !== ProtocolVersion.V3,\n    pollInterval: ms(`30s`)\n  });\n  const v4Result = useAllV4TicksQuery({\n    variables: {\n      poolId: poolId ?? \"\",\n      chain: toGraphQLChain(supportedChainId ?? defaultChainId),\n      skip,\n      first: MAX_TICK_FETCH_VALUE\n    },\n    skip: !poolId || version !== ProtocolVersion.V4,\n    pollInterval: ms(`30s`)\n  });\n  return useMemo(() => {\n    if (version === ProtocolVersion.V3) {\n      return v3Result;\n    } else if (version === ProtocolVersion.V4) {\n      return v4Result;\n    }\n    return {\n      data: void 0,\n      error: new Error(\"Invalid version\"),\n      loading: false\n    };\n  }, [v3Result, v4Result, version]);\n}\nfunction useAllPoolTicks({\n  currencyA,\n  currencyB,\n  feeAmount,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  precalculatedPoolId\n}) {\n  const [skipNumber, setSkipNumber] = useState(0);\n  const [tickData, setTickData] = useState([]);\n  const poolId = useMemo(() => {\n    if (precalculatedPoolId) {\n      return precalculatedPoolId;\n    }\n    const v3PoolAddress = currencyA && currencyB && feeAmount && version === ProtocolVersion.V3 ? V3Pool.getAddress(\n      currencyA?.wrapped,\n      currencyB?.wrapped,\n      feeAmount,\n      void 0,\n      chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : void 0\n    ) : void 0;\n    const v4PoolId = version === ProtocolVersion.V4 && currencyA && currencyB && feeAmount && tickSpacing && hooks ? V4Pool.getPoolId(currencyA, currencyB, feeAmount, tickSpacing, hooks) : void 0;\n    return version === ProtocolVersion.V3 ? v3PoolAddress : v4PoolId;\n  }, [chainId, currencyA, currencyB, feeAmount, hooks, precalculatedPoolId, tickSpacing, version]);\n  const { data, error, loading: isLoading } = usePaginatedTickQuery(poolId, version, skipNumber, chainId);\n  const ticks = data?.v3Pool?.ticks ?? data?.v4Pool?.ticks;\n  useEffect(() => {\n    if (ticks?.length) {\n      setTickData((tickData2) => [...tickData2, ...ticks]);\n      if (ticks?.length === MAX_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber2) => skipNumber2 + MAX_TICK_FETCH_VALUE);\n      }\n    }\n  }, [ticks]);\n  return {\n    isLoading: isLoading || ticks?.length === MAX_TICK_FETCH_VALUE,\n    error,\n    ticks: tickData\n  };\n}\nexport function usePoolActiveLiquidity({\n  currencyA,\n  currencyB,\n  feeAmount,\n  chainId,\n  version,\n  tickSpacing,\n  hooks,\n  poolId,\n  skip\n}) {\n  const multichainContext = useMultichainContext();\n  const defaultChainId = multichainContext.chainId ?? UniverseChainId.Mainnet;\n  const poolsQueryEnabled = Boolean(poolEnabledProtocolVersion(version) && currencyA && currencyB && !skip);\n  const { data: poolData, isLoading: poolIsLoading } = useGetPoolsByTokens(\n    {\n      fee: feeAmount,\n      chainId: chainId ?? defaultChainId,\n      protocolVersions: [version],\n      token0: getCurrencyAddressWithWrap(currencyA, version),\n      token1: getCurrencyAddressWithWrap(currencyB, version),\n      hooks: hooks ?? ZERO_ADDRESS\n    },\n    poolsQueryEnabled\n  );\n  const pool = poolData?.pools && poolData.pools.length > 0 ? poolData.pools[0] : void 0;\n  const liquidity = pool?.liquidity;\n  const sqrtPriceX96 = pool?.sqrtPriceX96;\n  const currentTick = pool?.tick;\n  const activeTick = useMemo(\n    () => getActiveTick(currentTick, feeAmount, tickSpacing),\n    [currentTick, feeAmount, tickSpacing]\n  );\n  const { isLoading, error, ticks } = useAllPoolTicks({\n    currencyA,\n    currencyB,\n    feeAmount,\n    precalculatedPoolId: poolId,\n    chainId: chainId ?? defaultChainId,\n    version: version ?? ProtocolVersion.V3,\n    tickSpacing,\n    hooks\n  });\n  return useMemo(() => {\n    if (!currencyA || !currencyB || activeTick === void 0 || !pool || !ticks || ticks.length === 0 || isLoading) {\n      return {\n        isLoading: isLoading || poolIsLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const token0 = version === ProtocolVersion.V3 ? currencyA?.wrapped : currencyA;\n    const token1 = version === ProtocolVersion.V3 ? currencyB?.wrapped : currencyB;\n    const pivot = ticks.findIndex((tickData) => tickData?.tick && tickData.tick > activeTick) - 1;\n    if (pivot < 0) {\n      logger.debug(\"usePoolTickData\", \"usePoolActiveLiquidity\", \"TickData pivot not found\", {\n        token0: token0.isToken ? token0.address : ZERO_ADDRESS,\n        token1: token1.isToken ? token1.address : ZERO_ADDRESS,\n        chainId: token0.chainId\n      });\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    let sdkPrice;\n    try {\n      sdkPrice = version === ProtocolVersion.V3 ? tickToPriceV3(token0, token1, activeTick) : tickToPriceV4(token0, token1, activeTick);\n    } catch (e) {\n      logger.debug(\"usePoolTickData\", \"usePoolActiveLiquidity\", \"Error getting price\", {\n        error: e,\n        token0: token0.isToken ? token0.address : ZERO_ADDRESS,\n        token1: token1.isToken ? token1.address : ZERO_ADDRESS,\n        chainId: token0.chainId\n      });\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const activeTickProcessed = {\n      liquidityActive: JSBI.BigInt(pool?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot]?.tick) === activeTick ? JSBI.BigInt(ticks[pivot]?.liquidityNet ?? 0) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true, version);\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false, version);\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks);\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity: JSBI.BigInt(liquidity ?? 0),\n      sqrtPriceX96: JSBI.BigInt(sqrtPriceX96 ?? 0),\n      data: ticksProcessed\n    };\n  }, [\n    currencyA,\n    currencyB,\n    activeTick,\n    pool,\n    ticks,\n    isLoading,\n    version,\n    error,\n    currentTick,\n    liquidity,\n    sqrtPriceX96,\n    poolIsLoading\n  ]);\n}\n","\"use strict\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nexport function isV4UnsupportedChain(chainId) {\n  if (!chainId) {\n    return false;\n  }\n  return !getChainInfo(chainId).supportsV4;\n}\n"],"names":["HorizontalDensityChart","AnimatedHorizontalDensityChart","createIcon","name","getIcon","props","Svg","viewBox","fill","Rect","width","height","rx","transform","fillOpacity","defaultFill","LoadingPriceCurve","AnimatedLoadingPriceCurve","G","clipPath","mask","id","maskUnits","x","y","Path","d","stroke","strokeWidth","filter","_Circle","cx","cy","r","Defs","filterUnits","colorInterpolationFilters","feFlood","result","floodOpacity","feBlend","mode","in","in2","feGaussianBlur","stdDeviation","ClipPath","Axis","axisGenerator","yScale","g","ref","axis","select","call","remove","selectAll","attr","yCoordinate","AxisRight","offset","min","current","max","formatNumber","useFormatter","tickValues","useMemo","minCoordinate","maxCoordinate","currentCoordinate","Math","abs","Boolean","className","axisRight","tickFormat","input","type","NumberType","TokenQuantityStats","brushHandlePath","join","brushHandleAccentPath","OffScreenHandle","color","size","center","polygon","points","strokeLinejoin","compare","a","b","aNorm","map","toFixed","bNorm","every","v","i","toYScale","extent","toPriceExtent","selection","invert","normalizeExtent","Brush","interactive","brushExtent","setBrushExtent","hideHandles","colors","useSporeColors","brushRef","useRef","brushBehavior","t","useTranslation","localBrushExtent","setLocalBrushExtent","useState","previousBrushExtent","usePrevious","brushInProgress","setBrushInProgress","useEffect","normalizedExtent","scaledExtent","brushY","handleSize","event","target","classList","contains","on","priceExtent","transition","move","normalizedBrushExtent","flipNorthHandle","flipSouthHandle","showNorthArrow","showSouthArrow","southHandleInView","northHandleInView","defs","linearGradient","x1","y1","x2","y2","stop","stopColor","accent1","val","rect","cursor","pointerEvents","path","neutral2","opacity","strokeLinecap","text","fontSize","alignmentBaseline","HorizontalArea","series","xScale","xValue","yValue","brushDomain","selectedFill","containerHeight","containerWidth","value","price","fillWithDefault","ry","HorizontalLine","lineStyle","lineStart","isNaN","strokeDasharray","line","_cn3","_cn2","_cn","TickTooltip","hoverY","hoveredTick","currentPrice","currentTick","contentWidth","axisLabelPaneWidth","quoteCurrency","baseCurrency","formatCurrencyAmount","formatPercent","amountBaseLockedUSD","useUSDCValue","tryParseCurrencyAmount","amount1Locked","amountQuoteLockedUSD","amount0Locked","atTop","atBottom","Flex","position","p","gap","top","minWidth","right","borderRadius","borderColor","borderWidth","backgroundColor","price0","tick","div","DoubleCurrencyLogo","currencies","iconSizes","icon16","Text","variant","symbol","amount","FiatTokenStats","Percent","quotient","add","xAccessor","activeLiquidity","yAccessor","priceDataCache","Map","findClosestElementBinarySearch","data","left","length","has","toString","get","mid","floor","set","closest","Infinity","nextClosest","closestElement","scaleToInteger","precision","scaleFactor","pow","round","ActiveLiquidityChart","dimensions","onBrushDomainChange","disableBrush","disableRightAxis","disableBrushInteraction","showDiffIndicators","isMobile","barColor","svgRef","setHoverY","activeEntries","scaleLinear","domain","range","getMax","min2","max2","svg","onMouseMove","getBoundingClientRect","clientY","clientX","onMouseLeave","style","opacify","neutral1","Number","LiquidityBarSeriesRenderer","_data","_options","constructor","this","activeTick","draw","priceConverter","useBitmapCoordinateSpace","scope","_drawImpl","update","options","renderingScope","priceToCoordinate","bars","visibleRange","ctx","context","bar","originalData","liquidity","calculateColumnPositionsInPlace","barSpacing","horizontalPixelRatio","from","to","zeroY","fillStyle","tokenAColor","stack","column","isCurrentTick","isHoveredTick","margin","widthWithMargin","totalBox","positionsBox","verticalPixelRatio","highlightOffset","canvas","highlightLength","highlightColor","roundRect","globalAlpha","tokenBColor","activeTickProgress","globalCompositeOperation","activeRangeAdjustedHeight","activeRangeAdjustedPosition","beginPath","fillRect","LiquidityBarSeries","_renderer","_tokenAColor","_tokenBColor","_highlightColor","priceValueBuilder","plotRow","isWhitespace","renderer","defaultOptions","customSeriesDefaultOptions","LiquidityBarChartModel","ChartModel","chartDiv","params","super","api","addCustomSeries","setData","updateOptions","fitContent","localization","locale","rightPriceScale","visible","borderVisible","scaleMargins","bottom","autoScale","timeScale","fixLeftEdge","fixRightEdge","crosshair","horzLine","labelVisible","vertLine","grid","vertLines","horzLines","applyOptions","priceFormat","priceLineVisible","lastValueVisible","onSeriesHover","hoverData","updatedOptions","item","activeTickIndex","findIndex","midPoint","setVisibleLogicalRange","MAX_UINT128","BigNumber","sub","maxAmount","token","CurrencyAmount","fromRawAmount","calculateActiveRangeTokensLocked","token0","token1","feeTier","poolData","sqrtPriceX96","liqGross","JSBI","liquidityNet","mockTicks","index","liquidityGross","TICK_SPACINGS","pool1","PoolV3","liquidityActive","bottomOfRangePrice","TickMathV3","getSqrtRatioAtTick","token1Amount","getOutputAmount","parseFloat","sdkPrice","quote","toExact","topOfRangePrice","token0Amount","calculateTokensLockedV3","tickSpacing","pool","nextSqrtX96","maxAmountToken0","calculateTokensLockedV4","hooks","PoolV4","useLiquidityBarData","currencyA","currencyB","isReversed","chainId","version","poolId","formatPrice","tokenAWrapped","wrapped","tokenBWrapped","activePoolData","usePoolActiveLiquidity","feeAmount","tickData","setTickData","formatData","barData","ticksProcessed","activeRangePercentage","activeRangeIndex","fakeTime","isActive","price1","ProtocolVersion","V3","tickToPrice","tickToPriceV4","ZERO_ADDRESS","push","SwapDetailsAmount","time","entry","activeRangeData","activeTickTvl","reverse","loading","isLoading","ClosestTimeIndexFinder","numbers","cache","sortedNumbers","findClosestIndex","direction","cacheKey","closestIndex","_performSearch","low","high","num","UpperLowerInRange","_arr","_chunkSize","_cache","arr","chunkSize","getMinMax","startIndex","endIndex","lower","upper","startChunkIndex","endChunkIndex","chunkIndex","chunkStart","chunkEnd","chunkCacheKey","keys","_check","chunkResult","state","cloneReadonly","obj","JSON","parse","stringify","PluginBase","_chart","_series","requestUpdate","_requestUpdate","attached","chart","subscribeDataChanged","_fireDataUpdated","detached","unsubscribeDataChanged","Error","dataUpdated","_viewData","drawBackground","scale","strokeStyle","lineColor","lineWidth","region","Path2D","lines","moveTo","point","lineTo","end","closePath","fillColor","_source","source","_bandsData","timeToCoordinate","BandsIndicatorPaneRenderer","BandsIndicator","_paneViews","_seriesData","_timeIndices","_upperLower","BandsIndicatorPaneView","updateAllViews","forEach","pw","paneViews","calculateBands","bandData","upperValue","lowerValue","getCrosshairProps","xCoordinate","priceToNumber","defaultValue","sigFigs","decimals","numPrice","toSignificant","CHART_HEIGHT","CHART_WIDTH","X_AXIS_HEIGHT","Y_AXIS_WIDTH","LIQUIDITY_BARS_WIDTH","pulseKeyframe","LPPriceChartModel","rangeBandSeries","extendedData","positionRangeMin","positionRangeMax","bandIndicator","addAreaSeries","generateExtendedData","disableExtendedTimeScale","addLineSeries","priceScaleId","calculatePositionRange","overrideCrosshair","minimumWidth","alignLabels","leftPriceScale","showXAxis","tickMarkFormatter","formatTickMarks","handleScroll","handleScale","priceFormatter","priceValue","currentLocale","window","navigator","languages","CrosshairMode","Hidden","autoscaleInfoProvider","original","res","minVisiblePrice","maxVisiblePrice","priceRange","minValue","maxValue","priceLineColor","getPriceLineColor","priceLineStyle","LineStyle","SparseDotted","currentPriceLineColor","lineType","LineType","WithSteps","Curved","topColor","bottomColor","priceScale","priceScaleMargins","DEFAULT_TOP_PRICE_SCALE_MARGIN","DEFAULT_BOTTOM_PRICE_SCALE_MARGIN","requestAnimationFrame","setBoundaryPrices","maxPrice","coordinateToPrice","minPrice","positionStatus","PositionStatus","OUT_OF_RANGE","statusCritical","IN_RANGE","statusSuccess","CLOSED","positionPriceLower","positionPriceUpper","MAX_SAFE_INTEGER","theme","surface3","attachPrimitive","lastDataPoint","setCrosshairCoordinates","lastTime","timeIncrement","newData","lastData","getLiquidityRangeChartProps","positionInfo","priceRangeInfo","pricesInverted","protocolVersion","sortedCurrencies","getSortedCurrenciesTupleWithWrap","poolAddressOrId","getPoolIdOrAddressFromCreatePositionInfo","priceOrdering","V2","base","priceLower","prices","priceUpper","getInvertedTuple","outOfRange","LiquidityPositionRangeChartLoader","rest","Shine","alignItems","justifyContent","LiquidityPositionRangeChart","duration","showYAxis","hook","showLiquidityBars","crosshairEnabled","showChartBorder","crosshairCoordinates","priceData","isV2","isV3","isV4","V4","chainInfo","getChainInfo","variables","addressOrId","chain","backendChain","HistoryDuration","Month","usePoolPriceChartData","getCurrencyAddressWithWrap","boundaryPrices","chartParams","entries","stale","dataQuality","DataQuality","STALE","PriceChartType","LINE","formattedData","liquidityDataLoading","useDensityChartData","invertPrices","equals","skip","sortedFormattedData","uniqueTicksMap","Array","values","sort","dataUnavailable","frameRef","chartWidth","useResizeObserver","shouldRenderChart","shouldRenderCrosshair","$md","overflow","mt","ml","zIndex","zIndexes","default","borderRightWidth","borderBottomWidth","Chart","Model","animation","isMobileWeb","WrappedLiquidityPositionRangeChart","ErrorBoundary","fallback","error","fetcher","chartEntry","useQuery","queryKey","ReactQueryCacheKey","DensityChartData","queryFn","sortedCurrencyAAddress","usePoolPriceHistoryQuery","priceHistory","v2Pair","v3Pool","v4Pool","isSameAddress","token0Price","token1Price","timestamp","open","close","VALID","INVALID","chartType","ChartType","PRICE","PRICE_FIXED_DIGITS","computeSurroundingTicks","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","isNative","processedTicks","tickToPriceV3","currentTickProcessed","getActiveTick","tickCurrent","MAX_TICK_FETCH_VALUE","useAllPoolTicks","precalculatedPoolId","ticks","skipNumber","setSkipNumber","v3PoolAddress","V3Pool","getAddress","V3_CORE_FACTORY_ADDRESSES","v4PoolId","V4Pool","getPoolId","defaultChainId","useEnabledChains","supportedChainId","useSupportedChainId","v3Result","useAllV3TicksQuery","address","toLowerCase","toGraphQLChain","first","pollInterval","ms","v4Result","useAllV4TicksQuery","usePaginatedTickQuery","tickData2","skipNumber2","useMultichainContext","UniverseChainId","Mainnet","poolsQueryEnabled","poolEnabledProtocolVersion","poolIsLoading","useGetPoolsByTokens","fee","protocolVersions","pools","logger","debug","isToken","e","subsequentTicks","concat","isV4UnsupportedChain","supportsV4"],"sourceRoot":""}