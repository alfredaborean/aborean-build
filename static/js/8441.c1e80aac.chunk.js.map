{"version":3,"file":"static/js/8441.c1e80aac.chunk.js","mappings":"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","sources":["webpack://@uniswap/interface/./src/components/Popups/PopupItem.tsx?9d78","webpack://@uniswap/interface/./src/components/Popups/PopupContent.tsx?3b9e","webpack://@uniswap/interface/./src/components/Popups/ToastRegularSimple.tsx?f550","webpack://@uniswap/interface/./src/components/Popups/ClaimPopup.tsx?ba17","webpack://@uniswap/interface/./src/components/Popups/Toast.tsx?b370","webpack://@uniswap/interface/./src/components/Popups/MismatchToastItem.tsx?5648","webpack://@uniswap/interface/./src/components/ChainConnectivityWarning.tsx?b9de","components/earn/styled.tsx","hooks/useMachineTime.ts","components/ChainConnectivityWarning.tsx","../node_modules/react-feather/dist/icons/heart.js","components/Popups/ClaimPopup.tsx","components/Popups/constants.ts","components/Popups/Toast.tsx","components/Popups/MismatchToastItem.tsx","components/Popups/ToastRegularSimple.tsx","components/Popups/PopupContent.tsx","components/Popups/PopupItem.tsx","components/Popups/PopupRenderer.tsx","components/TopLevelModals/modalRegistry.tsx","components/TopLevelModals/index.tsx","hooks/useAccountRiskCheck.ts","pages/App/Chrome.tsx","theme/components/icons/CautionTriangle.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport uImage from \"assets/images/big_unicorn.png\";\nimport noise from \"assets/images/noise.png\";\nimport xlUnicorn from \"assets/images/xl_uni.png\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport styled from \"lib/styled-components\";\nexport const CardBGImage = styled.span`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardBGImageSmaller = styled.span`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`;\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`;\nexport const CardSection = styled(AutoColumn)`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && \"0.4\"};\n`;\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`;\n","\"use strict\";\nimport useInterval from \"lib/hooks/useInterval\";\nimport { useCallback, useState } from \"react\";\nconst useMachineTimeMs = (updateInterval) => {\n  const [now, setNow] = useState(Date.now());\n  useInterval(\n    useCallback(() => {\n      setNow(Date.now());\n    }, []),\n    updateInterval\n  );\n  return now;\n};\nexport default useMachineTimeMs;\n","\"use strict\";\nimport useCurrentBlockTimestamp from \"hooks/useCurrentBlockTimestamp\";\nimport { PageType, useIsPage } from \"hooks/useIsPage\";\nimport useMachineTimeMs from \"hooks/useMachineTime\";\nimport styled from \"lib/styled-components\";\nimport ms from \"ms\";\nimport { useMemo, useState } from \"react\";\nimport { X } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { ExternalLink } from \"theme/components/Links\";\nimport { CautionTriangle } from \"theme/components/icons/CautionTriangle\";\nimport { ClickableTamaguiStyle } from \"theme/components/styles\";\nimport { Flex, styled as tamaguiStyled } from \"ui/src\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useUniswapContext } from \"uniswap/src/contexts/UniswapContext\";\nimport { DEFAULT_MS_BEFORE_WARNING, getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useEnabledChains } from \"uniswap/src/features/chains/hooks/useEnabledChains\";\nimport { UniverseChainId } from \"uniswap/src/features/chains/types\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { AVERAGE_L1_BLOCK_TIME_MS } from \"uniswap/src/features/transactions/hooks/usePollingIntervalByChain\";\nconst BodyRow = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 485;\n  font-size: 14px;\n  line-height: 20px;\n`;\nconst Link = styled(ExternalLink)`\n  color: ${({ theme }) => theme.black};\n  text-decoration: underline;\n`;\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: flex-start;\n`;\nconst TitleText = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 24px;\n  margin: 0px 12px;\n`;\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.surface1};\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  z-index: 2;\n  display: block;\n  max-width: 348px;\n  padding: 16px 20px;\n  position: fixed;\n  bottom: 16px;\n  right: 16px;\n`;\nconst CloseButton = tamaguiStyled(X, {\n  ...ClickableTamaguiStyle,\n  size: iconSizes.icon20\n});\nexport function ChainConnectivityWarning() {\n  const { defaultChainId } = useEnabledChains();\n  const [hide, setHide] = useState(false);\n  const isMonadDownFlag = useFeatureFlag(FeatureFlags.MonadTestnetDown);\n  const { swapInputChainId: chainId } = useUniswapContext();\n  const info = getChainInfo(chainId ?? defaultChainId);\n  const label = info.label;\n  const isLandingPage = useIsPage(PageType.LANDING);\n  const waitMsBeforeWarning = useMemo(\n    () => (chainId ? getChainInfo(chainId)?.blockWaitMsBeforeWarning : void 0) ?? DEFAULT_MS_BEFORE_WARNING,\n    [chainId]\n  );\n  const machineTime = useMachineTimeMs(AVERAGE_L1_BLOCK_TIME_MS);\n  const blockTime = useCurrentBlockTimestamp({ refetchInterval: ms(\"5min\") });\n  const warning = Boolean(!!blockTime && machineTime - Number(blockTime) * 1e3 > waitMsBeforeWarning);\n  const isMonadDown = chainId === UniverseChainId.MonadTestnet && isMonadDownFlag;\n  if (hide || !isMonadDown && (!warning || isLandingPage)) {\n    return null;\n  }\n  return <Wrapper>\r\n      <Flex row justifyContent=\"space-between\" alignItems=\"center\" mb=\"$spacing8\">\r\n        <TitleRow>\r\n          <CautionTriangle />\r\n          <TitleText>\r\n            <Trans i18nKey=\"network.warning\" />\r\n          </TitleText>\r\n        </TitleRow>\r\n        <CloseButton onClick={() => setHide(true)} />\r\n      </Flex>\r\n      <BodyRow>\r\n        {chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"network.lostConnection\" /> : <Trans i18nKey=\"network.mightBeDown\" values={{ network: label }} />}{\" \"}\r\n        {info.statusPage !== void 0 && <span>\r\n            <Trans i18nKey=\"common.checkNetwork\" components={{ link: <Link href={info.statusPage || \"\"} /> }} />\r\n          </span>}\r\n      </BodyRow>\r\n    </Wrapper>;\n}\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Heart=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"path\",{d:\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"}))}));Heart.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Heart.displayName=\"Heart\";export default Heart;","\"use strict\";\nimport tokenLogo from \"assets/images/token-logo.png\";\nimport { CardBGImage, CardNoise } from \"components/earn/styled\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { useEffect } from \"react\";\nimport { Heart } from \"react-feather\";\nimport { Trans } from \"react-i18next\";\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from \"state/claim/hooks\";\nimport { Button, Flex, Text, TouchableArea } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nconst rotateKeyframe = `\n  @keyframes rotate {\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nexport default function ClaimPopup() {\n  const account = useAccount();\n  const { isOpen: claimPopupIsOpen, toggleModal: toggleClaimPopup } = useModalState(ModalName.ClaimPopup);\n  const { isOpen: showClaimModal, toggleModal: toggleClaimModal } = useModalState(ModalName.AddressClaim);\n  const userHasAvailableclaim = useUserHasAvailableClaim(account.address);\n  const unclaimedAmount = useUserUnclaimedAmount(account.address);\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleClaimPopup();\n    }\n  }, [userHasAvailableclaim]);\n  return <Flex\n    position=\"absolute\"\n    top=\"$spacing12\"\n    width=\"100vw\"\n    alignItems=\"flex-end\"\n    pr=\"$spacing12\"\n    $sm={{\n      alignItems: \"center\",\n      pr: \"$none\"\n    }}\n  >\r\n      <style>{rotateKeyframe}</style>\r\n      <Flex $platform-web={{ position: \"fixed\" }} maxWidth={348} width=\"100%\" zIndex=\"$fixed\" animation=\"fast\">\r\n        {claimPopupIsOpen && !showClaimModal && <Flex\n    gap=\"$spacing8\"\n    borderRadius=\"$rounded20\"\n    padding=\"$spacing24\"\n    overflow=\"hidden\"\n    position=\"relative\"\n    maxWidth={360}\n    style={{\n      background: \"linear-gradient(180deg, #FF007A 0%, #021D43 100%)\",\n      boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.1)\"\n    }}\n  >\r\n            <CardBGImage />\r\n            <CardNoise />\r\n            <TouchableArea onPress={toggleClaimPopup} ml=\"auto\">\r\n              <X color=\"$white\" size=\"$icon.16\" />\r\n            </TouchableArea>\r\n            <Flex centered py=\"$spacing32\" zIndex={10}>\r\n              <img\n    width=\"48px\"\n    src={tokenLogo}\n    style={{\n      animation: `rotate 5s cubic-bezier(0.83, 0, 0.17, 1) infinite`\n    }}\n  />{\" \"}\r\n              <Text variant=\"heading2\" color=\"white\" mt=\"$spacing16\">\r\n                {unclaimedAmount?.toFixed(0, { groupSeparator: \",\" })} ABX\r\n              </Text>\r\n              <Text variant=\"subheading2\" color=\"white\" mt=\"$spacing20\">\r\n                <span role=\"img\" aria-label=\"party\">\r\n                  🎉\r\n                </span>{\" \"}\r\n                <Trans i18nKey=\"claim.uni.arrived\" />{\" \"}\r\n                <span role=\"img\" aria-label=\"party\">\r\n                  🎉\r\n                </span>\r\n              </Text>\r\n              <Text variant=\"body3\" color=\"white\" mt=\"$spacing8\" textAlign=\"center\">\r\n                <Trans\n    i18nKey=\"claim.thanks\"\n    components={{\n      heart: <Heart size={12} />\n    }}\n  />\r\n              </Text>\r\n            </Flex>\r\n            <Flex centered zIndex={10}>\r\n              <Button variant=\"branded\" fill={false} onPress={toggleClaimModal}>\r\n                <Trans i18nKey=\"common.claimUnis\" />\r\n              </Button>\r\n            </Flex>\r\n          </Flex>}\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nexport const POPUP_MAX_WIDTH = 348;\n","\"use strict\";\nimport { POPUP_MAX_WIDTH } from \"components/Popups/constants\";\nimport { Flex, Text, TouchableArea, useShadowPropsMedium } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nexport const Toast = Object.assign(ToastRoot, {\n  Icon: ToastIcon,\n  Content: ToastContent,\n  Title: ToastTitle,\n  Description: ToastDescription,\n  Action: ToastAction,\n  Close: ToastClose\n});\nfunction ToastRoot({ children, onPress, className }) {\n  const shadowProps = useShadowPropsMedium();\n  return <Flex\n    row\n    alignItems=\"flex-start\"\n    animation=\"300ms\"\n    backgroundColor=\"$surface1\"\n    borderColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$spacing1\"\n    justifyContent=\"space-between\"\n    left={0}\n    mx={0}\n    {...shadowProps}\n    position=\"relative\"\n    width=\"100%\"\n    maxWidth={POPUP_MAX_WIDTH}\n    opacity={1}\n    $sm={{ width: \"max-content\", mx: \"auto\" }}\n    className={className}\n  >\r\n      <TouchableArea onPress={onPress} flexShrink={1} width=\"100%\">\r\n        <Flex row alignItems=\"center\" gap={20} flexShrink={1} p=\"$spacing16\">\r\n          {children}\r\n        </Flex>\r\n      </TouchableArea>\r\n    </Flex>;\n}\nfunction ToastIcon({ children }) {\n  return <>{children}</>;\n}\nfunction ToastContent({ children }) {\n  return <Flex flexDirection=\"column\" gap={4} flexShrink={1}>\r\n      {children}\r\n    </Flex>;\n}\nfunction ToastTitle({ children }) {\n  return <Text variant=\"subheading2\">{children}</Text>;\n}\nfunction ToastDescription({ children }) {\n  return <Text variant=\"body3\" color=\"$neutral2\" flexShrink={1}>\r\n      {children}\r\n    </Text>;\n}\nfunction ToastAction({ children, onPress }) {\n  return <Text variant=\"body3\" color=\"$accent1\" onPress={onPress}>\r\n      {children}\r\n    </Text>;\n}\nfunction ToastClose({ onPress }) {\n  return <TouchableArea\n    onPress={(e) => {\n      e.stopPropagation();\n      onPress();\n    }}\n  >\r\n      <X color=\"$neutral2\" size={16} ml=\"$spacing8\" />\r\n    </TouchableArea>;\n}\n","\"use strict\";\nimport { WalletAlertBadge } from \"components/Badge/WalletAlertBadge\";\nimport { Toast } from \"components/Popups/Toast\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useModalState } from \"hooks/useModalState\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex } from \"ui/src\";\nimport { spacing } from \"ui/src/theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { InterfaceEventNameLocal, ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send.web\";\nimport { useEvent } from \"utilities/src/react/hooks\";\nexport const MismatchToastItem = React.memo((props) => {\n  const { t } = useTranslation();\n  const { openModal } = useModalState(ModalName.DelegationMismatch);\n  const { chainId } = useAccount();\n  const onDismiss = useEvent(() => {\n    sendAnalyticsEvent(InterfaceEventNameLocal.LimitedWalletSupportToastDismissed, { chainId: chainId?.valueOf() });\n    props.onDismiss();\n  });\n  const onPress = useEvent(() => {\n    sendAnalyticsEvent(InterfaceEventNameLocal.LimitedWalletSupportToastLearnMoreButtonClicked, {\n      chainId: chainId?.valueOf()\n    });\n    openModal();\n    props.onDismiss();\n  });\n  return <Trace logImpression eventOnTrigger={InterfaceEventNameLocal.LimitedWalletSupportToastShown}>\r\n      <Toast onPress={onPress}>\r\n        <Toast.Icon>\r\n          <WalletIcon />\r\n        </Toast.Icon>\r\n        <Toast.Content>\r\n          <Flex row alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Toast.Title>{t(\"wallet.mismatch.popup.title\")}</Toast.Title>\r\n            <Toast.Close onPress={onDismiss} />\r\n          </Flex>\r\n          <Toast.Description>{t(\"wallet.mismatch.popup.description\")}</Toast.Description>\r\n          <Toast.Action onPress={onPress}>{t(\"common.button.viewDetails\")}</Toast.Action>\r\n        </Toast.Content>\r\n      </Toast>\r\n    </Trace>;\n});\nMismatchToastItem.displayName = \"MismatchToastItem\";\nconst WalletIcon = React.memo(() => {\n  const account = useAccount();\n  const iconSrc = account.connector?.icon;\n  return <WalletAlertBadge walletIconSize={spacing.spacing32} walletIcon={iconSrc} />;\n});\nWalletIcon.displayName = \"WalletIcon\";\n","\"use strict\";\nimport { POPUP_MAX_WIDTH } from \"components/Popups/constants\";\nimport { Flex, Text, TouchableArea, useShadowPropsMedium } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nexport function ToastRegularSimple({\n  icon,\n  text,\n  onDismiss\n}) {\n  const shadowProps = useShadowPropsMedium();\n  const isToastOneLine = typeof text === \"string\";\n  return <Flex\n    row\n    alignItems=\"center\"\n    animation=\"300ms\"\n    backgroundColor=\"$surface1\"\n    borderColor=\"$surface3\"\n    borderRadius=\"$rounded16\"\n    borderWidth=\"$spacing1\"\n    justifyContent=\"space-between\"\n    left={0}\n    mx=\"auto\"\n    {...shadowProps}\n    p=\"$spacing16\"\n    position=\"relative\"\n    width={POPUP_MAX_WIDTH}\n    opacity={1}\n    $sm={{\n      maxWidth: \"100%\",\n      mx: \"auto\"\n    }}\n  >\r\n      <Flex row alignItems={isToastOneLine ? \"center\" : \"flex-start\"} gap={12} flex={1}>\r\n        <Flex>{icon}</Flex>\r\n        {text ? isToastOneLine ? <Text variant=\"body2\">{text}</Text> : text : null}\r\n      </Flex>\r\n      {onDismiss ? <TouchableArea onPress={onDismiss} ml=\"$spacing8\">\r\n          <X color=\"$neutral2\" size={16} />\r\n        </TouchableArea> : null}\r\n    </Flex>;\n}\n","\"use strict\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useOpenOffchainActivityModal } from \"components/AccountDrawer/MiniPortfolio/Activity/OffchainActivityModal\";\nimport {\n  getSignatureToActivityQueryOptions,\n  getTransactionToActivityQueryOptions\n} from \"components/AccountDrawer/MiniPortfolio/Activity/parseLocal\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport AlertTriangleFilled from \"components/Icons/AlertTriangleFilled\";\nimport { LoaderV3 } from \"components/Icons/LoadingSpinner\";\nimport { ToastRegularSimple } from \"components/Popups/ToastRegularSimple\";\nimport { POPUP_MAX_WIDTH } from \"components/Popups/constants\";\nimport { useTranslation } from \"react-i18next\";\nimport { useOrder } from \"state/signatures/hooks\";\nimport { useTransaction } from \"state/transactions/hooks\";\nimport { isPendingTx } from \"state/transactions/utils\";\nimport { Flex, Text, TouchableArea, useSporeColors } from \"ui/src\";\nimport { X } from \"ui/src/components/icons/X\";\nimport { BridgeIcon } from \"uniswap/src/components/CurrencyLogo/SplitLogo\";\nimport { TransactionStatus } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useIsSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { useFormatter } from \"utils/formatNumbers\";\nexport function FailedNetworkSwitchPopup({ chainId, onClose }) {\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const chainInfo = isSupportedChain ? getChainInfo(chainId) : void 0;\n  const { t } = useTranslation();\n  if (!chainInfo) {\n    return null;\n  }\n  return <ToastRegularSimple\n    onDismiss={onClose}\n    icon={<AlertTriangleFilled color=\"$yellow\" size=\"32px\" />}\n    text={<Flex gap=\"$gap4\" flexWrap=\"wrap\" flex={1}>\r\n          <Text variant=\"body2\" color=\"$neutral1\">\r\n            {t(\"common.failedSwitchNetwork\")}\r\n          </Text>\r\n          <Text variant=\"body3\" color=\"$neutral2\" flexWrap=\"wrap\">\r\n            {t(\"settings.switchNetwork.warning\", { label: chainInfo.label })}\r\n          </Text>\r\n        </Flex>}\n  />;\n}\nfunction ActivityPopupContent({ activity, onClick, onClose }) {\n  const success = activity.status === TransactionStatus.Confirmed && !activity.cancelled;\n  const pending = activity.status === TransactionStatus.Pending;\n  const showPortfolioLogo = success || pending || !!activity.offchainOrderDetails;\n  const colors = useSporeColors();\n  const isBridgeActivity = activity.outputChainId && activity.chainId && activity.chainId !== activity.outputChainId;\n  return <Flex\n    row\n    width={POPUP_MAX_WIDTH}\n    backgroundColor=\"$surface1\"\n    position=\"relative\"\n    borderWidth={1}\n    borderRadius=\"$rounded16\"\n    borderColor=\"$surface3\"\n    py={2}\n    px={0}\n    animation=\"300ms\"\n    $sm={{\n      mx: \"auto\",\n      width: \"100%\"\n    }}\n  >\r\n      <TouchableArea onPress={onClick}>\r\n        <Flex row gap=\"$gap12\" height={68} py=\"$spacing12\" px=\"$spacing16\">\r\n          {showPortfolioLogo ? <Flex>\r\n              <PortfolioLogo\n    chainId={activity.chainId}\n    currencies={activity.currencies}\n    accountAddress={activity.otherAccount}\n    customIcon={isBridgeActivity ? BridgeIcon : void 0}\n  />\r\n            </Flex> : <Flex justifyContent=\"center\">\r\n              <AlertTriangleFilled color=\"$neutral2\" size=\"32px\" />\r\n            </Flex>}\r\n          <Flex justifyContent=\"center\" gap=\"$gap4\">\r\n            <Text variant=\"body2\" color=\"$neutral1\">\r\n              {activity.title}\r\n            </Text>\r\n            <Text variant=\"body3\" color=\"$neutral2\">\r\n              {activity.descriptor}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </TouchableArea>\r\n      {pending ? <Flex position=\"absolute\" top=\"$spacing24\" right=\"$spacing16\">\r\n          <LoaderV3 color={colors.accent1.variable} size=\"20px\" />\r\n        </Flex> : <Flex position=\"absolute\" right=\"$spacing16\" top=\"$spacing16\">\r\n          <TouchableArea onPress={onClose}>\r\n            <X color=\"$neutral2\" size={16} />\r\n          </TouchableArea>\r\n        </Flex>}\r\n    </Flex>;\n}\nexport function TransactionPopupContent({\n  chainId,\n  hash,\n  onClose\n}) {\n  const transaction = useTransaction(hash);\n  const { formatNumber } = useFormatter();\n  const { data: activity } = useQuery(getTransactionToActivityQueryOptions(transaction, chainId, formatNumber));\n  if (!transaction || !activity) {\n    return null;\n  }\n  const onClick = () => window.open(getExplorerLink(activity.chainId, activity.hash, ExplorerDataType.TRANSACTION), \"_blank\");\n  const explorerUrlUnavailable = isPendingTx(transaction) && transaction.batchInfo;\n  return <ActivityPopupContent\n    activity={activity}\n    onClick={explorerUrlUnavailable ? void 0 : onClick}\n    onClose={onClose}\n  />;\n}\nexport function UniswapXOrderPopupContent({ orderHash, onClose }) {\n  const order = useOrder(orderHash);\n  const openOffchainActivityModal = useOpenOffchainActivityModal();\n  const { formatNumber } = useFormatter();\n  const { data: activity } = useQuery(getSignatureToActivityQueryOptions(order, formatNumber));\n  if (!activity || !order) {\n    return null;\n  }\n  const onClick = () => openOffchainActivityModal(order, { inputLogo: activity?.logos?.[0], outputLogo: activity?.logos?.[1] });\n  return <ActivityPopupContent activity={activity} onClose={onClose} onClick={onClick} />;\n}\n","\"use strict\";\nimport { MismatchToastItem } from \"components/Popups/MismatchToastItem\";\nimport {\n  FailedNetworkSwitchPopup,\n  TransactionPopupContent,\n  UniswapXOrderPopupContent\n} from \"components/Popups/PopupContent\";\nimport { ToastRegularSimple } from \"components/Popups/ToastRegularSimple\";\nimport { PopupType } from \"components/Popups/types\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTranslation } from \"react-i18next\";\nimport { Flex, Text } from \"ui/src\";\nimport { Shuffle } from \"ui/src/components/icons/Shuffle\";\nimport { NetworkLogo } from \"uniswap/src/components/CurrencyLogo/NetworkLogo\";\nimport { getChainInfo } from \"uniswap/src/features/chains/chainInfo\";\nimport { useSupportedChainId } from \"uniswap/src/features/chains/hooks/useSupportedChainId\";\nimport { SwapTab } from \"uniswap/src/types/screens/interface\";\nexport function PopupItem({ content, onClose }) {\n  const { t } = useTranslation();\n  const { chainId } = useAccount();\n  const supportedChainId = useSupportedChainId(chainId);\n  switch (content.type) {\n    case PopupType.Transaction: {\n      return supportedChainId ? <TransactionPopupContent hash={content.hash} chainId={supportedChainId} onClose={onClose} /> : null;\n    }\n    case PopupType.Order: {\n      return <UniswapXOrderPopupContent orderHash={content.orderHash} onClose={onClose} />;\n    }\n    case PopupType.FailedSwitchNetwork: {\n      return <FailedNetworkSwitchPopup chainId={content.failedSwitchNetwork} onClose={onClose} />;\n    }\n    case PopupType.SwitchNetwork: {\n      return <ToastRegularSimple\n        onDismiss={onClose}\n        icon={<NetworkLogo chainId={content.chainId} />}\n        text={getSwitchNetworkTitle(t, content.action, content.chainId)}\n      />;\n    }\n    case PopupType.Bridge: {\n      return <ToastRegularSimple\n        onDismiss={onClose}\n        icon={<BridgeToast inputChainId={content.inputChainId} outputChainId={content.outputChainId} />}\n      />;\n    }\n    case PopupType.Mismatch: {\n      return <MismatchToastItem onDismiss={onClose} />;\n    }\n  }\n}\nfunction getSwitchNetworkTitle(t, action, chainId) {\n  const { label } = getChainInfo(chainId);\n  switch (action) {\n    case SwapTab.Swap:\n      return t(\"notification.swap.network\", { network: label });\n    case SwapTab.Send:\n      return t(\"notification.send.network\", { network: label });\n    default:\n      return \"\";\n  }\n}\nfunction BridgeToast({\n  inputChainId,\n  outputChainId\n}) {\n  const originChain = getChainInfo(inputChainId);\n  const targetChain = getChainInfo(outputChainId);\n  return <Flex row gap=\"$gap8\">\r\n      <Flex row gap=\"$gap4\">\r\n        <NetworkLogo chainId={inputChainId} />\r\n        <Text variant=\"body2\" lineHeight={20}>\r\n          {originChain.label}\r\n        </Text>\r\n      </Flex>\r\n      <Shuffle color=\"$neutral2\" size=\"$icon.20\" />\r\n      <Flex row gap=\"$gap4\">\r\n        <NetworkLogo chainId={outputChainId} />\r\n        <Text variant=\"body2\" lineHeight={20}>\r\n          {targetChain.label}\r\n        </Text>\r\n      </Flex>\r\n    </Flex>;\n}\n","\"use strict\";\nimport { PopupItem } from \"components/Popups/PopupItem\";\nimport { popupRegistry } from \"components/Popups/registry\";\nimport { DEFAULT_TXN_DISMISS_MS } from \"constants/misc\";\nimport { useEffect } from \"react\";\nimport { Toaster, toast } from \"sonner\";\nexport function PopupRenderer() {\n  useEffect(() => {\n    const unsubscribe = popupRegistry.addListener((content, key, removeAfterMs) => {\n      const toastId = toast(\n        <PopupItem key={key} content={content} onClose={() => popupRegistry.removePopup(key)} popKey={key} />,\n        {\n          duration: removeAfterMs ?? DEFAULT_TXN_DISMISS_MS,\n          onDismiss: () => {\n            popupRegistry.removePopup(key);\n          },\n          onAutoClose: () => {\n            popupRegistry.removePopup(key);\n          }\n        }\n      );\n      return toastId;\n    });\n    return unsubscribe;\n  }, []);\n  return <Toaster\n    position=\"top-right\"\n    pauseWhenPageIsHidden\n    expand\n    gap={16}\n    toastOptions={{\n      style: {\n        background: \"transparent\",\n        border: \"none\",\n        boxShadow: \"none\"\n      }\n    }}\n  />;\n}\n","\"use strict\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { Suspense, lazy, memo } from \"react\";\nimport { useAppSelector } from \"state/hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nconst AddressClaimModal = lazy(() => import(\"components/claim/AddressClaimModal\"));\nconst ConnectedAccountBlocked = lazy(() => import(\"components/ConnectedAccountBlocked\"));\nconst UniwalletModal = lazy(() => import(\"components/AccountDrawer/UniwalletModal\"));\nconst Banners = lazy(() => import(\"components/Banner/shared/Banners\").then((module) => ({ default: module.Banners })));\nconst OffchainActivityModal = lazy(\n  () => import(\"components/AccountDrawer/MiniPortfolio/Activity/OffchainActivityModal\").then((module) => ({\n    default: module.OffchainActivityModal\n  }))\n);\nconst UkDisclaimerModal = lazy(\n  () => import(\"components/TopLevelModals/UkDisclaimerModal\").then((module) => ({ default: module.UkDisclaimerModal }))\n);\nconst TestnetModeModal = lazy(\n  () => import(\"uniswap/src/features/testnets/TestnetModeModal\").then((module) => ({ default: module.TestnetModeModal }))\n);\nconst GetTheAppModal = lazy(\n  () => import(\"components/NavBar/DownloadApp/Modal\").then((module) => ({ default: module.GetTheAppModal }))\n);\nconst PrivacyPolicyModal = lazy(\n  () => import(\"components/PrivacyPolicy\").then((module) => ({ default: module.PrivacyPolicyModal }))\n);\nconst PrivacyChoicesModal = lazy(\n  () => import(\"components/PrivacyChoices\").then((module) => ({ default: module.PrivacyChoicesModal }))\n);\nconst FeatureFlagModal = lazy(() => import(\"components/FeatureFlagModal/FeatureFlagModal\"));\nconst TokenNotFoundModal = lazy(() => import(\"components/NotFoundModal/TokenNotFoundModal\"));\nconst PoolNotFoundModal = lazy(() => import(\"components/NotFoundModal/PoolNotFoundModal\"));\nconst IncreaseLiquidityModal = lazy(\n  () => import(\"pages/IncreaseLiquidity/IncreaseLiquidityModal\").then((module) => ({\n    default: module.IncreaseLiquidityModal\n  }))\n);\nconst RemoveLiquidityModal = lazy(\n  () => import(\"pages/RemoveLiquidity/RemoveLiquidityModal\").then((module) => ({ default: module.RemoveLiquidityModal }))\n);\nconst ClaimFeeModal = lazy(\n  () => import(\"pages/Pool/Positions/ClaimFeeModal\").then((module) => ({ default: module.ClaimFeeModal }))\n);\nconst RecoveryPhraseModal = lazy(\n  () => import(\"components/RecoveryPhrase/Modal\").then((module) => ({ default: module.RecoveryPhraseModal }))\n);\nconst PasskeysHelpModal = lazy(\n  () => import(\"uniswap/src/features/passkey/PasskeysHelpModal\").then((module) => ({ default: module.PasskeysHelpModal }))\n);\nconst DelegationMismatchModal = lazy(\n  () => import(\"components/delegation/DelegationMismatchModal\").then((module) => ({\n    default: module.default\n  }))\n);\nconst ModalLoadingFallback = memo(() => null);\nModalLoadingFallback.displayName = \"ModalLoadingFallback\";\nconst ModalWrapper = memo(({ Component, componentProps }) => <Suspense fallback={<ModalLoadingFallback />}>\r\n    <Component {...componentProps} />\r\n  </Suspense>);\nModalWrapper.displayName = \"ModalWrapper\";\nexport const modalRegistry = {\n  [ModalName.AddressClaim]: {\n    component: AddressClaimModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.AddressClaim\n  },\n  [ModalName.BlockedAccount]: {\n    component: ConnectedAccountBlocked,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.BlockedAccount\n  },\n  [ModalName.UniWalletConnect]: {\n    component: UniwalletModal,\n    // This modal is opened via WalletConnect Uri, not redux state, so it should always be mounted\n    shouldMount: () => true\n  },\n  [ModalName.Banners]: {\n    component: Banners,\n    shouldMount: () => true\n  },\n  [ModalName.OffchainActivity]: {\n    component: OffchainActivityModal,\n    shouldMount: () => true\n  },\n  [ModalName.UkDisclaimer]: {\n    component: UkDisclaimerModal,\n    shouldMount: () => true\n  },\n  [ModalName.TestnetMode]: {\n    component: TestnetModeModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.TestnetMode\n  },\n  [ModalName.GetTheApp]: {\n    component: GetTheAppModal,\n    shouldMount: () => true\n  },\n  [ModalName.PrivacyPolicy]: {\n    component: PrivacyPolicyModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.PrivacyPolicy\n  },\n  [ModalName.PrivacyChoices]: {\n    component: PrivacyChoicesModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.PrivacyChoices\n  },\n  [ModalName.FeatureFlags]: {\n    component: FeatureFlagModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.FeatureFlags\n  },\n  [ModalName.AddLiquidity]: {\n    component: IncreaseLiquidityModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.AddLiquidity\n  },\n  [ModalName.RemoveLiquidity]: {\n    component: RemoveLiquidityModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.RemoveLiquidity\n  },\n  [ModalName.ClaimFee]: {\n    component: ClaimFeeModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.ClaimFee\n  },\n  [ModalName.RecoveryPhrase]: {\n    component: RecoveryPhraseModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.RecoveryPhrase\n  },\n  [ModalName.TokenNotFound]: {\n    component: TokenNotFoundModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.TokenNotFound\n  },\n  [ModalName.PoolNotFound]: {\n    component: PoolNotFoundModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.PoolNotFound\n  },\n  // [ModalName.DevFlags]: {\n  //   component: DevFlagsBox,\n  //   shouldMount: () => true,\n  // },\n  [ModalName.PasskeysHelp]: {\n    component: PasskeysHelpModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.PasskeysHelp\n  },\n  [ModalName.DelegationMismatch]: {\n    component: DelegationMismatchModal,\n    shouldMount: (state) => state.application.openModal?.name === ModalName.DelegationMismatch\n  }\n};\nexport const ModalRenderer = ({\n  modalName,\n  componentProps\n}) => {\n  const state = useAppSelector((state2) => state2);\n  const modalState = useModalState(modalName);\n  const config = modalRegistry[modalName];\n  if (!config) {\n    return null;\n  }\n  const { component: Component, shouldMount } = config;\n  if (!shouldMount(state)) {\n    return null;\n  }\n  return <ModalWrapper Component={Component} componentProps={{ ...componentProps, ...modalState }} />;\n};\n","\"use strict\";\nimport { ModalRenderer } from \"components/TopLevelModals/modalRegistry\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useAccountRiskCheck from \"hooks/useAccountRiskCheck\";\nimport { PageType, useIsPage } from \"hooks/useIsPage\";\nimport { PasskeysHelpModalTypeAtom } from \"hooks/usePasskeyAuthWithHelpModal\";\nimport { useAtomValue } from \"jotai/utils\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useUnitagByAddress } from \"uniswap/src/features/unitags/hooks\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { isBetaEnv, isDevEnv } from \"utilities/src/environment/env\";\nexport default function TopLevelModals() {\n  const isLandingPage = useIsPage(PageType.LANDING);\n  const account = useAccount();\n  const { unitag } = useUnitagByAddress(account.address);\n  const accountName = unitag?.username ? unitag.username + \".uni.eth\" : account.address ? shortenAddress(account.address) : void 0;\n  useAccountRiskCheck(account.address);\n  const passkeysHelpModalType = useAtomValue(PasskeysHelpModalTypeAtom);\n  const shouldShowDevFlags = isDevEnv() || isBetaEnv();\n  if (isLandingPage) {\n    return <>\r\n        <ModalRenderer modalName={ModalName.PrivacyPolicy} />\r\n        <ModalRenderer modalName={ModalName.PrivacyChoices} />\r\n        <ModalRenderer modalName={ModalName.GetTheApp} />\r\n        <ModalRenderer modalName={ModalName.FeatureFlags} />\r\n        <ModalRenderer modalName={ModalName.UniWalletConnect} />\r\n        <ModalRenderer modalName={ModalName.BlockedAccount} />\r\n        {shouldShowDevFlags && <ModalRenderer modalName={ModalName.DevFlags} />}\r\n      </>;\n  }\n  return <>\r\n      <ModalRenderer modalName={ModalName.AddressClaim} />\r\n      <ModalRenderer modalName={ModalName.BlockedAccount} />\r\n      <ModalRenderer modalName={ModalName.UniWalletConnect} />\r\n      <ModalRenderer modalName={ModalName.Banners} />\r\n      <ModalRenderer modalName={ModalName.OffchainActivity} />\r\n      <ModalRenderer modalName={ModalName.TransactionConfirmation} />\r\n      <ModalRenderer modalName={ModalName.UkDisclaimer} />\r\n      <ModalRenderer modalName={ModalName.TestnetMode} componentProps={{ showCloseButton: true }} />\r\n      <ModalRenderer modalName={ModalName.GetTheApp} />\r\n      <ModalRenderer modalName={ModalName.PrivacyPolicy} />\r\n      <ModalRenderer modalName={ModalName.PrivacyChoices} />\r\n      <ModalRenderer modalName={ModalName.FeatureFlags} />\r\n      {shouldShowDevFlags && <ModalRenderer modalName={ModalName.DevFlags} />}\r\n      <ModalRenderer modalName={ModalName.AddLiquidity} />\r\n      <ModalRenderer modalName={ModalName.RemoveLiquidity} />\r\n      <ModalRenderer modalName={ModalName.ClaimFee} />\r\n      <ModalRenderer modalName={ModalName.RecoveryPhrase} />\r\n      <ModalRenderer modalName={ModalName.PasskeysHelp} componentProps={{ type: passkeysHelpModalType, accountName }} />\r\n      <ModalRenderer modalName={ModalName.DelegationMismatch} />\r\n    </>;\n}\n","\"use strict\";\nimport { useEffect } from \"react\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { useIsBlocked } from \"uniswap/src/features/trm/hooks\";\nexport default function useAccountRiskCheck(account) {\n  const dispatch = useAppDispatch();\n  const { isBlocked, isBlockedLoading } = useIsBlocked(account || void 0);\n  useEffect(() => {\n    if (!account) {\n      return;\n    }\n    if (isBlockedLoading) {\n      return;\n    }\n    if (isBlocked) {\n      dispatch(setOpenModal({ name: ModalName.BlockedAccount }));\n    }\n  }, [account, isBlockedLoading, isBlocked, dispatch]);\n}\n","\"use strict\";\nimport { ChainConnectivityWarning } from \"components/ChainConnectivityWarning\";\nimport ClaimPopup from \"components/Popups/ClaimPopup\";\nimport { PopupRenderer } from \"components/Popups/PopupRenderer\";\nimport TopLevelModals from \"components/TopLevelModals\";\nexport default function AppChrome() {\n  return <>\r\n      <PopupRenderer />\r\n      <ClaimPopup />\r\n      <ChainConnectivityWarning />\r\n      <TopLevelModals />\r\n    </>;\n}\n","\"use strict\";\nimport { AlertTriangle } from \"react-feather\";\nimport styled from \"styled-components\";\nexport const CautionTriangle = styled(AlertTriangle)`\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n`;\n"],"names":["CardBGImage","styled","span","uImage","desaturate","CardBGImageSmaller","xlUnicorn","CardNoise","noise","CardSection","AutoColumn","disabled","Break","div","updateInterval","now","setNow","useState","Date","useInterval","useCallback","_cn","BodyRow","theme","neutral1","Link","ExternalLink","black","TitleRow","TitleText","Wrapper","surface1","surface3","CloseButton","tamaguiStyled","X","ClickableTamaguiStyle","size","iconSizes","icon20","ChainConnectivityWarning","defaultChainId","useEnabledChains","hide","setHide","isMonadDownFlag","useFeatureFlag","FeatureFlags","MonadTestnetDown","swapInputChainId","chainId","useUniswapContext","info","getChainInfo","label","isLandingPage","useIsPage","PageType","LANDING","waitMsBeforeWarning","useMemo","blockWaitMsBeforeWarning","DEFAULT_MS_BEFORE_WARNING","machineTime","useMachineTimeMs","AVERAGE_L1_BLOCK_TIME_MS","blockTime","useCurrentBlockTimestamp","refetchInterval","ms","warning","Boolean","Number","isMonadDown","UniverseChainId","MonadTestnet","className","CautionTriangle","Trans","i18nKey","onClick","Mainnet","values","network","statusPage","components","link","href","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Heart","forwardRef","_ref","ref","_ref$color","color","_ref$size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","displayName","_cn3","_cn2","rotateKeyframe","ClaimPopup","unclaimedAmount","account","useAccount","isOpen","claimPopupIsOpen","toggleModal","toggleClaimPopup","useModalState","ModalName","showClaimModal","toggleClaimModal","AddressClaim","userHasAvailableclaim","useUserHasAvailableClaim","address","useUserUnclaimedAmount","useEffect","style","Flex","$platform-web","position","maxWidth","zIndex","animation","gap","borderRadius","padding","overflow","background","boxShadow","TouchableArea","onPress","ml","img","src","tokenLogo","Text","variant","mt","toFixed","groupSeparator","role","aria-label","textAlign","heart","Button","POPUP_MAX_WIDTH","Toast","children","shadowProps","useShadowPropsMedium","row","alignItems","backgroundColor","borderColor","borderWidth","justifyContent","left","mx","opacity","$sm","flexShrink","Icon","Content","Title","Description","Action","Close","e","stopPropagation","MismatchToastItem","React","props","t","useTranslation","openModal","DelegationMismatch","onDismiss","useEvent","sendAnalyticsEvent","InterfaceEventNameLocal","LimitedWalletSupportToastDismissed","valueOf","LimitedWalletSupportToastLearnMoreButtonClicked","Trace","logImpression","eventOnTrigger","LimitedWalletSupportToastShown","WalletIcon","iconSrc","connector","icon","WalletAlertBadge","walletIconSize","spacing","spacing32","walletIcon","_cn4","ToastRegularSimple","text","isToastOneLine","p","concatClassName","_cn7","_cn6","_cn5","FailedNetworkSwitchPopup","onClose","chainInfo","useIsSupportedChainId","AlertTriangleFilled","flexWrap","ActivityPopupContent","activity","success","status","TransactionStatus","Confirmed","cancelled","pending","Pending","showPortfolioLogo","offchainOrderDetails","colors","useSporeColors","isBridgeActivity","outputChainId","py","px","PortfolioLogo","currencies","accountAddress","otherAccount","customIcon","BridgeIcon","title","descriptor","LoaderV3","accent1","variable","TransactionPopupContent","hash","transaction","useTransaction","formatNumber","useFormatter","data","useQuery","getTransactionToActivityQueryOptions","explorerUrlUnavailable","isPendingTx","batchInfo","window","open","getExplorerLink","ExplorerDataType","TRANSACTION","UniswapXOrderPopupContent","orderHash","order","useOrder","openOffchainActivityModal","useOpenOffchainActivityModal","getSignatureToActivityQueryOptions","inputLogo","logos","outputLogo","PopupItem","content","supportedChainId","useSupportedChainId","type","PopupType","Transaction","Order","FailedSwitchNetwork","failedSwitchNetwork","SwitchNetwork","NetworkLogo","getSwitchNetworkTitle","action","Bridge","BridgeToast","inputChainId","Mismatch","SwapTab","Swap","Send","originChain","targetChain","lineHeight","Shuffle","PopupRenderer","popupRegistry","addListener","removeAfterMs","toast","removePopup","popKey","duration","DEFAULT_TXN_DISMISS_MS","onAutoClose","Toaster","pauseWhenPageIsHidden","expand","toastOptions","border","AddressClaimModal","lazy","ConnectedAccountBlocked","UniwalletModal","Banners","then","module","default","OffchainActivityModal","UkDisclaimerModal","TestnetModeModal","GetTheAppModal","PrivacyPolicyModal","PrivacyChoicesModal","FeatureFlagModal","TokenNotFoundModal","PoolNotFoundModal","IncreaseLiquidityModal","RemoveLiquidityModal","ClaimFeeModal","RecoveryPhraseModal","PasskeysHelpModal","DelegationMismatchModal","ModalLoadingFallback","memo","ModalWrapper","Component","componentProps","Suspense","fallback","modalRegistry","component","shouldMount","state","application","name","BlockedAccount","UniWalletConnect","OffchainActivity","UkDisclaimer","TestnetMode","GetTheApp","PrivacyPolicy","PrivacyChoices","AddLiquidity","RemoveLiquidity","ClaimFee","RecoveryPhrase","TokenNotFound","PoolNotFound","PasskeysHelp","ModalRenderer","modalName","useAppSelector","state2","modalState","config","TopLevelModals","unitag","useUnitagByAddress","accountName","username","shortenAddress","dispatch","useAppDispatch","isBlocked","isBlockedLoading","useIsBlocked","setOpenModal","useAccountRiskCheck","passkeysHelpModalType","useAtomValue","PasskeysHelpModalTypeAtom","shouldShowDevFlags","isDevEnv","isBetaEnv","DevFlags","TransactionConfirmation","showCloseButton","AppChrome","AlertTriangle","deprecated_accentWarning"],"sourceRoot":""}