{"version":3,"file":"static/js/1422.87dfb11c.chunk.js","mappings":"sJACA,SAAiB,C,+HCyCjB,QAnCA,UAAuB,MACrBA,EAAK,YACLC,EAAW,OACXC,EAAM,WACNC,IAEA,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACd,OAAO,SAACC,EAAAA,MAAKA,CAACC,KAAMC,EAAAA,UAAUC,SAAUC,YAAaR,EAAQS,QAASR,EAAYS,QAAS,E,UACvF,UAACC,MAAAA,CAAIC,UAfE,oT,WAgBL,SAACC,EAAAA,EAAaA,CAACZ,WAAYA,KAC3B,SAACU,MAAAA,CAAIC,UAjBA,2hB,UAyBH,SAACE,EAAAA,oBAAmBA,CAACC,MAAM,YAAYC,KAAK,gBAG9C,SAACC,EAAAA,KAAIA,CAACC,UAAU,SAASC,QAAQ,W,SAC9BrB,KAGH,SAACmB,EAAAA,KAAIA,CAACF,MAAM,YAAYG,UAAU,SAASC,QAAQ,Q,SAChDpB,KAGH,SAACqB,EAAAA,EAAMA,CAACC,GAAG,aAAaL,KAAK,QAAQM,QAASrB,E,SAC3CC,EAAE,8BAIb,E,kHC1BA,QAVA,WACE,MAAM,EAAEA,IAAMC,EAAAA,EAAAA,mBACR,OAAEH,EAAM,WAAEC,IAAesB,EAAAA,EAAAA,GAAcjB,EAAAA,UAAUkB,eACvD,OAAO,SAACC,EAAAA,EAAaA,CACnBzB,OAAQA,EACRC,WAAYA,EACZH,MAAOI,EAAE,wBACTH,YAAaG,EAAE,+BAEnB,C","sources":["webpack://@uniswap/interface/./src/components/NotFoundModal/NotFoundModal.tsx?58f0","components/NotFoundModal/NotFoundModal.tsx","components/NotFoundModal/TokenNotFoundModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","\"use strict\";\nimport { GetHelpHeader } from \"components/Modal/GetHelpHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Flex, Text } from \"ui/src\";\nimport { AlertTriangleFilled } from \"ui/src/components/icons/AlertTriangleFilled\";\nimport { Modal } from \"uniswap/src/components/modals/Modal\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nfunction NotFoundModal({\n  title,\n  description,\n  isOpen,\n  closeModal\n}) {\n  const { t } = useTranslation();\n  return <Modal name={ModalName.NotFound} isModalOpen={isOpen} onClose={closeModal} padding={0}>\r\n      <Flex centered gap=\"$gap12\" px=\"$spacing24\" py=\"$spacing24\">\r\n        <GetHelpHeader closeModal={closeModal} />\r\n        <Flex\n    centered\n    backgroundColor=\"$surface2\"\n    borderRadius=\"$rounded12\"\n    p=\"$spacing12\"\n    mt=\"$spacing16\"\n    mb=\"$spacing8\"\n  >\r\n          <AlertTriangleFilled color=\"$neutral3\" size=\"$icon.24\" />\r\n        </Flex>\r\n\r\n        <Text textAlign=\"center\" variant=\"heading3\">\r\n          {title}\r\n        </Text>\r\n\r\n        <Text color=\"$neutral2\" textAlign=\"center\" variant=\"body2\">\r\n          {description}\r\n        </Text>\r\n\r\n        <Button mt=\"$spacing16\" size=\"large\" onPress={closeModal}>\r\n          {t(\"common.button.goBack\")}\r\n        </Button>\r\n      </Flex>\r\n    </Modal>;\n}\nexport default NotFoundModal;\n","\"use strict\";\nimport NotFoundModal from \"components/NotFoundModal/NotFoundModal\";\nimport { useModalState } from \"hooks/useModalState\";\nimport { useTranslation } from \"react-i18next\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nfunction TokenNotFoundModal() {\n  const { t } = useTranslation();\n  const { isOpen, closeModal } = useModalState(ModalName.TokenNotFound);\n  return <NotFoundModal\n    isOpen={isOpen}\n    closeModal={closeModal}\n    title={t(\"token.notFound.title\")}\n    description={t(\"token.notFound.description\")}\n  />;\n}\nexport default TokenNotFoundModal;\n"],"names":["title","description","isOpen","closeModal","t","useTranslation","Modal","name","ModalName","NotFound","isModalOpen","onClose","padding","div","className","GetHelpHeader","AlertTriangleFilled","color","size","Text","textAlign","variant","Button","mt","onPress","useModalState","TokenNotFound","NotFoundModal"],"sourceRoot":""}